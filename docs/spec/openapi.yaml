openapi: 3.0.0
info:
  title: Asana
  description: "This is the interface for interacting with the [Asana Platform](https://developers.asana.com).\
    \ Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml)."
  termsOfService: https://asana.com/terms
  contact:
    name: Asana Support
    url: https://asana.com/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
  x-public-description: "This is the interface for interacting with the [Asana Platform](https://developers.asana.com).\
    \ Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml)."
  x-docs-schema-whitelist:
  - AsanaResource
  - AsanaNamedResource
  - AuditLogEvent
  - AttachmentResponse
  - AttachmentCompact
  - BatchResponse
  - CustomFieldSettingResponse
  - CustomFieldSettingCompact
  - CustomFieldResponse
  - CustomFieldCompact
  - EnumOption
  - EventResponse
  - ErrorResponse
  - GoalResponse
  - GoalCompact
  - GoalMembershipCompact
  - GoalMembershipBase
  - GoalMembershipResponse
  - GoalRelationshipResponse
  - GoalRelationshipCompact
  - JobResponse
  - JobCompact
  - OrganizationExportResponse
  - OrganizationExportCompact
  - PortfolioMembershipResponse
  - PortfolioMembershipCompact
  - PortfolioResponse
  - PortfolioCompact
  - ProjectBriefResponse
  - ProjectBriefCompact
  - ProjectMembershipCompactResponse
  - ProjectMembershipNormalResponse
  - ProjectMembershipCompact
  - ProjectResponse
  - ProjectCompact
  - ProjectStatusResponse
  - ProjectStatusCompact
  - ProjectTemplateCompact
  - ProjectTemplateResponse
  - RuleTriggerResponse
  - SectionResponse
  - SectionCompact
  - StatusUpdateResponse
  - StatusUpdateCompact
  - StoryResponse
  - StoryCompact
  - TagResponse
  - TagCompact
  - TaskResponse
  - TaskCompact
  - TaskCountResponse
  - TeamMembershipResponse
  - TeamMembershipCompact
  - TeamResponse
  - TeamCompact
  - TimePeriodResponse
  - TimePeriodCompact
  - UserTaskListResponse
  - UserTaskListCompact
  - UserResponse
  - UserCompact
  - WebhookFilter
  - WebhookResponse
  - WebhookCompact
  - WorkspaceMembershipResponse
  - WorkspaceMembershipCompact
  - WorkspaceResponse
  - WorkspaceCompact
servers:
- url: https://app.asana.com/api/1.0
  description: Main endpoint.
security:
- personalAccessToken: []
- oauth2: []
tags:
- name: Allocations
  description: "An allocation object represents how much of a resource (e.g. person,\
    \ team) is dedicated to a specific work object (e.g. project, portfolio) over\
    \ a specific period of time. The effort value of an allocation object can be a\
    \ percentage or number of hours."
- name: Attachments
  description: "An *attachment* object represents any file attached to a task in Asana,\
    \ whether it’s an uploaded file or one associated via a third-party service such\
    \ as Dropbox or Google Drive."
- name: Audit log API
  description: |-
    Asana's audit log is an immutable log of [important events](/docs/audit-log-events#supported-audit-log-events) in your organization's Asana instance.

    The audit log API allows you to monitor and act upon important security and compliance-related changes. Organizations might use this API endpoint to:

    * Set up proactive alerting with a Security Information and Event Management (SIEM) tool like [Splunk](https://asana.com/guide/help/api/splunk)
    * Conduct reactive investigations when a security incident takes place
    * Visualize key domain data in aggregate to identify security trends

    Note that since the API provides insight into what is happening in an Asana instance, the data is [read-only](/reference/getauditlogevents). That is, there are no "write" or "update" endpoints for audit log events.

    Only [Service Accounts](https://asana.com/guide/help/premium/service-accounts) in [Enterprise Domains](https://asana.com/enterprise) can access audit log API endpoints. Authentication with a Service Account's [personal access token](/docs/personal-access-token) is required.

    For a full list of supported events, see [supported AuditLogEvents](/docs/audit-log-events#supported-audit-log-events).
- name: Batch API
  description: |-
    There are many cases where you want to accomplish a variety of work in the Asana API but want to minimize the number of HTTP requests you make. For example:

    * Modern browsers limit the number of requests that a single web page can
      make at once.
    * Mobile apps will use more battery life to keep the cellular radio on
      when making a series of requests.
    * There is an overhead cost to developing software that can make multiple
      requests in parallel.
    * Some cloud platforms handle parallelism poorly, or disallow it
      entirely.


    To make development easier in these use cases, Asana provides a **batch API** that enables developers to perform multiple “actions” by making only a single HTTP request.

    #### Making a batch request

    To make a batch request, send a `POST` request to `/batch`. Like other `POST` endpoints, the body should contain a `data` envelope. Inside this envelope should be a single `actions` field, containing a list of “action” objects.  Each action represents a standard request to an existing endpoint in the Asana API.

    **The maximum number of actions allowed in a single batch request is 10**. Making a batch request with no actions in it will result in a `400 Bad Request`.

    When the batch API receives the list of actions to execute, it will dispatch those actions to the already-implemented endpoints specified by the `relative_path` and `method` for each action. This happens in parallel, so all actions in the request will be processed simultaneously. There is no guarantee of the execution order for these actions, nor is there a way to use the output of one action as the input of another action (such as creating a task and then commenting on it).

    The response to the batch request will contain (within the `data` envelope) a list of result objects, one for each action. The results are guaranteed to be in the same order as the actions in the request (e.g., the first result in the response corresponds to the first action in the request)

    The batch API will always attempt to return a `200 Success` response with individual result objects for each individual action in the request. Only in certain cases (such as missing authorization or malformed JSON in the body) will the entire request fail with another status code. Even if every individual action in the request fails, the batch API will still return a `200 Success` response, and each result object in the response will contain the errors encountered with each action.

    #### Rate limiting

    The batch API fully respects all of our rate limiting. This means that a batch request counts against *both* the standard rate limiter and the concurrent request limiter as though you had made a separate HTTP request for every individual action. For example, a batch request with five actions counts as five separate requests in the standard rate limiter, and counts as five concurrent requests in the concurrent request limiter. The batch request itself incurs no cost.

    If any of the actions in a batch request would exceed any of the enforced limits, the *entire* request will fail with a `429 Too Many Requests` error. This is to prevent the unpredictability of which actions might succeed if not all of them could succeed.

    #### Restrictions

    Not every endpoint can be accessed through the batch API. Specifically, the following actions cannot be taken and will result in a `400 Bad Request` for that action:

    * Uploading attachments
    * Creating, getting, or deleting organization exports
    * Any SCIM operations
    * Nested calls to the batch API
- name: Custom fields
  description: |-
    _Note: Custom fields are a premium feature. Integrations which work with custom fields need to handle an assortment of use cases for free and premium users in context of free and premium organizations. For a detailed examination of which data users will have access in different circumstances, review the section below on access control._

    In the Asana application, tasks, projects, and portfolios can hold user-specified [custom fields](https://asana.com/guide/help/premium/custom-fields) which provide extra information (e.g., a "priority" property with an associated value, or a number representing the time required to complete a task). This lets a user define the type of information that each item within a project or portfolio can contain in addition to the built-in fields that Asana provides.
    `display_value` is a read-only field that will always be a string. For apps that use custom fields, this is a great way to safely display/export the value of a custom field, regardless of its type. We suggest apps use this field in order to future-proof for changes to custom fields.

    #### Characteristics of custom fields

    * There is metadata that defines the custom field. This metadata can be shared across an entire workspace, or be specific to a project or portfolio.
    * Creating a custom field setting on a project or portfolio means each direct child will have the custom field. This is conceptually akin to adding columns in a database or a spreadsheet: every task (row) in the project (table) can contain information for that field, including "blank" values (i.e., `null` data). For portfolio custom fields, every project (row) in the portfolio (table) will contain information for the custom field.
    * Custom field settings only go one child deep. This means that a custom field setting on a portfolio will give each project the custom field, but not each task within those projects.
    * Tasks have custom field _values_ assigned to them.

    #### Types of custom fields

    Integrations using custom fields need to be aware of the six basic types that a custom field can adopt. These types are:

    * `text` - an arbitrary, relatively short string of text
    * `number` - a number with a defined level of precision
    * `enum` - a selection of a single option from a defined list of options (i.e., mutually exclusive selections)
    * `multi_enum` - a selection of one or more options from a defined list of options (i.e., mutually inclusive selections)
    * `date` - a reference date with an optional time value
    * `people` - a list of active contributors (i.e., where their relationship to the work is defined in the custom field title)

    #### Example use case

    Consider an organization that has defined a custom field for "Priority". This field is of `enum` type and can have user-defined values of `Low`, `Medium`, or `High`. This is the field metadata, and it is visible within, and shared across, the entire organization.

    A project is then created in the organization, called "Bugs", and the "Priority" custom field is associated with that project. This will allow all tasks within the "Bugs" project to have an associated "Priority".

    A new task is created within "Bugs". This task, then, has a field named "Priority" which can take on the custom field value of one of `[null]`, `Low`, `Medium`, and `High`.

    #### Custom fields in the API

    These custom fields are accessible via the API through a number of endpoints at the top level (e.g. `/custom_fields` and `/custom_field_settings`) and through requests on workspaces, portfolios, projects, and tasks resources. The API also provides a way to fetch both the metadata and data which define each particular custom field, so that a client application may render proper UI to display or edit the values.

    Text fields are currently limited to 1024 characters. On tasks, their custom field value will have a `text_value` property to represent this field.

    Number fields can have an arbitrary `precision` associated with them; for example, a precision of `2` would round its value to the second (hundredths) place (e.g., `1.2345` would round to `1.23`). On tasks, the custom field value will have a `number_value` property to represent this field.

    #### Enum fields

    Enum fields represent a selection from a list of options. On the metadata, they will contain all of the options in an array. Each option has 4 properties:

    * `gid` - the GID of this enum option. Note that this is the GID of the individual _option_. The custom field itself has a separate `gid`.
    * `name` - the name of the option (e.g., "Choice #1")
    * `enabled` - whether this field is enabled. Disabled fields are not available to choose from when disabled, and are visually hidden in the Asana application, but they remain in the metadata for custom field values which were set to the option before the option was disabled.
    * `color` - a color associated with this choice.

    On the task's custom field value, the enum will have an `enum_value` property which will be the same as one of the choices from the list defined in the custom field metadata.

    #### Querying an organization for its custom fields

    For custom fields shared across the workspace or organization, the workspace [can be queried](/reference/getcustomfieldsforworkspace) for its list of defined custom fields. Like other collection queries, the fields will be returned as a compact record; slightly different from most other compact records is the fact that the compact record for custom fields includes `type` as well as `gid` and `name`.

    #### Accessing custom field definitions

    The [custom fields](/reference/getcustomfield) reference describes how the metadata which defines a custom field is accessed. A GET request with a `gid` can be issued on the `/custom_fields` endpoint to fetch the full definition of a single custom field given its `gid` from (for instance) listing all custom fields on a workspace, or getting the `gid` from a custom field settings object or a task.

    #### Associating custom fields with a project or portfolio

    A mapping between a custom field and a project or portfolio is handled with a [custom field settings](/reference/custom-field-settings) object. This object contains a reference for each of the custom fields and the project or portfolio, as well as additional information about the status of that particular custom field (e.g., `is_important`, which defines whether or not the custom field will appear in the list/grid on the Asana application).

    #### Accessing custom field values on tasks or projects

    The [tasks](/reference/gettask) reference has information on how custom fields look on tasks. custom fields will return as an array on the property `custom_fields`, and each entry will contain, side-by-side, the compact representation of the custom field metadata and a `{typename}_value` property that stores the value set for the custom field.

    Of particular note is that the top-level `gid` of each entry in the `custom_fields` array is the `gid` of the custom field metadata, as it is the compact representation of this metadata. This can be used to refer to the full metadata by making a request to the `/custom_fields/{custom_fields_id}` endpoint as described above.

    Custom fields can be set just as in the Asana-defined fields on a task via `POST` or `PUT` requests. You can see an example in the [update a task](/reference/updatetask) endpoint.

    Custom fields on projects follow this same pattern.

    #### Warning: Program defensively with regards to custom field definitions

    Asana application users have the ability to change the definitions of custom field metadata. This means that as you write scripts or applications to work with them, it is possible for the definitions to change at any time, which may cause an application using them to break or malfunction if it makes assumptions about the metadata for a particular custom field. When using custom fields, it is a good idea to program *defensively*, meaning you your application should double-check that the custom field metadata are what it expects.

    Storing the state of the custom field metadata for too long if you dynamically create a model for it can cause your model to become out of sync with the model stored in Asana. For example, if you encounter an `enum` value on a task that does not match any option in your metadata model, your metadata model has become out of date with the custom field metadata.

    #### Enabled and disabled values

    When information that is contained in a custom field value loses a logical association with its metadata definition, the value becomes disabled. This can happen in a couple of simple ways, for example, if you remove the custom field metadata from a project, or move a task with a custom field to a different project which does not have the custom field metadata associated with it. The value remains on the task, and the custom field metadata can still be found and examined, but as the context in which the custom field makes sense is gone, the custom field cannot change its value; it can only be cleared.

    _Note: Tasks that are associated with multiple projects do not become disabled, so long as at least one of the projects is still associated with the custom field metadata. In other words, tasks with multiple projects will retain logically associated to the set of custom field metadata represented by all of their projects._

    Moving the task back under a project with that custom field applied to it or applying the custom field metadata to the current project will return the custom field value to an enabled state. In this scenario, the custom field will be re-enabled and editable again.

    In the Asana application, disabled fields are grayed out and not allowed to change, other than to be discarded. In the API, we return a property `enabled: false` to inform the external application that the value has been disabled.

    Note that the API enforces the same operations on disabled custom field values as hold in the Asana application: they may not have their values changed, since the lack of context for the values of a custom field in general doesn't provide enough information to know what new values should be. Setting the custom field value to `null` will clear and remove the custom field value from the task.

    #### Custom field access control

    Custom fields are a complex feature of the Asana platform, and their access in the Asana application and in the API vary based on the status of the user and project. When building your application, it is best to be defensive and not assume the given user will have read or write access to a custom field, and fail gracefully when this occurs.
- name: Custom field settings
  description: "Custom fields are attached to a particular project with the custom\
    \ field settings resource. This resource both represents the many-to-many join\
    \ of the custom field and project as well as stores information that is relevant\
    \ to that particular pairing. For instance, the `is_important` property determines\
    \ some possible application-specific handling of that custom field."
- name: Events
  description: |-
    An event is an object representing a change to a resource that was observed by an event subscription. Event streams rely on the same infrastructure as webhooks, which ensures events are delivered within a minute (on average). This system is designed for at most once delivery, meaning in exceptional circumstances a small number of events may be missing from the stream. For this reason, if your use case requires strong guarantees about processing all changes on a resource and cannot tolerate any missing events, regardless of how rare that might be, we recommend building a fallback polling system that fetches the resource periodically as well. Note that while webhooks cannot be replayed once delivered, events are retrievable from the event stream for 24 hours after being processed.

    In general, requesting events on a resource is faster and subject to higher rate limits than requesting the resource itself. Additionally, change events "bubble up" (e.g., listening to events on a project would include when stories are added to tasks in the project, and even to subtasks).

    Establish an initial sync token by making a request with no sync token. The response will be a `412 Precondition Failed` error - the same as if the sync token had expired.

    Subsequent requests should always provide the sync token from the immediately preceding call.

    Sync tokens may not be valid if you attempt to go "backward" in the history by requesting previous tokens, though re-requesting the current sync token is generally safe, and will always return the same results.

    When you receive a `412 Precondition Failed` error, it means that the sync token is either invalid or expired. If you are attempting to keep a set of data in sync, this signals you may need to re-crawl the data.

    Sync tokens always expire after 24 hours, but may expire sooner, depending on load on the service.
- name: Goals
  description: A goal is an object in the goal-tracking system that helps your organization
    drive measurable results.
- name: Goal relationships
  description: "A goal relationship is an object representing the relationship between\
    \ a goal and another goal, a project, a task, or a portfolio."
- name: Jobs
  description: |-
    Jobs represent processes that handle asynchronous work. A job created when an endpoint requests an action that will be handled asynchronously, such as project or task duplication.

    Only the creator of the duplication process can access the duplication status of the new object.

    *Note*: With any work that is handled asynchronously (e.g., [project instantation from a template](/reference/instantiateproject), duplicating a [task](/reference/duplicatetask) or [project](/reference/duplicateproject), etc.), the *intermittent states* of newly-created objects may not be consistent. That is, object properties may return different values each time when polled until the job `status` has returned a `succeeded` value.
- name: Organization exports
  description: |-
    An `organization_export` object represents a request to export the complete data of an organization in JSON format.

    To export an organization using this API:

    * Create an `organization_export`
      [request](/reference/createorganizationexport)
      and store the ID that is returned.
    * Request the `organization_export` every few minutes, until the
      `state` field contains ‘finished’.
    * Download the file located at the URL in the `download_url` field. * Exports can take a long time, from several minutes to a few hours
      for large organizations.


    *Note: These endpoints are only available to [Service Accounts](https://asana.com/guide/help/premium/service-accounts) of an [Enterprise](https://asana.com/enterprise) organization.*
- name: Portfolios
  description: |-
    A portfolio gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [status update](/reference/status-updates).
    Portfolios have some restrictions on size. Each portfolio has a max of 500 items and, like projects, a maximum of 20 custom fields.
- name: Portfolio memberships
  description: This object determines if a user is a member of a portfolio.
- name: Projects
  description: |-
    A project represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. A project exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.

    Projects in organizations are shared with a single team. Currently, the team of a project cannot be changed via the API. Non-organization workspaces do not have teams and so you should not specify the team of project in a regular workspace.

    Followers of a project are a subset of the members of that project. Followers of a project will receive all updates including tasks created, added and removed from that project. Members of the project have access to and will receive status updates of the project. Adding followers to a project will add them as members if they are not already, removing followers from a project will not affect membership.

    **Note:** You can use certain project endpoints to operate on [user task lists](/reference/user-task-lists) ([My Tasks](https://asana.com/guide/help/fundamentals/my-tasks)) by substituting the `{project_gid}` with the `{user_task_list_gid}`. For example, you can perform operations on the custom fields of a user task list by using the following projects endpoints: [Add a custom field to a project](/reference/addcustomfieldsettingforproject), [Remove a custom field from a project](/reference/removecustomfieldsettingforproject) and [Get a project's custom fields](/reference/getcustomfieldsettingsforproject)
- name: Project briefs
  description: |-
    A project brief object represents a rich text document that describes a project.

    Please note that this API is in *preview*, and is expected to change. This API is to be used for development and testing only as an advance view into the upcoming rich text format experience in the task description. For more information, see [this post](https://forum.asana.com/t/project-brief-api-now-available-as-a-preview/150885) in the developer forum.
- name: Project memberships
  description: "With the introduction of “comment-only” projects in Asana, a user’\
    s membership in a project comes with associated permissions. These permissions\
    \ (i.e., whether a user has full access to the project or comment-only access)\
    \ are accessible through the project memberships endpoints described here."
- name: Project statuses
  description: |-
    *Deprecated: new integrations should prefer using [status updates](/reference/status-updates)*

    A project status is an update on the progress of a particular project,
    and is sent out to all project followers when created. These updates
    include both text describing the update and a color code intended to
    represent the overall state of the project: "green" for projects that
    are on track, "yellow" for projects at risk, "red" for projects that
    are behind, and "blue" for projects on hold.

    Project statuses can be created and deleted, but not modified.
- name: Project templates
  description: |-
    A project template is an object that allows new projects to be created
    with a predefined setup, which may include tasks, sections, rules, etc.
    It simplifies the process of running a workflow that involves a similar
    set of work every time.


    Project templates in organizations are shared with a single team. Currently, the
    team of a project template cannot be changed via the API.
- name: Sections
  description: |-
    A section is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.

    Sections are largely a shared idiom in Asana’s API for both list and board views of a project regardless of the project’s layout.

    The ‘memberships’ property when [getting a task](/reference/gettask) will return the information for the section or the column under ‘section’ in the response.
- name: Status updates
  description: |-
    A status update is an update on the progress of a particular object,
    and is sent out to all followers when created. These updates
    include both text describing the update and a `status_type` intended to
    represent the overall state of the project. These include: `on_track` for projects that
    are on track, `at_risk` for projects at risk, `off_track` for projects that
    are behind, and `on_hold` for projects on hold.

    Status updates can be created and deleted, but not modified.
- name: Stories
  description: |-
    *See [our forum post](https://forum.asana.com/t/no-more-parsing-story-text-new-fields-on-stories/42924) for more info on when conditional fields are returned.*

    A story represents an activity associated with an object in the Asana system. Stories are generated by the system whenever users take actions such as creating or assigning tasks, or moving tasks between projects. "Comments" are also a form of user-generated story.
- name: Tags
  description: |-
    A tag is a label that can be attached to any task in Asana. It exists in a single workspace or organization.

    Tags have some metadata associated with them, but it is possible that we will simplify them in the future so it is not encouraged to rely too heavily on it. Unlike projects, tags do not provide any ordering on the tasks they are associated with.
- name: Tasks
  description: |-
    The task is the basic object around which many operations in Asana are centered. In the Asana application, multiple tasks populate the middle pane according to some view parameters, and the set of selected tasks determines the more detailed information presented in the details pane.

    Sections are unique in that they will be included in the `memberships` field of task objects returned in the API when the task is within a section. They can also be used to manipulate the ordering of a task within a project.

    [Queries](/reference/gettasks) return a [compact representation of each task object](/reference/tasks). To retrieve *all* fields or *specific set* of the fields, use [field selectors](/docs/inputoutput-options) to manipulate what data is included in a response.
- name: Task templates
  description: |-
    A task template is an object that allows new tasks to be created with a predefined setup, which may include followers, dependencies, custom fields, etc. It simplifies the process of running a workflow that involves a similar set of work every time.
    Task templates are contained within a single project.
- name: Teams
  description: A team is used to group related projects and people together within
    an organization. Each project in an organization is associated with a team.
- name: Team memberships
  description: This object determines if a user is a member of a team.
- name: Time periods
  description: "A time period is an object that represents a domain-scoped date range\
    \ that can be set on [goals](/reference/goals)."
- name: Typeahead
  description: The typeahead search API provides search for objects from a single
    workspace.
- name: Users
  description: |-
    A user object represents an account in Asana that can be given access to various workspaces, projects, and tasks.

    Like other objects in the system, users are referred to by numerical IDs. However, the special string identifier `me` can be used anywhere a user ID is accepted, to refer to the current authenticated user (e.g, `GET /users/me`).
- name: User task lists
  description: "A user task list represents the tasks assigned to a particular user.\
    \ This list is the user's [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks)\
    \ list."
- name: Webhooks
  description: |-
    Webhooks allow you to subscribe to notifications about events that occur on Asana resources (e.g., tasks, projects, stories, etc.).

    For a more detailed explanation of webhooks see the [overview of webhooks](/docs/webhooks-guide).
- name: Workspaces
  description: |-
    A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.

    An *organization* is a special kind of workspace that represents a company. In an organization, you can group your projects into teams. You can read more about how organizations work on the Asana Guide. To tell if your workspace is an organization or not, check its `is_organization` property.

    Over time, we intend to migrate most workspaces into organizations and to release more organization-specific functionality. We may eventually deprecate using workspace-based APIs for organizations. Currently, and until after some reasonable grace period following any further announcements, you can still reference organizations in any `workspace` parameter.
- name: Workspace memberships
  description: This object determines if a user is a member of a workspace.
paths:
  /attachments/{attachment_gid}:
    get:
      tags:
      - Attachments
      summary: Get an attachment
      description: Get the full record for a single attachment.
      operationId: getAttachment
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - connected_to_app
            - created_at
            - download_url
            - host
            - name
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permanent_url
            - resource_subtype
            - size
            - view_url
        example:
        - connected_to_app
        - created_at
        - download_url
        - host
        - name
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permanent_url
        - resource_subtype
        - size
        - view_url
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a single attachment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "424":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/BadGateway'
        "503":
          $ref: '#/components/responses/ServiceUnavailable'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Attachment result = client.attachments.getAttachment(attachmentGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet attachmentsApiInstance = new Asana.AttachmentsApi();\nlet attachment_gid\
            \ = \"12345\"; // String | Globally unique identifier for the attachment.\n\
            let opts = { \n    'opt_fields': \"connected_to_app,created_at,download_url,host,name,parent,parent.created_by,parent.name,parent.resource_subtype,permanent_url,resource_subtype,size,view_url\"\
            \n};\nattachmentsApiInstance.getAttachment(attachment_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.attachments.getAttachment(attachmentGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            attachments_api_instance = asana.AttachmentsApi(api_client)
            attachment_gid = "12345" # str | Globally unique identifier for the attachment.
            opts = {
                'opt_fields': "connected_to_app,created_at,download_url,host,name,parent,parent.created_by,parent.name,parent.resource_subtype,permanent_url,resource_subtype,size,view_url", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get an attachment
                api_response = attachments_api_instance.get_attachment(attachment_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling AttachmentsApi->get_attachment: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.attachments.get_attachment(attachment_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->attachments->getAttachment($attachment_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.attachments.get_attachment(attachment_gid: 'attachment_gid', param: "value", param: "value", options: {pretty: true})
    delete:
      tags:
      - Attachments
      summary: Delete an attachment
      description: |-
        Deletes a specific, existing attachment.

        Returns an empty data record.
      operationId: deleteAttachment
      responses:
        "200":
          description: Successfully deleted the specified attachment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2001'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.attachments.deleteAttachment(attachmentGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let attachmentsApiInstance = new Asana.AttachmentsApi();
            let attachment_gid = "12345"; // String | Globally unique identifier for the attachment.

            attachmentsApiInstance.deleteAttachment(attachment_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.attachments.deleteAttachment(attachmentGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            attachments_api_instance = asana.AttachmentsApi(api_client)
            attachment_gid = "12345" # str | Globally unique identifier for the attachment.


            try:
                # Delete an attachment
                api_response = attachments_api_instance.delete_attachment(attachment_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling AttachmentsApi->delete_attachment: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.attachments.delete_attachment(attachment_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->attachments->deleteAttachment($attachment_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.attachments.delete_attachment(attachment_gid: 'attachment_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/attachment_path_gid'
    - $ref: '#/components/parameters/pretty'
  /attachments:
    get:
      tags:
      - Attachments
      summary: Get attachments from an object
      description: |-
        Returns the compact records for all attachments on the object.

        There are three possible `parent` values for this request: `project`, `project_brief`, and `task`. For a project, an attachment refers to a file uploaded to the "Key resources" section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.

        Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to `GET /attachments` for a task will return all of the images in the task, including inline images.
      operationId: getAttachmentsForObject
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: parent
        in: query
        description: "Globally unique identifier for object to fetch statuses from.\
          \ Must be a GID for a `project`, `project_brief`, or `task`"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "159874"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - connected_to_app
            - created_at
            - download_url
            - host
            - name
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permanent_url
            - resource_subtype
            - size
            - uri
            - view_url
        example:
        - connected_to_app
        - created_at
        - download_url
        - host
        - name
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permanent_url
        - resource_subtype
        - size
        - uri
        - view_url
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified object's attachments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2002'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Attachment> result = client.attachments.getAttachmentsForObject(parent)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet attachmentsApiInstance = new Asana.AttachmentsApi();\nlet parent\
            \ = \"159874\"; // String | Globally unique identifier for object to fetch\
            \ statuses from. Must be a GID for a `project`, `project_brief`, or `task`.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"connected_to_app,created_at,download_url,host,name,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permanent_url,resource_subtype,size,uri,view_url\"\
            \n};\nattachmentsApiInstance.getAttachmentsForObject(parent, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.attachments.getAttachmentsForObject({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            attachments_api_instance = asana.AttachmentsApi(api_client)
            parent = "159874" # str | Globally unique identifier for object to fetch statuses from. Must be a GID for a `project`, `project_brief`, or `task`.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "connected_to_app,created_at,download_url,host,name,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permanent_url,resource_subtype,size,uri,view_url", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get attachments from an object
                api_response = attachments_api_instance.get_attachments_for_object(parent, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling AttachmentsApi->get_attachments_for_object: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.attachments.get_attachments_for_object({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->attachments->getAttachmentsForObject(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.attachments.get_attachments_for_object(parent: '&#x27;parent_example&#x27;', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Attachments
      summary: Upload an attachment
      description: |-
        Upload an attachment.

        This method uploads an attachment on an object and returns the compact
        record for the created attachment object. This is possible by either:

        - Providing the URL of the external resource being attached, or
        - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach
        files from third party services such as Dropbox, Box, Vimeo & Google Drive via the API

        The 100MB size limit on attachments in Asana is enforced on this endpoint.

        This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.

        Requests made should follow the HTTP/1.1 specification that line
        terminators are of the form `CRLF` or `\r\n` outlined
        [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.
      operationId: createAttachmentForObject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - connected_to_app
            - created_at
            - download_url
            - host
            - name
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permanent_url
            - resource_subtype
            - size
            - view_url
        example:
        - connected_to_app
        - created_at
        - download_url
        - host
        - name
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permanent_url
        - resource_subtype
        - size
        - view_url
        x-ballerina-name: optFields
      requestBody:
        description: |-
          The file you want to upload

          *Note when using curl:*

          Be sure to add an `‘@’` before the file path, and use the `--form`
          option instead of the `-d` option.

          When uploading PDFs with curl, force the content-type to be pdf by
          appending the content type to the file path: `--form
          "file=@file.pdf;type=application/pdf"`.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachmentRequest'
      responses:
        "200":
          description: Successfully uploaded the attachment to the parent object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2003'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Attachment result = client.attachments.createAttachmentForObject(file, parent, url, name)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\nconst fs = require(\"fs\");\n\n\
            let client = Asana.ApiClient.instance;\nlet token = client.authentications['token'];\n\
            token.accessToken = '<YOUR_ACCESS_TOKEN>';\n\nlet attachmentsApiInstance\
            \ = new Asana.AttachmentsApi();\nlet opts = { \n    'resource_subtype':\
            \ \"external\", \n    'file': fs.createReadStream(\"file_example\"), \n\
            \    'parent': \"parent_example\", \n    'url': \"url_example\", \n  \
            \  'name': \"name_example\", \n    'connect_to_app': true, \n    'opt_fields':\
            \ \"connected_to_app,created_at,download_url,host,name,parent,parent.created_by,parent.name,parent.resource_subtype,permanent_url,resource_subtype,size,view_url\"\
            \n};\nattachmentsApiInstance.createAttachmentForObject(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\nattachments_api_instance = asana.AttachmentsApi(api_client)\n\
            opts = {\n    'resource_subtype': \"external\", # str | \n    'file':\
            \ \"file_example\", # str | \n    'parent': \"parent_example\", # str\
            \ | \n    'url': \"url_example\", # str | \n    'name': \"name_example\"\
            , # str | \n    'connect_to_app': True, # bool | \n    'opt_fields': \"\
            connected_to_app,created_at,download_url,host,name,parent,parent.created_by,parent.name,parent.resource_subtype,permanent_url,resource_subtype,size,view_url\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Upload an attachment\n    api_response\
            \ = attachments_api_instance.create_attachment_for_object(opts)\n    pprint(api_response)\n\
            except ApiException as e:\n    print(\"Exception when calling AttachmentsApi->create_attachment_for_object:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.attachments.create_attachment_for_object({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->attachments->createAttachmentForObject(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.attachments.create_attachment_for_object(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/audit_log_events:
    get:
      tags:
      - Audit log API
      summary: Get audit log events
      description: |-
        Retrieve the audit log events that have been captured in your domain.

        This endpoint will return a list of [AuditLogEvent](/reference/audit-log-api) objects, sorted by creation time in ascending order. Note that the Audit Log API captures events from October 8th, 2021 and later. Queries for events before this date will not return results.

        There are a number of query parameters (below) that can be used to filter the set of [AuditLogEvent](/reference/audit-log-api) objects that are returned in the response. Any combination of query parameters is valid. When no filters are provided, all of the events that have been captured in your domain will match.

        The list of events will always be [paginated](/docs/pagination). The default limit is 1000 events. The next set of events can be retrieved using the `offset` from the previous response. If there are no events that match the provided filters in your domain, the endpoint will return `null` for the `next_page` field. Querying again with the same filters may return new events if they were captured after the last request. Once a response includes a `next_page` with an `offset`, subsequent requests can be made with the latest `offset` to poll for new events that match the provided filters.

        *Note: If the filters you provided match events in your domain and `next_page` is present in the response, we will continue to send `next_page` on subsequent requests even when there are no more events that match the filters. This was put in place so that you can implement an audit log stream that will return future events that match these filters. If you are not interested in future events that match the filters you have defined, you can rely on checking empty `data` response for the end of current events that match your filters.*

        When no `offset` is provided, the response will begin with the oldest events that match the provided filters. It is important to note that [AuditLogEvent](/reference/audit-log-api) objects will be permanently deleted from our systems after 90 days. If you wish to keep a permanent record of these events, we recommend using a SIEM tool to ingest and store these logs.
      operationId: getAuditLogEvents
      responses:
        "200":
          description: AuditLogEvents were successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2004'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.auditlogapi.getAuditLogEvents(workspaceGid, resourceGid, actorGid, actorType, eventType, endAt, startAt)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet auditLogApiApiInstance = new Asana.AuditLogAPIApi();\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet opts = { \n    'start_at': \"2013-10-20T19:20:30+01:00\"\
            , \n    'end_at': \"2013-10-20T19:20:30+01:00\", \n    'event_type': \"\
            event_type_example\", \n    'actor_type': \"actor_type_example\", \n \
            \   'actor_gid': \"actor_gid_example\", \n    'resource_gid': \"resource_gid_example\"\
            , \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            \n};\nauditLogApiApiInstance.getAuditLogEvents(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.auditlogapi.getAuditLogEvents(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            audit_log_api_api_instance = asana.AuditLogAPIApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'start_at': '2013-10-20T19:20:30+01:00', # datetime | Filter to events created after this time (inclusive).
                'end_at': '2013-10-20T19:20:30+01:00', # datetime | Filter to events created before this time (exclusive).
                'event_type': "event_type_example", # str | Filter to events of this type. Refer to the [supported audit log events](/docs/audit-log-events#supported-audit-log-events) for a full list of values.
                'actor_type': "actor_type_example", # str | Filter to events with an actor of this type. This only needs to be included if querying for actor types without an ID. If `actor_gid` is included, this should be excluded.
                'actor_gid': "actor_gid_example", # str | Filter to events triggered by the actor with this ID.
                'resource_gid': "resource_gid_example", # str | Filter to events with this resource ID.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
            }

            try:
                # Get audit log events
                api_response = audit_log_api_api_instance.get_audit_log_events(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling AuditLogAPIApi->get_audit_log_events: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.audit_log_api.get_audit_log_events(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->auditlogapi->getAuditLogEvents($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.audit_log_api.get_audit_log_events(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/audit_log_start_at'
    - $ref: '#/components/parameters/audit_log_end_at'
    - $ref: '#/components/parameters/audit_log_event_type'
    - $ref: '#/components/parameters/audit_log_actor_type'
    - $ref: '#/components/parameters/audit_log_actor_gid'
    - $ref: '#/components/parameters/audit_log_resource_gid'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /batch:
    post:
      tags:
      - Batch API
      summary: Submit parallel requests
      description: Make multiple requests in parallel to Asana's API.
      operationId: createBatchRequest
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - body
            - headers
            - status_code
        example:
        - body
        - headers
        - status_code
        x-ballerina-name: optFields
      requestBody:
        description: The requests to batch together via the Batch API
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchBody'
        required: true
      responses:
        "200":
          description: Successfully completed the requested batch API operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2005'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.batchapi.createBatchRequest()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet batchApiApiInstance = new Asana.BatchAPIApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The requests to batch together via the Batch API.\nlet opts = { \n\
            \    'opt_fields': \"body,headers,status_code\"\n};\nbatchApiApiInstance.createBatchRequest(body,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.batchapi.createBatchRequest({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            batch_api_api_instance = asana.BatchAPIApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The requests to batch together via the Batch API.
            opts = {
                'opt_fields': "body,headers,status_code", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Submit parallel requests
                api_response = batch_api_api_instance.create_batch_request(body, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling BatchAPIApi->create_batch_request: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.batch_api.create_batch_request({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->batchapi->createBatchRequest(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.batch_api.create_batch_request(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/custom_field_settings:
    get:
      tags:
      - Custom field settings
      summary: Get a project's custom fields
      description: "Returns a list of all of the custom fields settings on a project,\
        \ in compact form. Note that, as in all queries to collections which return\
        \ compact representation, `opt_fields` can be used to include more data than\
        \ is returned in the compact representation. See the [documentation for input/output\
        \ options](https://developers.asana.com/docs/inputoutput-options) for more\
        \ information."
      operationId: getCustomFieldSettingsForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - custom_field
            - custom_field.asana_created_field
            - custom_field.created_by
            - custom_field.created_by.name
            - custom_field.currency_code
            - custom_field.custom_label
            - custom_field.custom_label_position
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.description
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.format
            - custom_field.has_notifications_enabled
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.is_global_to_workspace
            - custom_field.is_value_read_only
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.people_value
            - custom_field.people_value.name
            - custom_field.precision
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - is_important
            - offset
            - parent
            - parent.name
            - path
            - project
            - project.name
            - uri
        example:
        - custom_field
        - custom_field.asana_created_field
        - custom_field.created_by
        - custom_field.created_by.name
        - custom_field.currency_code
        - custom_field.custom_label
        - custom_field.custom_label_position
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.description
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.format
        - custom_field.has_notifications_enabled
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.is_global_to_workspace
        - custom_field.is_value_read_only
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.people_value
        - custom_field.people_value.name
        - custom_field.precision
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - is_important
        - offset
        - parent
        - parent.name
        - path
        - project
        - project.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved custom field settings objects for a
            project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2006'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<CustomFieldSetting> result = client.customfieldsettings.getCustomFieldSettingsForProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldSettingsApiInstance = new Asana.CustomFieldSettingsApi();\n\
            let project_gid = \"1331\"; // String | Globally unique identifier for\
            \ the project.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,offset,parent,parent.name,path,project,project.name,uri\"\
            \n};\ncustomFieldSettingsApiInstance.getCustomFieldSettingsForProject(project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfieldsettings.getCustomFieldSettingsForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_field_settings_api_instance = asana.CustomFieldSettingsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.id_prefix,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,offset,parent,parent.name,path,project,project.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a project's custom fields
                api_response = custom_field_settings_api_instance.get_custom_field_settings_for_project(project_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling CustomFieldSettingsApi->get_custom_field_settings_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_field_settings.get_custom_field_settings_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfieldsettings->getCustomFieldSettingsForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_field_settings.get_custom_field_settings_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /portfolios/{portfolio_gid}/custom_field_settings:
    get:
      tags:
      - Custom field settings
      summary: Get a portfolio's custom fields
      description: "Returns a list of all of the custom fields settings on a portfolio,\
        \ in compact form."
      operationId: getCustomFieldSettingsForPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - custom_field
            - custom_field.asana_created_field
            - custom_field.created_by
            - custom_field.created_by.name
            - custom_field.currency_code
            - custom_field.custom_label
            - custom_field.custom_label_position
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.description
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.format
            - custom_field.has_notifications_enabled
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.is_global_to_workspace
            - custom_field.is_value_read_only
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.people_value
            - custom_field.people_value.name
            - custom_field.precision
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - is_important
            - offset
            - parent
            - parent.name
            - path
            - project
            - project.name
            - uri
        example:
        - custom_field
        - custom_field.asana_created_field
        - custom_field.created_by
        - custom_field.created_by.name
        - custom_field.currency_code
        - custom_field.custom_label
        - custom_field.custom_label_position
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.description
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.format
        - custom_field.has_notifications_enabled
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.is_global_to_workspace
        - custom_field.is_value_read_only
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.people_value
        - custom_field.people_value.name
        - custom_field.precision
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - is_important
        - offset
        - parent
        - parent.name
        - path
        - project
        - project.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved custom field settings objects for a
            portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2007'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<CustomFieldSetting> result = client.customfieldsettings.getCustomFieldSettingsForPortfolio(portfolioGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldSettingsApiInstance = new Asana.CustomFieldSettingsApi();\n\
            let portfolio_gid = \"12345\"; // String | Globally unique identifier\
            \ for the portfolio.\nlet opts = { \n    'limit': 50, \n    'offset':\
            \ \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields': \"custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,offset,parent,parent.name,path,project,project.name,uri\"\
            \n};\ncustomFieldSettingsApiInstance.getCustomFieldSettingsForPortfolio(portfolio_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfieldsettings.getCustomFieldSettingsForPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_field_settings_api_instance = asana.CustomFieldSettingsApi(api_client)
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.id_prefix,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,offset,parent,parent.name,path,project,project.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a portfolio's custom fields
                api_response = custom_field_settings_api_instance.get_custom_field_settings_for_portfolio(portfolio_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling CustomFieldSettingsApi->get_custom_field_settings_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_field_settings.get_custom_field_settings_for_portfolio(portfolio_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfieldsettings->getCustomFieldSettingsForPortfolio($portfolio_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_field_settings.get_custom_field_settings_for_portfolio(portfolio_gid: 'portfolio_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /custom_fields:
    post:
      tags:
      - Custom fields
      summary: Create a custom field
      description: |-
        Creates a new custom field in a workspace. Every custom field is required
        to be created in a specific workspace, and this workspace cannot be
        changed once set.

        A custom field’s name must be unique within a workspace and not conflict
        with names of existing task properties such as `Due Date` or `Assignee`.
        A custom field’s type must be one of `text`, `enum`, `multi_enum`, `number`,
        `date`, or `people`.

        Returns the full record of the newly created custom field.
      operationId: createCustomField
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - asana_created_field
            - created_by
            - created_by.name
            - currency_code
            - custom_label
            - custom_label_position
            - date_value
            - date_value.date
            - date_value.date_time
            - description
            - display_value
            - enabled
            - enum_options
            - enum_options.color
            - enum_options.enabled
            - enum_options.name
            - enum_value
            - enum_value.color
            - enum_value.enabled
            - enum_value.name
            - format
            - has_notifications_enabled
            - id_prefix
            - is_formula_field
            - is_global_to_workspace
            - is_value_read_only
            - multi_enum_values
            - multi_enum_values.color
            - multi_enum_values.enabled
            - multi_enum_values.name
            - name
            - number_value
            - people_value
            - people_value.name
            - precision
            - representation_type
            - resource_subtype
            - text_value
            - type
        example:
        - asana_created_field
        - created_by
        - created_by.name
        - currency_code
        - custom_label
        - custom_label_position
        - date_value
        - date_value.date
        - date_value.date_time
        - description
        - display_value
        - enabled
        - enum_options
        - enum_options.color
        - enum_options.enabled
        - enum_options.name
        - enum_value
        - enum_value.color
        - enum_value.enabled
        - enum_value.name
        - format
        - has_notifications_enabled
        - id_prefix
        - is_formula_field
        - is_global_to_workspace
        - is_value_read_only
        - multi_enum_values
        - multi_enum_values.color
        - multi_enum_values.enabled
        - multi_enum_values.name
        - name
        - number_value
        - people_value
        - people_value.name
        - precision
        - representation_type
        - resource_subtype
        - text_value
        - type
        x-ballerina-name: optFields
      requestBody:
        description: The custom field object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldsBody'
        required: true
      responses:
        "201":
          description: Custom field successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse201'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            CustomField result = client.customfields.createCustomField()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet body\
            \ = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\"\
            ,}}; // Object | The custom field object to create.\nlet opts = { \n \
            \   'opt_fields': \"asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,resource_subtype,text_value,type\"\
            \n};\ncustomFieldsApiInstance.createCustomField(body, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.createCustomField({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The custom field object to create.
            opts = {
                'opt_fields': "asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,id_prefix,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,representation_type,resource_subtype,text_value,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a custom field
                api_response = custom_fields_api_instance.create_custom_field(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->create_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.create_custom_field({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->createCustomField(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.create_custom_field(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /custom_fields/{custom_field_gid}:
    get:
      tags:
      - Custom fields
      summary: Get a custom field
      description: |-
        Get the complete definition of a custom field’s metadata.

        Since custom fields can be defined for one of a number of types, and
        these types have different data and behaviors, there are fields that are
        relevant to a particular type. For instance, as noted above, enum_options
        is only relevant for the enum type and defines the set of choices that
        the enum could represent. The examples below show some of these
        type-specific custom field definitions.
      operationId: getCustomField
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - asana_created_field
            - created_by
            - created_by.name
            - currency_code
            - custom_label
            - custom_label_position
            - date_value
            - date_value.date
            - date_value.date_time
            - description
            - display_value
            - enabled
            - enum_options
            - enum_options.color
            - enum_options.enabled
            - enum_options.name
            - enum_value
            - enum_value.color
            - enum_value.enabled
            - enum_value.name
            - format
            - has_notifications_enabled
            - id_prefix
            - is_formula_field
            - is_global_to_workspace
            - is_value_read_only
            - multi_enum_values
            - multi_enum_values.color
            - multi_enum_values.enabled
            - multi_enum_values.name
            - name
            - number_value
            - people_value
            - people_value.name
            - precision
            - representation_type
            - resource_subtype
            - text_value
            - type
        example:
        - asana_created_field
        - created_by
        - created_by.name
        - currency_code
        - custom_label
        - custom_label_position
        - date_value
        - date_value.date
        - date_value.date_time
        - description
        - display_value
        - enabled
        - enum_options
        - enum_options.color
        - enum_options.enabled
        - enum_options.name
        - enum_value
        - enum_value.color
        - enum_value.enabled
        - enum_value.name
        - format
        - has_notifications_enabled
        - id_prefix
        - is_formula_field
        - is_global_to_workspace
        - is_value_read_only
        - multi_enum_values
        - multi_enum_values.color
        - multi_enum_values.enabled
        - multi_enum_values.name
        - name
        - number_value
        - people_value
        - people_value.name
        - precision
        - representation_type
        - resource_subtype
        - text_value
        - type
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the complete definition of a custom
            field’s metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2008'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            CustomField result = client.customfields.getCustomField(customFieldGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet custom_field_gid\
            \ = \"12345\"; // String | Globally unique identifier for the custom field.\n\
            let opts = { \n    'opt_fields': \"asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,resource_subtype,text_value,type\"\
            \n};\ncustomFieldsApiInstance.getCustomField(custom_field_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.getCustomField(customFieldGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            custom_field_gid = "12345" # str | Globally unique identifier for the custom field.
            opts = {
                'opt_fields': "asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,id_prefix,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,representation_type,resource_subtype,text_value,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a custom field
                api_response = custom_fields_api_instance.get_custom_field(custom_field_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->get_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.get_custom_field(custom_field_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->getCustomField($custom_field_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.get_custom_field(custom_field_gid: 'custom_field_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Custom fields
      summary: Update a custom field
      description: |-
        A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged
        When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field.
        A custom field’s `type` cannot be updated.
        An enum custom field’s `enum_options` cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update `enum_options`.
        Locked custom fields can only be updated by the user who locked the field.
        Returns the complete updated custom field record.
      operationId: updateCustomField
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - asana_created_field
            - created_by
            - created_by.name
            - currency_code
            - custom_label
            - custom_label_position
            - date_value
            - date_value.date
            - date_value.date_time
            - description
            - display_value
            - enabled
            - enum_options
            - enum_options.color
            - enum_options.enabled
            - enum_options.name
            - enum_value
            - enum_value.color
            - enum_value.enabled
            - enum_value.name
            - format
            - has_notifications_enabled
            - id_prefix
            - is_formula_field
            - is_global_to_workspace
            - is_value_read_only
            - multi_enum_values
            - multi_enum_values.color
            - multi_enum_values.enabled
            - multi_enum_values.name
            - name
            - number_value
            - people_value
            - people_value.name
            - precision
            - representation_type
            - resource_subtype
            - text_value
            - type
        example:
        - asana_created_field
        - created_by
        - created_by.name
        - currency_code
        - custom_label
        - custom_label_position
        - date_value
        - date_value.date
        - date_value.date_time
        - description
        - display_value
        - enabled
        - enum_options
        - enum_options.color
        - enum_options.enabled
        - enum_options.name
        - enum_value
        - enum_value.color
        - enum_value.enabled
        - enum_value.name
        - format
        - has_notifications_enabled
        - id_prefix
        - is_formula_field
        - is_global_to_workspace
        - is_value_read_only
        - multi_enum_values
        - multi_enum_values.color
        - multi_enum_values.enabled
        - multi_enum_values.name
        - name
        - number_value
        - people_value
        - people_value.name
        - precision
        - representation_type
        - resource_subtype
        - text_value
        - type
        x-ballerina-name: optFields
      requestBody:
        description: The custom field object with all updated properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldscustomFieldGidBody'
      responses:
        "200":
          description: The custom field was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2009'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            CustomField result = client.customfields.updateCustomField(customFieldGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet custom_field_gid\
            \ = \"12345\"; // String | Globally unique identifier for the custom field.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,resource_subtype,text_value,type\"\
            \n};\ncustomFieldsApiInstance.updateCustomField(custom_field_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.updateCustomField(customFieldGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            custom_field_gid = "12345" # str | Globally unique identifier for the custom field.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The custom field object with all updated properties.
                'opt_fields': "asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,id_prefix,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,people_value,people_value.name,precision,representation_type,resource_subtype,text_value,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a custom field
                api_response = custom_fields_api_instance.update_custom_field(custom_field_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->update_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.update_custom_field(custom_field_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->updateCustomField($custom_field_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.update_custom_field(custom_field_gid: 'custom_field_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Custom fields
      summary: Delete a custom field
      description: |-
        A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field.
        Locked custom fields can only be deleted by the user who locked the field.
        Returns an empty data record.
      operationId: deleteCustomField
      responses:
        "200":
          description: The custom field was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20010'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.customfields.deleteCustomField(customFieldGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let customFieldsApiInstance = new Asana.CustomFieldsApi();
            let custom_field_gid = "12345"; // String | Globally unique identifier for the custom field.

            customFieldsApiInstance.deleteCustomField(custom_field_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.deleteCustomField(customFieldGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            custom_field_gid = "12345" # str | Globally unique identifier for the custom field.


            try:
                # Delete a custom field
                api_response = custom_fields_api_instance.delete_custom_field(custom_field_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->delete_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.delete_custom_field(custom_field_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->deleteCustomField($custom_field_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.delete_custom_field(custom_field_gid: 'custom_field_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/custom_field_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/custom_fields:
    get:
      tags:
      - Custom fields
      summary: Get a workspace's custom fields
      description: Returns a list of the compact representation of all of the custom
        fields in a workspace.
      operationId: getCustomFieldsForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - asana_created_field
            - created_by
            - created_by.name
            - currency_code
            - custom_label
            - custom_label_position
            - date_value
            - date_value.date
            - date_value.date_time
            - description
            - display_value
            - enabled
            - enum_options
            - enum_options.color
            - enum_options.enabled
            - enum_options.name
            - enum_value
            - enum_value.color
            - enum_value.enabled
            - enum_value.name
            - format
            - has_notifications_enabled
            - id_prefix
            - is_formula_field
            - is_global_to_workspace
            - is_value_read_only
            - multi_enum_values
            - multi_enum_values.color
            - multi_enum_values.enabled
            - multi_enum_values.name
            - name
            - number_value
            - offset
            - path
            - people_value
            - people_value.name
            - precision
            - representation_type
            - resource_subtype
            - text_value
            - type
            - uri
        example:
        - asana_created_field
        - created_by
        - created_by.name
        - currency_code
        - custom_label
        - custom_label_position
        - date_value
        - date_value.date
        - date_value.date_time
        - description
        - display_value
        - enabled
        - enum_options
        - enum_options.color
        - enum_options.enabled
        - enum_options.name
        - enum_value
        - enum_value.color
        - enum_value.enabled
        - enum_value.name
        - format
        - has_notifications_enabled
        - id_prefix
        - is_formula_field
        - is_global_to_workspace
        - is_value_read_only
        - multi_enum_values
        - multi_enum_values.color
        - multi_enum_values.enabled
        - multi_enum_values.name
        - name
        - number_value
        - offset
        - path
        - people_value
        - people_value.name
        - precision
        - representation_type
        - resource_subtype
        - text_value
        - type
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved all custom fields for the given workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20011'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<CustomField> result = client.customfields.getCustomFieldsForWorkspace(workspaceGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet opts = { \n    'limit': 50, \n    'offset': \"\
            eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields': \"asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,offset,path,people_value,people_value.name,precision,resource_subtype,text_value,type,uri\"\
            \n};\ncustomFieldsApiInstance.getCustomFieldsForWorkspace(workspace_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.getCustomFieldsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "asana_created_field,created_by,created_by.name,currency_code,custom_label,custom_label_position,date_value,date_value.date,date_value.date_time,description,display_value,enabled,enum_options,enum_options.color,enum_options.enabled,enum_options.name,enum_value,enum_value.color,enum_value.enabled,enum_value.name,format,has_notifications_enabled,id_prefix,is_formula_field,is_global_to_workspace,is_value_read_only,multi_enum_values,multi_enum_values.color,multi_enum_values.enabled,multi_enum_values.name,name,number_value,offset,path,people_value,people_value.name,precision,representation_type,resource_subtype,text_value,type,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a workspace's custom fields
                api_response = custom_fields_api_instance.get_custom_fields_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->get_custom_fields_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.get_custom_fields_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->getCustomFieldsForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.get_custom_fields_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /custom_fields/{custom_field_gid}/enum_options:
    post:
      tags:
      - Custom fields
      summary: Create an enum option
      description: |-
        Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list.
        Locked custom fields can only have enum options added by the user who locked the field.
        Returns the full record of the newly created enum option.
      operationId: createEnumOptionForCustomField
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - enabled
            - name
        example:
        - color
        - enabled
        - name
        x-ballerina-name: optFields
      requestBody:
        description: The enum option object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldGidEnumOptionsBody'
      responses:
        "201":
          description: Custom field enum option successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2011'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.customfields.createEnumOptionForCustomField(customFieldGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet custom_field_gid\
            \ = \"12345\"; // String | Globally unique identifier for the custom field.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"color,enabled,name\"\
            \n};\ncustomFieldsApiInstance.createEnumOptionForCustomField(custom_field_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.createEnumOptionForCustomField(customFieldGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            custom_field_gid = "12345" # str | Globally unique identifier for the custom field.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The enum option object to create.
                'opt_fields': "color,enabled,name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create an enum option
                api_response = custom_fields_api_instance.create_enum_option_for_custom_field(custom_field_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->create_enum_option_for_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.create_enum_option_for_custom_field(custom_field_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->createEnumOptionForCustomField($custom_field_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.create_enum_option_for_custom_field(custom_field_gid: 'custom_field_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/custom_field_path_gid'
    - $ref: '#/components/parameters/pretty'
  /custom_fields/{custom_field_gid}/enum_options/insert:
    post:
      tags:
      - Custom fields
      summary: Reorder a custom field's enum
      description: |-
        Moves a particular enum option to be either before or after another specified enum option in the custom field.
        Locked custom fields can only be reordered by the user who locked the field.
      operationId: insertEnumOptionForCustomField
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - enabled
            - name
        example:
        - color
        - enabled
        - name
        x-ballerina-name: optFields
      requestBody:
        description: The enum option object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumOptionsInsertBody'
      responses:
        "200":
          description: Custom field enum option successfully reordered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20012'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.customfields.insertEnumOptionForCustomField(customFieldGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet custom_field_gid\
            \ = \"12345\"; // String | Globally unique identifier for the custom field.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"color,enabled,name\"\
            \n};\ncustomFieldsApiInstance.insertEnumOptionForCustomField(custom_field_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.insertEnumOptionForCustomField(customFieldGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            custom_field_gid = "12345" # str | Globally unique identifier for the custom field.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The enum option object to create.
                'opt_fields': "color,enabled,name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Reorder a custom field's enum
                api_response = custom_fields_api_instance.insert_enum_option_for_custom_field(custom_field_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->insert_enum_option_for_custom_field: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.insert_enum_option_for_custom_field(custom_field_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->insertEnumOptionForCustomField($custom_field_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.insert_enum_option_for_custom_field(custom_field_gid: 'custom_field_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/custom_field_path_gid'
    - $ref: '#/components/parameters/pretty'
  /enum_options/{enum_option_gid}:
    put:
      tags:
      - Custom fields
      summary: Update an enum option
      description: |-
        Updates an existing enum option. Enum custom fields require at least one enabled enum option.
        Locked custom fields can only be updated by the user who locked the field.
        Returns the full record of the updated enum option.
      operationId: updateEnumOption
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - enabled
            - name
        example:
        - color
        - enabled
        - name
        x-ballerina-name: optFields
      requestBody:
        description: The enum option object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumOptionsenumOptionGidBody'
      responses:
        "200":
          description: Successfully updated the specified custom field enum
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20013'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.customfields.updateEnumOption(enumOptionGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet customFieldsApiInstance = new Asana.CustomFieldsApi();\nlet enum_option_gid\
            \ = \"124578\"; // String | Globally unique identifier for the enum option.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"color,enabled,name\"\
            \n};\ncustomFieldsApiInstance.updateEnumOption(enum_option_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.customfields.updateEnumOption(enumOptionGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            custom_fields_api_instance = asana.CustomFieldsApi(api_client)
            enum_option_gid = "124578" # str | Globally unique identifier for the enum option.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The enum option object to update
                'opt_fields': "color,enabled,name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update an enum option
                api_response = custom_fields_api_instance.update_enum_option(enum_option_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling CustomFieldsApi->update_enum_option: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.custom_fields.update_enum_option(enum_option_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->customfields->updateEnumOption($enum_option_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.custom_fields.update_enum_option(enum_option_gid: 'enum_option_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - name: enum_option_gid
      in: path
      description: Globally unique identifier for the enum option
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "124578"
    - $ref: '#/components/parameters/pretty'
  /events:
    get:
      tags:
      - Events
      summary: Get events on a resource
      description: |-
        Returns the full record for all events that have occurred since the sync
        token was created.

        A `GET` request to the endpoint `/[path_to_resource]/events` can be made in
        lieu of including the resource ID in the data for the request.

        Asana limits a single sync token to 100 events. If more than 100 events exist
        for a given resource, `has_more: true` will be returned in the response, indicating
        that there are more events to pull.

        *Note: The resource returned will be the resource that triggered the
        event. This may be different from the one that the events were requested
        for. For example, a subscription to a project will contain events for
        tasks contained within the project.*
      operationId: getEvents
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - action
            - change
            - change.action
            - change.added_value
            - change.field
            - change.new_value
            - change.removed_value
            - created_at
            - parent
            - parent.name
            - resource
            - resource.name
            - type
            - user
            - user.name
        example:
        - action
        - change
        - change.action
        - change.added_value
        - change.field
        - change.new_value
        - change.removed_value
        - created_at
        - parent
        - parent.name
        - resource
        - resource.name
        - type
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20014'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "412":
          description: The request is missing or has an expired sync token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse412'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.events.getEvents(sync, resource)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet eventsApiInstance = new Asana.EventsApi();\nlet resource = \"12345\"\
            ; // String | A resource ID to subscribe to. The resource can be a task\
            \ or project.\nlet opts = { \n    'sync': \"de4774f6915eae04714ca93bb2f5ee81\"\
            , \n    'opt_fields': \"action,change,change.action,change.added_value,change.field,change.new_value,change.removed_value,created_at,parent,parent.name,resource,resource.name,type,user,user.name\"\
            \n};\neventsApiInstance.getEvents(resource, opts).then((result) => {\n\
            \    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.events.getEvents({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            events_api_instance = asana.EventsApi(api_client)
            resource = "12345" # str | A resource ID to subscribe to. The resource can be a task, project, or goal.
            opts = {
                'sync': "de4774f6915eae04714ca93bb2f5ee81", # str | A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated. *Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.*
                'opt_fields': "action,change,change.action,change.added_value,change.field,change.new_value,change.removed_value,created_at,parent,parent.name,resource,resource.name,type,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get events on a resource
                api_response = events_api_instance.get_events(resource, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling EventsApi->get_events: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.events.get_events({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->events->getEvents(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.events.get_events(resource: '&#x27;resource_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - name: resource
      in: query
      description: "A resource ID to subscribe to. The resource can be a task, project,\
        \ or goal"
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: "12345"
    - name: sync
      in: query
      description: |-
        A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated.
        *Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.*
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: de4774f6915eae04714ca93bb2f5ee81
    - $ref: '#/components/parameters/pretty'
  /goal_relationships/{goal_relationship_gid}:
    get:
      tags:
      - Goal relationships
      summary: Get a goal relationship
      description: Returns the complete updated goal relationship record for a single
        goal relationship.
      operationId: getGoalRelationship
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - contribution_weight
            - resource_subtype
            - supported_goal
            - supported_goal.name
            - supported_goal.owner
            - supported_goal.owner.name
            - supporting_resource
            - supporting_resource.name
        example:
        - contribution_weight
        - resource_subtype
        - supported_goal
        - supported_goal.name
        - supported_goal.owner
        - supported_goal.owner.name
        - supporting_resource
        - supporting_resource.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for the goal relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20015'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goalrelationships.getGoalRelationship(goalRelationshipGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalRelationshipsApiInstance = new Asana.GoalRelationshipsApi();\n\
            let goal_relationship_gid = \"12345\"; // String | Globally unique identifier\
            \ for the goal relationship.\nlet opts = { \n    'opt_fields': \"contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name\"\
            \n};\ngoalRelationshipsApiInstance.getGoalRelationship(goal_relationship_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goal_relationships_api_instance = asana.GoalRelationshipsApi(api_client)
            goal_relationship_gid = "12345" # str | Globally unique identifier for the goal relationship.
            opts = {
                'opt_fields': "contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a goal relationship
                api_response = goal_relationships_api_instance.get_goal_relationship(goal_relationship_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalRelationshipsApi->get_goal_relationship: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goal_relationships.get_goal_relationship(goal_relationship_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goalrelationships->getGoalRelationship($goal_relationship_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goal_relationships.get_goal_relationship(goal_relationship_gid: 'goal_relationship_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Goal relationships
      summary: Update a goal relationship
      description: |-
        An existing goal relationship can be updated by making a PUT request on the URL for
        that goal relationship. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged.

        Returns the complete updated goal relationship record.
      operationId: updateGoalRelationship
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - contribution_weight
            - resource_subtype
            - supported_goal
            - supported_goal.name
            - supported_goal.owner
            - supported_goal.owner.name
            - supporting_resource
            - supporting_resource.name
        example:
        - contribution_weight
        - resource_subtype
        - supported_goal
        - supported_goal.name
        - supported_goal.owner
        - supported_goal.owner.name
        - supporting_resource
        - supporting_resource.name
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the goal relationship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalRelationshipsgoalRelationshipGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the goal relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20016'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goalrelationships.updateGoalRelationship(goalRelationshipGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalRelationshipsApiInstance = new Asana.GoalRelationshipsApi();\n\
            let body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"\
            <VALUE_2>\",}}; // Object | The updated fields for the goal relationship.\n\
            let goal_relationship_gid = \"12345\"; // String | Globally unique identifier\
            \ for the goal relationship.\nlet opts = { \n    'opt_fields': \"contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name\"\
            \n};\ngoalRelationshipsApiInstance.updateGoalRelationship(body, goal_relationship_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goal_relationships_api_instance = asana.GoalRelationshipsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the goal relationship.
            goal_relationship_gid = "12345" # str | Globally unique identifier for the goal relationship.
            opts = {
                'opt_fields': "contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a goal relationship
                api_response = goal_relationships_api_instance.update_goal_relationship(body, goal_relationship_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalRelationshipsApi->update_goal_relationship: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goal_relationships.update_goal_relationship(goal_relationship_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goalrelationships->updateGoalRelationship($goal_relationship_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goal_relationships.update_goal_relationship(goal_relationship_gid: 'goal_relationship_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_relationship_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goal_relationships:
    get:
      tags:
      - Goal relationships
      summary: Get goal relationships
      description: Returns compact goal relationship records.
      operationId: getGoalRelationships
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: supported_goal
        in: query
        description: Globally unique identifier for the supported goal in the goal
          relationship
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "12345"
        x-ballerina-name: supportedGoal
      - name: resource_subtype
        in: query
        description: "If provided, filter to goal relationships with a given resource_subtype"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: subgoal
        x-ballerina-name: resourceSubtype
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - contribution_weight
            - offset
            - path
            - resource_subtype
            - supported_goal
            - supported_goal.name
            - supported_goal.owner
            - supported_goal.owner.name
            - supporting_resource
            - supporting_resource.name
            - uri
        example:
        - contribution_weight
        - offset
        - path
        - resource_subtype
        - supported_goal
        - supported_goal.name
        - supported_goal.owner
        - supported_goal.owner.name
        - supporting_resource
        - supporting_resource.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested goal relationships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20017'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.goalrelationships.getGoalRelationships(resourceSubtype, supportedGoal)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalRelationshipsApiInstance = new Asana.GoalRelationshipsApi();\n\
            let supported_goal = \"12345\"; // String | Globally unique identifier\
            \ for the supported goal in the goal relationship.\nlet opts = { \n  \
            \  'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'resource_subtype': \"subgoal\", \n    'opt_fields': \"contribution_weight,offset,path,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name,uri\"\
            \n};\ngoalRelationshipsApiInstance.getGoalRelationships(supported_goal,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goal_relationships_api_instance = asana.GoalRelationshipsApi(api_client)
            supported_goal = "12345" # str | Globally unique identifier for the supported goal in the goal relationship.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'resource_subtype': "subgoal", # str | If provided, filter to goal relationships with a given resource_subtype.
                'opt_fields': "contribution_weight,offset,path,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get goal relationships
                api_response = goal_relationships_api_instance.get_goal_relationships(supported_goal, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling GoalRelationshipsApi->get_goal_relationships: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goal_relationships.get_goal_relationships({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goalrelationships->getGoalRelationships(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goal_relationships.get_goal_relationships(supported_goal: '&#x27;supported_goal_example&#x27;', param: "value", param: "value", options: {pretty: true})
  /goals/{goal_gid}/addSupportingRelationship:
    post:
      tags:
      - Goal relationships
      summary: Add a supporting goal relationship
      description: |-
        Creates a goal relationship by adding a supporting resource to a given goal.

        Returns the newly created goal relationship record.
      operationId: addSupportingRelationship
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - contribution_weight
            - resource_subtype
            - supported_goal
            - supported_goal.name
            - supported_goal.owner
            - supported_goal.owner.name
            - supporting_resource
            - supporting_resource.name
        example:
        - contribution_weight
        - resource_subtype
        - supported_goal
        - supported_goal.name
        - supported_goal.owner
        - supported_goal.owner.name
        - supporting_resource
        - supporting_resource.name
        x-ballerina-name: optFields
      requestBody:
        description: The supporting resource to be added to the goal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidAddSupportingRelationshipBody'
        required: true
      responses:
        "200":
          description: Successfully created the goal relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20018'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goalrelationships.addSupportingRelationship(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalRelationshipsApiInstance = new Asana.GoalRelationshipsApi();\n\
            let body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"\
            <VALUE_2>\",}}; // Object | The supporting resource to be added to the\
            \ goal\nlet goal_gid = \"12345\"; // String | Globally unique identifier\
            \ for the goal.\nlet opts = { \n    'opt_fields': \"contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name\"\
            \n};\ngoalRelationshipsApiInstance.addSupportingRelationship(body, goal_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goal_relationships_api_instance = asana.GoalRelationshipsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The supporting resource to be added to the goal
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "contribution_weight,resource_subtype,supported_goal,supported_goal.name,supported_goal.owner,supported_goal.owner.name,supporting_resource,supporting_resource.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add a supporting goal relationship
                api_response = goal_relationships_api_instance.add_supporting_relationship(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalRelationshipsApi->add_supporting_relationship: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goal_relationships.add_supporting_relationship(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goalrelationships->addSupportingRelationship($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goal_relationships.add_supporting_relationship(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/removeSupportingRelationship:
    post:
      tags:
      - Goal relationships
      summary: Removes a supporting goal relationship
      description: Removes a goal relationship for a given parent goal.
      operationId: removeSupportingRelationship
      requestBody:
        description: The supporting resource to be removed from the goal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidRemoveSupportingRelationshipBody'
        required: true
      responses:
        "200":
          description: Successfully removed the goal relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20019'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goalrelationships.removeSupportingRelationship(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let goalRelationshipsApiInstance = new Asana.GoalRelationshipsApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The supporting resource to be removed from the goal
            let goal_gid = "12345"; // String | Globally unique identifier for the goal.

            goalRelationshipsApiInstance.removeSupportingRelationship(body, goal_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goal_relationships_api_instance = asana.GoalRelationshipsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The supporting resource to be removed from the goal
            goal_gid = "12345" # str | Globally unique identifier for the goal.


            try:
                # Removes a supporting goal relationship
                api_response = goal_relationships_api_instance.remove_supporting_relationship(body, goal_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalRelationshipsApi->remove_supporting_relationship: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goal_relationships.remove_supporting_relationship(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goalrelationships->removeSupportingRelationship($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goal_relationships.remove_supporting_relationship(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}:
    get:
      tags:
      - Goals
      summary: Get a goal
      description: Returns the complete goal record for a single goal.
      operationId: getGoal
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a single goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20020'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.getGoal(goalGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet goal_gid = \"12345\"\
            ; // String | Globally unique identifier for the goal.\nlet opts = { \n\
            \    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.getGoal(goal_gid, opts).then((result) => {\n  \
            \  console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.getGoal(goalGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a goal
                api_response = goals_api_instance.get_goal(goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->get_goal: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.get_goal(goal_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->getGoal($goal_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.get_goal(goal_gid: 'goal_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Goals
      summary: Update a goal
      description: |-
        An existing goal can be updated by making a PUT request on the URL for
        that goal. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged.

        Returns the complete updated goal record.
      operationId: updateGoal
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the goal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsgoalGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20021'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.updateGoal(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The updated fields for the goal.\nlet goal_gid = \"12345\"; // String\
            \ | Globally unique identifier for the goal.\nlet opts = { \n    'opt_fields':\
            \ \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.updateGoal(body, goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.updateGoal(goalGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the goal.
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a goal
                api_response = goals_api_instance.update_goal(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->update_goal: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.update_goal(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->updateGoal($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.update_goal(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Goals
      summary: Delete a goal
      description: |-
        A specific, existing goal can be deleted by making a DELETE request on the URL for that goal.

        Returns an empty data record.
      operationId: deleteGoal
      responses:
        "200":
          description: Successfully deleted the specified goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20022'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.deleteGoal(goalGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let goalsApiInstance = new Asana.GoalsApi();
            let goal_gid = "12345"; // String | Globally unique identifier for the goal.

            goalsApiInstance.deleteGoal(goal_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.deleteGoal(goalGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            goal_gid = "12345" # str | Globally unique identifier for the goal.


            try:
                # Delete a goal
                api_response = goals_api_instance.delete_goal(goal_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->delete_goal: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.delete_goal(goal_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->deleteGoal($goal_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.delete_goal(goal_gid: 'goal_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals:
    get:
      tags:
      - Goals
      summary: Get goals
      description: Returns compact goal records.
      operationId: getGoals
      parameters:
      - name: portfolio
        in: query
        description: Globally unique identifier for supporting portfolio
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "159874"
      - name: project
        in: query
        description: Globally unique identifier for supporting project
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "512241"
      - name: task
        in: query
        description: Globally unique identifier for supporting task
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "78424"
      - name: is_workspace_level
        in: query
        description: Filter to goals with is_workspace_level set to query value. Must
          be used with the workspace parameter
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: false
        x-ballerina-name: isWorkspaceLevel
      - name: team
        in: query
        description: Globally unique identifier for the team
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "31326"
      - name: workspace
        in: query
        description: Globally unique identifier for the workspace
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "31326"
      - name: time_periods
        in: query
        description: Globally unique identifiers for the time periods
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example: "221693,506165"
        x-ballerina-name: timePeriods
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - offset
            - owner
            - owner.name
            - path
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - uri
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - offset
        - owner
        - owner.name
        - path
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested goals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20023'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.goals.getGoals(timePeriods, workspace, team, isWorkspaceLevel, project, portfolio)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet opts = { \n    'portfolio':\
            \ \"159874\", \n    'project': \"512241\", \n    'task': \"78424\", \n\
            \    'is_workspace_level': false, \n    'team': \"31326\", \n    'workspace':\
            \ \"31326\", \n    'time_periods': \"221693,506165\", \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,offset,owner,owner.name,path,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,uri,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.getGoals(opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.getGoals({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            opts = {
                'portfolio': "159874", # str | Globally unique identifier for supporting portfolio.
                'project': "512241", # str | Globally unique identifier for supporting project.
                'task': "78424", # str | Globally unique identifier for supporting task.
                'is_workspace_level': False, # bool | Filter to goals with is_workspace_level set to query value. Must be used with the workspace parameter.
                'team': "31326", # str | Globally unique identifier for the team.
                'workspace': "31326", # str | Globally unique identifier for the workspace.
                'time_periods': "221693,506165", # list[str] | Globally unique identifiers for the time periods.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,offset,owner,owner.name,path,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get goals
                api_response = goals_api_instance.get_goals(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling GoalsApi->get_goals: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.get_goals({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->getGoals(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.get_goals(param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Goals
      summary: Create a goal
      description: |-
        Creates a new goal in a workspace or team.

        Returns the full record of the newly created goal.
      operationId: createGoal
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The goal to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalsBody'
        required: true
      responses:
        "201":
          description: Successfully created a new goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2012'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.createGoal()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The goal to create.\nlet opts = { \n    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.createGoal(body, opts).then((result) => {\n   \
            \ console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.createGoal({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The goal to create.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a goal
                api_response = goals_api_instance.create_goal(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->create_goal: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.create_goal({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->createGoal(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.create_goal(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/setMetric:
    post:
      tags:
      - Goals
      summary: Create a goal metric
      description: Creates and adds a goal metric to a specified goal. Note that this
        replaces an existing goal metric if one already exists.
      operationId: createGoalMetric
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The goal metric to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidSetMetricBody'
        required: true
      responses:
        "200":
          description: Successfully created a new goal metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20024'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.createGoalMetric(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The goal metric to create.\nlet goal_gid = \"12345\"; // String |\
            \ Globally unique identifier for the goal.\nlet opts = { \n    'opt_fields':\
            \ \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.createGoalMetric(body, goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.createGoalMetric(goalGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The goal metric to create.
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a goal metric
                api_response = goals_api_instance.create_goal_metric(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->create_goal_metric: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.create_goal_metric(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->createGoalMetric($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.create_goal_metric(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/setMetricCurrentValue:
    post:
      tags:
      - Goals
      summary: Update a goal metric
      description: |-
        Updates a goal's existing metric's `current_number_value` if one exists,
        otherwise responds with a 400 status code.

        Returns the complete updated goal metric record.
      operationId: updateGoalMetric
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the goal metric
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidSetMetricCurrentValueBody'
        required: true
      responses:
        "200":
          description: Successfully updated the goal metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20025'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.updateGoalMetric(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The updated fields for the goal metric.\nlet goal_gid = \"12345\"\
            ; // String | Globally unique identifier for the goal.\nlet opts = { \n\
            \    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.updateGoalMetric(body, goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.updateGoalMetric(goalGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the goal metric.
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a goal metric
                api_response = goals_api_instance.update_goal_metric(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->update_goal_metric: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.update_goal_metric(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->updateGoalMetric($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.update_goal_metric(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/addFollowers:
    post:
      tags:
      - Goals
      summary: Add a collaborator to a goal
      description: |-
        Adds followers to a goal. Returns the goal the followers were added to.
        Each goal can be associated with zero or more followers in the system.
        Requests to add/remove followers, if successful, will return the complete updated goal record, described above.
      operationId: addFollowers
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The followers to be added as collaborators
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidAddFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully added users as collaborators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20026'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.addFollowers(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The followers to be added as collaborators\nlet goal_gid = \"12345\"\
            ; // String | Globally unique identifier for the goal.\nlet opts = { \n\
            \    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.addFollowers(body, goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.addFollowers(goalGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The followers to be added as collaborators
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add a collaborator to a goal
                api_response = goals_api_instance.add_followers(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->add_followers: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.add_followers(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->addFollowers($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.add_followers(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/removeFollowers:
    post:
      tags:
      - Goals
      summary: Remove a collaborator from a goal
      description: |-
        Removes followers from a goal. Returns the goal the followers were removed from.
        Each goal can be associated with zero or more followers in the system.
        Requests to add/remove followers, if successful, will return the complete updated goal record, described above.
      operationId: removeFollowers
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The followers to be removed as collaborators
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalGidRemoveFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully removed users as collaborators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20027'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.goals.removeFollowers(goalGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The followers to be removed as collaborators\nlet goal_gid = \"12345\"\
            ; // String | Globally unique identifier for the goal.\nlet opts = { \n\
            \    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.removeFollowers(body, goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.removeFollowers(goalGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The followers to be removed as collaborators
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Remove a collaborator from a goal
                api_response = goals_api_instance.remove_followers(body, goal_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling GoalsApi->remove_followers: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.remove_followers(goal_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->removeFollowers($goal_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.remove_followers(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /goals/{goal_gid}/parentGoals:
    get:
      tags:
      - Goals
      summary: Get parent goals from a goal
      description: Returns a compact representation of all of the parent goals of
        a goal.
      operationId: getParentGoalsForGoal
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - due_on
            - followers
            - followers.name
            - html_notes
            - is_workspace_level
            - liked
            - likes
            - likes.user
            - likes.user.name
            - metric
            - metric.can_manage
            - metric.currency_code
            - metric.current_display_value
            - metric.current_number_value
            - metric.initial_number_value
            - metric.precision
            - metric.progress_source
            - metric.resource_subtype
            - metric.target_number_value
            - metric.unit
            - name
            - notes
            - num_likes
            - owner
            - owner.name
            - start_on
            - status
            - team
            - team.name
            - time_period
            - time_period.display_name
            - time_period.end_on
            - time_period.period
            - time_period.start_on
            - workspace
            - workspace.name
        example:
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - due_on
        - followers
        - followers.name
        - html_notes
        - is_workspace_level
        - liked
        - likes
        - likes.user
        - likes.user.name
        - metric
        - metric.can_manage
        - metric.currency_code
        - metric.current_display_value
        - metric.current_number_value
        - metric.initial_number_value
        - metric.precision
        - metric.progress_source
        - metric.resource_subtype
        - metric.target_number_value
        - metric.unit
        - name
        - notes
        - num_likes
        - owner
        - owner.name
        - start_on
        - status
        - team
        - team.name
        - time_period
        - time_period.display_name
        - time_period.end_on
        - time_period.period
        - time_period.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified goal's parent goals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20028'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.goals.getParentGoalsForGoal(goalGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet goalsApiInstance = new Asana.GoalsApi();\nlet goal_gid = \"12345\"\
            ; // String | Globally unique identifier for the goal.\nlet opts = { \n\
            \    'opt_fields': \"current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name\"\
            \n};\ngoalsApiInstance.getParentGoalsForGoal(goal_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.goals.getParentGoalsForGoal(goalGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            goals_api_instance = asana.GoalsApi(api_client)
            goal_gid = "12345" # str | Globally unique identifier for the goal.
            opts = {
                'opt_fields': "current_status_update,current_status_update.resource_subtype,current_status_update.title,due_on,followers,followers.name,html_notes,is_workspace_level,liked,likes,likes.user,likes.user.name,metric,metric.can_manage,metric.currency_code,metric.current_display_value,metric.current_number_value,metric.initial_number_value,metric.precision,metric.progress_source,metric.resource_subtype,metric.target_number_value,metric.unit,name,notes,num_likes,owner,owner.name,start_on,status,team,team.name,time_period,time_period.display_name,time_period.end_on,time_period.period,time_period.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get parent goals from a goal
                api_response = goals_api_instance.get_parent_goals_for_goal(goal_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling GoalsApi->get_parent_goals_for_goal: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.goals.get_parent_goals_for_goal(goal_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->goals->getParentGoalsForGoal($goal_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.goals.get_parent_goals_for_goal(goal_gid: 'goal_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/goal_path_gid'
    - $ref: '#/components/parameters/pretty'
  /jobs/{job_gid}:
    get:
      tags:
      - Jobs
      summary: Get a job by id
      description: Returns the full record for a job.
      operationId: getJob
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved Job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20029'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Job result = client.jobs.getJob(jobGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet jobsApiInstance = new Asana.JobsApi();\nlet job_gid = \"12345\"\
            ; // String | Globally unique identifier for the job.\nlet opts = { \n\
            \    'opt_fields': \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\njobsApiInstance.getJob(job_gid, opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.jobs.getJob(jobGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            jobs_api_instance = asana.JobsApi(api_client)
            job_gid = "12345" # str | Globally unique identifier for the job.
            opts = {
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a job by id
                api_response = jobs_api_instance.get_job(job_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling JobsApi->get_job: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.jobs.get_job(job_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->jobs->getJob($job_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.jobs.get_job(job_gid: 'job_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/job_path_gid'
    - $ref: '#/components/parameters/pretty'
  /memberships:
    get:
      tags:
      - Memberships
      summary: Get multiple memberships
      description: Returns compact `goal_membership` or `project_membership` records.
        The possible types for `parent` in this request are `goal` or `project`. An
        additional member (user GID or team GID) can be passed in to filter to a specific
        membership.
      operationId: getMemberships
      parameters:
      - name: parent
        in: query
        description: Globally unique identifier for `goal` or `project`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "159874"
      - name: member
        in: query
        description: Globally unique identifier for `team` or `user`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "1061493"
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - offset
            - path
            - uri
        example:
        - offset
        - path
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20030'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet membershipsApiInstance = new Asana.MembershipsApi();\nlet opts =\
            \ { \n    'parent': \"159874\", \n    'member': \"1061493\", \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"offset,path,uri\"\n};\nmembershipsApiInstance.getMemberships(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            memberships_api_instance = asana.MembershipsApi(api_client)
            opts = {
                'parent': "159874", # str | Globally unique identifier for `goal` or `project`.
                'member': "1061493", # str | Globally unique identifier for `team` or `user`.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "offset,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple memberships
                api_response = memberships_api_instance.get_memberships(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling MembershipsApi->get_memberships: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.memberships.get_memberships({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->memberships->getMemberships(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.memberships.get_memberships(parent: '&#x27;parent_example&#x27;', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Memberships
      summary: Create a membership
      description: |-
        Creates a new membership in a `goal` or `project`. `Teams` or `users` can be a member
        of `goals` or `projects`.

        Returns the full record of the newly created membership.
      operationId: createMembership
      requestBody:
        description: The updated fields for the membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipsBody'
        required: false
      responses:
        "201":
          description: Successfully created the requested membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2013'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet membershipsApiInstance = new Asana.MembershipsApi();\nlet opts =\
            \ { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\"\
            : \"<VALUE_2>\",}}\n};\nmembershipsApiInstance.createMembership(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            memberships_api_instance = asana.MembershipsApi(api_client)
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The updated fields for the membership.
            }

            try:
                # Create a membership
                api_response = memberships_api_instance.create_membership(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling MembershipsApi->create_membership: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.memberships.create_membership({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->memberships->createMembership(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.memberships.create_membership(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /memberships/{membership_gid}:
    get:
      tags:
      - Memberships
      summary: Get a membership
      description: Returns compact `project_membership` record for a single membership.
        `GET` only supports project memberships currently
      operationId: getMembership
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - access_level
            - member
            - member.name
            - parent
            - parent.name
            - resource_subtype
        example:
        - access_level
        - member
        - member.name
        - parent
        - parent.name
        - resource_subtype
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a single membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20031'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet membershipsApiInstance = new Asana.MembershipsApi();\nlet membership_gid\
            \ = \"12345\"; // String | Globally unique identifier for the membership.\n\
            let opts = { \n    'opt_fields': \"access_level,member,member.name,parent,parent.name,resource_subtype\"\
            \n};\nmembershipsApiInstance.getMembership(membership_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            memberships_api_instance = asana.MembershipsApi(api_client)
            membership_gid = "12345" # str | Globally unique identifier for the membership.
            opts = {
                'opt_fields': "access_level,member,member.name,parent,parent.name,resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a membership
                api_response = memberships_api_instance.get_membership(membership_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling MembershipsApi->get_membership: %s\n" % e)
          name: python-sdk-v5
    put:
      tags:
      - Memberships
      summary: Update a membership
      description: |-
        An existing membership can be updated by making a `PUT` request on the URL for
        that goal. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged. Memberships on `goals` and `projects` can be updated.

        Returns the full record of the updated membership.
      operationId: updateMembership
      requestBody:
        description: The membership to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipsmembershipGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the requested membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20032'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.memberships.update_membership(membership_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->memberships->updateMembership($membership_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.memberships.update_membership(membership_gid: 'membership_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Memberships
      summary: Delete a membership
      description: |-
        A specific, existing membership for a `goal` or `project` can be deleted by making a `DELETE` request
        on the URL for that membership.

        Returns an empty data record.
      operationId: deleteMembership
      responses:
        "200":
          description: Successfully deleted the requested membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20033'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let membershipsApiInstance = new Asana.MembershipsApi();
            let membership_gid = "12345"; // String | Globally unique identifier for the membership.

            membershipsApiInstance.deleteMembership(membership_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            memberships_api_instance = asana.MembershipsApi(api_client)
            membership_gid = "12345" # str | Globally unique identifier for the membership.


            try:
                # Delete a membership
                api_response = memberships_api_instance.delete_membership(membership_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling MembershipsApi->delete_membership: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.memberships.delete_membership(membership_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->memberships->deleteMembership($membership_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.memberships.delete_membership(membership_gid: 'membership_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/membership_path_gid'
    - $ref: '#/components/parameters/pretty'
  /organization_exports:
    post:
      tags:
      - Organization exports
      summary: Create an organization export request
      description: This method creates a request to export an Organization. Asana
        will complete the export at some point after you create the request.
      operationId: createOrganizationExport
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - download_url
            - organization
            - organization.name
            - state
        example:
        - created_at
        - download_url
        - organization
        - organization.name
        - state
        x-ballerina-name: optFields
      requestBody:
        description: The organization to export
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationExportsBody'
        required: true
      responses:
        "201":
          description: Successfully created organization export request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2014'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            OrganizationExport result = client.organizationexports.createOrganizationExport()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet organizationExportsApiInstance = new Asana.OrganizationExportsApi();\n\
            let body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"\
            <VALUE_2>\",}}; // Object | The organization to export.\nlet opts = {\
            \ \n    'opt_fields': \"created_at,download_url,organization,organization.name,state\"\
            \n};\norganizationExportsApiInstance.createOrganizationExport(body, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.organizationexports.createOrganizationExport({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            organization_exports_api_instance = asana.OrganizationExportsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The organization to export.
            opts = {
                'opt_fields': "created_at,download_url,organization,organization.name,state", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create an organization export request
                api_response = organization_exports_api_instance.create_organization_export(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling OrganizationExportsApi->create_organization_export: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.organization_exports.create_organization_export({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->organizationexports->createOrganizationExport(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.organization_exports.create_organization_export(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /organization_exports/{organization_export_gid}:
    get:
      tags:
      - Organization exports
      summary: Get details on an org export request
      description: Returns details of a previously-requested Organization export.
      operationId: getOrganizationExport
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - download_url
            - organization
            - organization.name
            - state
        example:
        - created_at
        - download_url
        - organization
        - organization.name
        - state
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved organization export object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20034'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            OrganizationExport result = client.organizationexports.getOrganizationExport(organizationExportGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet organizationExportsApiInstance = new Asana.OrganizationExportsApi();\n\
            let organization_export_gid = \"12345\"; // String | Globally unique identifier\
            \ for the organization export.\nlet opts = { \n    'opt_fields': \"created_at,download_url,organization,organization.name,state\"\
            \n};\norganizationExportsApiInstance.getOrganizationExport(organization_export_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.organizationexports.getOrganizationExport(organizationExportGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            organization_exports_api_instance = asana.OrganizationExportsApi(api_client)
            organization_export_gid = "12345" # str | Globally unique identifier for the organization export.
            opts = {
                'opt_fields': "created_at,download_url,organization,organization.name,state", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get details on an org export request
                api_response = organization_exports_api_instance.get_organization_export(organization_export_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling OrganizationExportsApi->get_organization_export: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.organization_exports.get_organization_export(organization_export_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->organizationexports->getOrganizationExport($organization_export_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.organization_exports.get_organization_export(organization_export_gid: 'organization_export_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/organization_export_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolio_memberships:
    get:
      tags:
      - Portfolio memberships
      summary: Get multiple portfolio memberships
      description: "Returns a list of portfolio memberships in compact representation.\
        \ You must specify `portfolio`, `portfolio` and `user`, or `workspace` and\
        \ `user`."
      operationId: getPortfolioMemberships
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - offset
            - path
            - portfolio
            - portfolio.name
            - uri
            - user
            - user.name
        example:
        - offset
        - path
        - portfolio
        - portfolio.name
        - uri
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved portfolio memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20035'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<PortfolioMembership> result = client.portfoliomemberships.getPortfolioMemberships(user, workspace, portfolio)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfolioMembershipsApiInstance = new Asana.PortfolioMembershipsApi();\n\
            let opts = { \n    'portfolio': \"12345\", \n    'workspace': \"12345\"\
            , \n    'user': \"me\", \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"offset,path,portfolio,portfolio.name,uri,user,user.name\"\
            \n};\nportfolioMembershipsApiInstance.getPortfolioMemberships(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfoliomemberships.getPortfolioMemberships({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolio_memberships_api_instance = asana.PortfolioMembershipsApi(api_client)
            opts = {
                'portfolio': "12345", # str | The portfolio to filter results on.
                'workspace': "12345", # str | The workspace to filter results on.
                'user': "me", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "offset,path,portfolio,portfolio.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple portfolio memberships
                api_response = portfolio_memberships_api_instance.get_portfolio_memberships(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling PortfolioMembershipsApi->get_portfolio_memberships: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolio_memberships.get_portfolio_memberships({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfoliomemberships->getPortfolioMemberships(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolio_memberships.get_portfolio_memberships(param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_query_param'
    - $ref: '#/components/parameters/workspace_query_param'
    - $ref: '#/components/parameters/user_query_param'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /portfolio_memberships/{portfolio_membership_gid}:
    get:
      tags:
      - Portfolio memberships
      summary: Get a portfolio membership
      description: Returns the complete portfolio record for a single portfolio membership.
      operationId: getPortfolioMembership
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - portfolio
            - portfolio.name
            - user
            - user.name
        example:
        - portfolio
        - portfolio.name
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested portfolio membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20036'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            PortfolioMembership result = client.portfoliomemberships.getPortfolioMembership(portfolioMembershipGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfolioMembershipsApiInstance = new Asana.PortfolioMembershipsApi();\n\
            let portfolio_membership_gid = \"1331\"; // String | \nlet opts = { \n\
            \    'opt_fields': \"portfolio,portfolio.name,user,user.name\"\n};\nportfolioMembershipsApiInstance.getPortfolioMembership(portfolio_membership_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfoliomemberships.getPortfolioMembership(portfolioMembershipGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\nportfolio_memberships_api_instance\
            \ = asana.PortfolioMembershipsApi(api_client)\nportfolio_membership_gid\
            \ = \"1331\" # str | \nopts = {\n    'opt_fields': \"portfolio,portfolio.name,user,user.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get a portfolio membership\n    api_response\
            \ = portfolio_memberships_api_instance.get_portfolio_membership(portfolio_membership_gid,\
            \ opts)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"\
            Exception when calling PortfolioMembershipsApi->get_portfolio_membership:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolio_memberships.get_portfolio_membership(portfolio_membership_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfoliomemberships->getPortfolioMembership($portfolio_membership_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolio_memberships.get_portfolio_membership(portfolio_membership_gid: 'portfolio_membership_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_membership_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/portfolio_memberships:
    get:
      tags:
      - Portfolio memberships
      summary: Get memberships from a portfolio
      description: Returns the compact portfolio membership records for the portfolio.
      operationId: getPortfolioMembershipsForPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - offset
            - path
            - portfolio
            - portfolio.name
            - uri
            - user
            - user.name
        example:
        - offset
        - path
        - portfolio
        - portfolio.name
        - uri
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested portfolio's memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20037'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<PortfolioMembership> result = client.portfoliomemberships.getPortfolioMembershipsForPortfolio(portfolioGid, user)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfolioMembershipsApiInstance = new Asana.PortfolioMembershipsApi();\n\
            let portfolio_gid = \"12345\"; // String | Globally unique identifier\
            \ for the portfolio.\nlet opts = { \n    'user': \"me\", \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"offset,path,portfolio,portfolio.name,uri,user,user.name\"\
            \n};\nportfolioMembershipsApiInstance.getPortfolioMembershipsForPortfolio(portfolio_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfoliomemberships.getPortfolioMembershipsForPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolio_memberships_api_instance = asana.PortfolioMembershipsApi(api_client)
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'user': "me", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "offset,path,portfolio,portfolio.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get memberships from a portfolio
                api_response = portfolio_memberships_api_instance.get_portfolio_memberships_for_portfolio(portfolio_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling PortfolioMembershipsApi->get_portfolio_memberships_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolio_memberships.get_portfolio_memberships_for_portfolio(portfolio_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfoliomemberships->getPortfolioMembershipsForPortfolio($portfolio_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolio_memberships.get_portfolio_memberships_for_portfolio(portfolio_gid: 'portfolio_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/user_query_param'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /portfolios:
    get:
      tags:
      - Portfolios
      summary: Get multiple portfolios
      description: Returns a list of the portfolios in compact representation that
        are owned by the current API user.
      operationId: getPortfolios
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: workspace
        in: query
        description: The workspace or organization to filter portfolios on
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "1331"
      - name: owner
        in: query
        description: "The user who owns the portfolio. Currently, API users can only\
          \ get a list of portfolios that they themselves own, unless the request\
          \ is made from a Service Account. In the case of a Service Account, if this\
          \ parameter is specified, then all portfolios owned by this parameter are\
          \ returned. Otherwise, all portfolios across the workspace are returned"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "14916"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - offset
            - owner
            - owner.name
            - path
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - uri
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - offset
        - owner
        - owner.name
        - path
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved portfolios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20038'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Portfolio> result = client.portfolios.getPortfolios(owner, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet workspace\
            \ = \"1331\"; // String | The workspace or organization to filter portfolios\
            \ on.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'owner': \"14916\", \n    'opt_fields': \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,offset,owner,owner.name,path,permalink_url,project_templates,project_templates.name,public,start_on,uri,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.getPortfolios(workspace, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.getPortfolios({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            workspace = "1331" # str | The workspace or organization to filter portfolios on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'owner': "14916", # str | The user who owns the portfolio. Currently, API users can only get a list of portfolios that they themselves own, unless the request is made from a Service Account. In the case of a Service Account, if this parameter is specified, then all portfolios owned by this parameter are returned. Otherwise, all portfolios across the workspace are returned.
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,offset,owner,owner.name,path,permalink_url,project_templates,project_templates.name,public,start_on,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple portfolios
                api_response = portfolios_api_instance.get_portfolios(workspace, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->get_portfolios: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.get_portfolios({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->getPortfolios(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.get_portfolios(workspace: '&#x27;workspace_example&#x27;', owner: '&#x27;owner_example&#x27;', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Portfolios
      summary: Create a portfolio
      description: |-
        Creates a new portfolio in the given workspace with the supplied name.

        Note that portfolios created in the Asana UI may have some state
        (like the “Priority” custom field) which is automatically added
        to the portfolio when it is created. Portfolios created via our
        API will *not* be created with the same initial state to allow
        integrations to create their own starting state on a portfolio.
      operationId: createPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - owner
            - owner.name
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - owner
        - owner.name
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The portfolio to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfoliosBody'
        required: true
      responses:
        "201":
          description: Successfully created portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2015'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Portfolio result = client.portfolios.createPortfolio()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | The portfolio to create.\nlet opts = { \n    'opt_fields':\
            \ \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.createPortfolio(body, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.createPortfolio({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The portfolio to create.
            opts = {
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a portfolio
                api_response = portfolios_api_instance.create_portfolio(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->create_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.create_portfolio({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->createPortfolio(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.create_portfolio(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}:
    get:
      tags:
      - Portfolios
      summary: Get a portfolio
      description: Returns the complete portfolio record for a single portfolio.
      operationId: getPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - owner
            - owner.name
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - owner
        - owner.name
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20039'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Portfolio result = client.portfolios.getPortfolio(portfolioGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet portfolio_gid\
            \ = \"12345\"; // String | Globally unique identifier for the portfolio.\n\
            let opts = { \n    'opt_fields': \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.getPortfolio(portfolio_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.getPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a portfolio
                api_response = portfolios_api_instance.get_portfolio(portfolio_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->get_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.get_portfolio(portfolio_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->getPortfolio($portfolio_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.get_portfolio(portfolio_gid: 'portfolio_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Portfolios
      summary: Update a portfolio
      description: |-
        An existing portfolio can be updated by making a PUT request on the URL for
        that portfolio. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged.

        Returns the complete updated portfolio record.
      operationId: updatePortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - owner
            - owner.name
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - owner
        - owner.name
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the portfolio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfoliosportfolioGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20040'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Portfolio result = client.portfolios.updatePortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | The updated fields for the portfolio.\nlet portfolio_gid\
            \ = \"12345\"; // String | Globally unique identifier for the portfolio.\n\
            let opts = { \n    'opt_fields': \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.updatePortfolio(body, portfolio_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.updatePortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the portfolio.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a portfolio
                api_response = portfolios_api_instance.update_portfolio(body, portfolio_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->update_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.update_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->updatePortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.update_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Portfolios
      summary: Delete a portfolio
      description: |-
        An existing portfolio can be deleted by making a DELETE request on
        the URL for that portfolio.

        Returns an empty data record.
      operationId: deletePortfolio
      responses:
        "200":
          description: Successfully deleted the specified portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20041'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.portfolios.deletePortfolio(portfolioGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let portfoliosApiInstance = new Asana.PortfoliosApi();
            let portfolio_gid = "12345"; // String | Globally unique identifier for the portfolio.

            portfoliosApiInstance.deletePortfolio(portfolio_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.deletePortfolio(portfolioGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.


            try:
                # Delete a portfolio
                api_response = portfolios_api_instance.delete_portfolio(portfolio_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->delete_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.delete_portfolio(portfolio_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->deletePortfolio($portfolio_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.delete_portfolio(portfolio_gid: 'portfolio_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/items:
    get:
      tags:
      - Portfolios
      summary: Get portfolio items
      description: Get a list of the items in compact form in a portfolio.
      operationId: getItemsForPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - offset
            - owner
            - path
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - uri
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - offset
        - owner
        - path
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested portfolio's items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20042'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Project> result = client.portfolios.getItemsForPortfolio(portfolioGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet portfolio_gid\
            \ = \"12345\"; // String | Globally unique identifier for the portfolio.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.getItemsForPortfolio(portfolio_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.getItemsForPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get portfolio items
                api_response = portfolios_api_instance.get_items_for_portfolio(portfolio_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->get_items_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.get_items_for_portfolio(portfolio_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->getItemsForPortfolio($portfolio_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.get_items_for_portfolio(portfolio_gid: 'portfolio_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /portfolios/{portfolio_gid}/addItem:
    post:
      tags:
      - Portfolios
      summary: Add a portfolio item
      description: |-
        Add an item to a portfolio.
        Returns an empty data block.
      operationId: addItemForPortfolio
      requestBody:
        description: Information about the item being inserted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidAddItemBody'
        required: true
      responses:
        "200":
          description: Successfully added the item to the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20043'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.portfolios.addItemForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let portfoliosApiInstance = new Asana.PortfoliosApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | Information about the item being inserted.
            let portfolio_gid = "12345"; // String | Globally unique identifier for the portfolio.

            portfoliosApiInstance.addItemForPortfolio(body, portfolio_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.addItemForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the item being inserted.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.


            try:
                # Add a portfolio item
                api_response = portfolios_api_instance.add_item_for_portfolio(body, portfolio_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->add_item_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.add_item_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->addItemForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.add_item_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/removeItem:
    post:
      tags:
      - Portfolios
      summary: Remove a portfolio item
      description: |-
        Remove an item from a portfolio.
        Returns an empty data block.
      operationId: removeItemForPortfolio
      requestBody:
        description: Information about the item being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidRemoveItemBody'
        required: true
      responses:
        "200":
          description: Successfully removed the item from the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20044'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.portfolios.removeItemForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let portfoliosApiInstance = new Asana.PortfoliosApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | Information about the item being removed.
            let portfolio_gid = "12345"; // String | Globally unique identifier for the portfolio.

            portfoliosApiInstance.removeItemForPortfolio(body, portfolio_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.removeItemForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the item being removed.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.


            try:
                # Remove a portfolio item
                api_response = portfolios_api_instance.remove_item_for_portfolio(body, portfolio_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->remove_item_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.remove_item_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->removeItemForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.remove_item_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/addCustomFieldSetting:
    post:
      tags:
      - Portfolios
      summary: Add a custom field to a portfolio
      description: Custom fields are associated with portfolios by way of custom field
        settings.  This method creates a setting for the portfolio.
      operationId: addCustomFieldSettingForPortfolio
      requestBody:
        description: Information about the custom field setting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidAddCustomFieldSettingBody'
        required: true
      responses:
        "200":
          description: Successfully added the custom field to the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20045'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            CustomFieldSetting result = client.portfolios.addCustomFieldSettingForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let portfoliosApiInstance = new Asana.PortfoliosApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | Information about the custom field setting.
            let portfolio_gid = "12345"; // String | Globally unique identifier for the portfolio.

            portfoliosApiInstance.addCustomFieldSettingForPortfolio(body, portfolio_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.addCustomFieldSettingForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the custom field setting.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.


            try:
                # Add a custom field to a portfolio
                api_response = portfolios_api_instance.add_custom_field_setting_for_portfolio(body, portfolio_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->add_custom_field_setting_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.add_custom_field_setting_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->addCustomFieldSettingForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.add_custom_field_setting_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/removeCustomFieldSetting:
    post:
      tags:
      - Portfolios
      summary: Remove a custom field from a portfolio
      description: Removes a custom field setting from a portfolio.
      operationId: removeCustomFieldSettingForPortfolio
      requestBody:
        description: Information about the custom field setting being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidRemoveCustomFieldSettingBody'
        required: true
      responses:
        "200":
          description: Successfully removed the custom field from the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20046'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.portfolios.removeCustomFieldSettingForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let portfoliosApiInstance = new Asana.PortfoliosApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | Information about the custom field setting being removed.
            let portfolio_gid = "12345"; // String | Globally unique identifier for the portfolio.

            portfoliosApiInstance.removeCustomFieldSettingForPortfolio(body, portfolio_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.removeCustomFieldSettingForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the custom field setting being removed.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.


            try:
                # Remove a custom field from a portfolio
                api_response = portfolios_api_instance.remove_custom_field_setting_for_portfolio(body, portfolio_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->remove_custom_field_setting_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.remove_custom_field_setting_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->removeCustomFieldSettingForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.remove_custom_field_setting_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/addMembers:
    post:
      tags:
      - Portfolios
      summary: Add users to a portfolio
      description: |-
        Adds the specified list of users as members of the portfolio.
        Returns the updated portfolio record.
      operationId: addMembersForPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - owner
            - owner.name
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - owner
        - owner.name
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the members being added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidAddMembersBody'
        required: true
      responses:
        "200":
          description: Successfully added members to the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20047'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Portfolio result = client.portfolios.addMembersForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | Information about the members being added.\nlet portfolio_gid\
            \ = \"12345\"; // String | Globally unique identifier for the portfolio.\n\
            let opts = { \n    'opt_fields': \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.addMembersForPortfolio(body, portfolio_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.addMembersForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the members being added.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add users to a portfolio
                api_response = portfolios_api_instance.add_members_for_portfolio(body, portfolio_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->add_members_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.add_members_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->addMembersForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.add_members_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /portfolios/{portfolio_gid}/removeMembers:
    post:
      tags:
      - Portfolios
      summary: Remove users from a portfolio
      description: |-
        Removes the specified list of users from members of the portfolio.
        Returns the updated portfolio record.
      operationId: removeMembersForPortfolio
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - created_by
            - created_by.name
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - due_on
            - members
            - members.name
            - name
            - owner
            - owner.name
            - permalink_url
            - project_templates
            - project_templates.name
            - public
            - start_on
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - created_by
        - created_by.name
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - due_on
        - members
        - members.name
        - name
        - owner
        - owner.name
        - permalink_url
        - project_templates
        - project_templates.name
        - public
        - start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the members being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioGidRemoveMembersBody'
        required: true
      responses:
        "200":
          description: Successfully removed the members from the portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20048'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Portfolio result = client.portfolios.removeMembersForPortfolio(portfolioGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet portfoliosApiInstance = new Asana.PortfoliosApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | Information about the members being removed.\nlet portfolio_gid\
            \ = \"12345\"; // String | Globally unique identifier for the portfolio.\n\
            let opts = { \n    'opt_fields': \"color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name\"\
            \n};\nportfoliosApiInstance.removeMembersForPortfolio(body, portfolio_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.portfolios.removeMembersForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            portfolios_api_instance = asana.PortfoliosApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the members being removed.
            portfolio_gid = "12345" # str | Globally unique identifier for the portfolio.
            opts = {
                'opt_fields': "color,created_at,created_by,created_by.name,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,due_on,members,members.name,name,owner,owner.name,permalink_url,project_templates,project_templates.name,public,start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Remove users from a portfolio
                api_response = portfolios_api_instance.remove_members_for_portfolio(body, portfolio_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling PortfoliosApi->remove_members_for_portfolio: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.portfolios.remove_members_for_portfolio(portfolio_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->portfolios->removeMembersForPortfolio($portfolio_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.portfolios.remove_members_for_portfolio(portfolio_gid: 'portfolio_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/portfolio_path_gid'
    - $ref: '#/components/parameters/pretty'
  /project_briefs/{project_brief_gid}:
    get:
      tags:
      - Project briefs
      summary: Get a project brief
      description: Get the full record for a project brief.
      operationId: getProjectBrief
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - html_text
            - permalink_url
            - project
            - project.name
            - text
            - title
        example:
        - html_text
        - permalink_url
        - project
        - project.name
        - text
        - title
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a project brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20049'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "424":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "501":
          $ref: '#/components/responses/BadGateway'
        "503":
          $ref: '#/components/responses/ServiceUnavailable'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projectbriefs.getProjectBrief(projectBriefGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectBriefsApiInstance = new Asana.ProjectBriefsApi();\nlet project_brief_gid\
            \ = \"12345\"; // String | Globally unique identifier for the project\
            \ brief.\nlet opts = { \n    'opt_fields': \"html_text,permalink_url,project,project.name,text,title\"\
            \n};\nprojectBriefsApiInstance.getProjectBrief(project_brief_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectbriefs.getProjectBrief(projectBriefGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
            project_brief_gid = "12345" # str | Globally unique identifier for the project brief.
            opts = {
                'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a project brief
                api_response = project_briefs_api_instance.get_project_brief(project_brief_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectBriefsApi->get_project_brief: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_briefs.get_project_brief(project_brief_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectbriefs->getProjectBrief($project_brief_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_briefs.get_project_brief(project_brief_gid: 'project_brief_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Project briefs
      summary: Update a project brief
      description: |-
        An existing project brief can be updated by making a PUT request on the URL for
        that project brief. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged.

        Returns the complete updated project brief record.
      operationId: updateProjectBrief
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - html_text
            - permalink_url
            - project
            - project.name
            - text
            - title
        example:
        - html_text
        - permalink_url
        - project
        - project.name
        - text
        - title
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the project brief
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBriefsprojectBriefGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the project brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20050'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projectbriefs.updateProjectBrief(projectBriefGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectBriefsApiInstance = new Asana.ProjectBriefsApi();\nlet body\
            \ = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\"\
            ,}}; // Object | The updated fields for the project brief.\nlet project_brief_gid\
            \ = \"12345\"; // String | Globally unique identifier for the project\
            \ brief.\nlet opts = { \n    'opt_fields': \"html_text,permalink_url,project,project.name,text,title\"\
            \n};\nprojectBriefsApiInstance.updateProjectBrief(body, project_brief_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectbriefs.updateProjectBrief(projectBriefGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the project brief.
            project_brief_gid = "12345" # str | Globally unique identifier for the project brief.
            opts = {
                'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a project brief
                api_response = project_briefs_api_instance.update_project_brief(body, project_brief_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectBriefsApi->update_project_brief: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_briefs.update_project_brief(project_brief_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectbriefs->updateProjectBrief($project_brief_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_briefs.update_project_brief(project_brief_gid: 'project_brief_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Project briefs
      summary: Delete a project brief
      description: |-
        Deletes a specific, existing project brief.

        Returns an empty data record.
      operationId: deleteProjectBrief
      responses:
        "200":
          description: Successfully deleted the specified project brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20051'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projectbriefs.deleteProjectBrief(projectBriefGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let projectBriefsApiInstance = new Asana.ProjectBriefsApi();
            let project_brief_gid = "12345"; // String | Globally unique identifier for the project brief.

            projectBriefsApiInstance.deleteProjectBrief(project_brief_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectbriefs.deleteProjectBrief(projectBriefGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
            project_brief_gid = "12345" # str | Globally unique identifier for the project brief.


            try:
                # Delete a project brief
                api_response = project_briefs_api_instance.delete_project_brief(project_brief_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectBriefsApi->delete_project_brief: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_briefs.delete_project_brief(project_brief_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectbriefs->deleteProjectBrief($project_brief_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_briefs.delete_project_brief(project_brief_gid: 'project_brief_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_brief_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/project_briefs:
    post:
      tags:
      - Project briefs
      summary: Create a project brief
      description: |-
        Creates a new project brief.

        Returns the full record of the newly created project brief.
      operationId: createProjectBrief
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - html_text
            - permalink_url
            - project
            - project.name
            - text
            - title
        example:
        - html_text
        - permalink_url
        - project
        - project.name
        - text
        - title
        x-ballerina-name: optFields
      requestBody:
        description: The project brief to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidProjectBriefsBody'
        required: true
      responses:
        "201":
          description: Successfully created a new project brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2016'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projectbriefs.createProjectBrief(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectBriefsApiInstance = new Asana.ProjectBriefsApi();\nlet body\
            \ = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\"\
            ,}}; // Object | The project brief to create.\nlet project_gid = \"1331\"\
            ; // String | Globally unique identifier for the project.\nlet opts =\
            \ { \n    'opt_fields': \"html_text,permalink_url,project,project.name,text,title\"\
            \n};\nprojectBriefsApiInstance.createProjectBrief(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectbriefs.createProjectBrief(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project brief to create.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project brief
                api_response = project_briefs_api_instance.create_project_brief(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectBriefsApi->create_project_brief: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_briefs.create_project_brief(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectbriefs->createProjectBrief($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_briefs.create_project_brief(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /project_memberships/{project_membership_gid}:
    get:
      tags:
      - Project memberships
      summary: Get a project membership
      description: Returns the complete project record for a single project membership.
      operationId: getProjectMembership
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - access_level
            - member
            - member.name
            - parent
            - parent.name
            - project
            - project.name
            - user
            - user.name
            - write_access
        example:
        - access_level
        - member
        - member.name
        - parent
        - parent.name
        - project
        - project.name
        - user
        - user.name
        - write_access
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20052'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            ProjectMembership result = client.projectmemberships.getProjectMembership(projectMembershipGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectMembershipsApiInstance = new Asana.ProjectMembershipsApi();\n\
            let project_membership_gid = \"1331\"; // String | \nlet opts = { \n \
            \   'opt_fields': \"access_level,member,member.name,parent,parent.name,project,project.name,user,user.name,write_access\"\
            \n};\nprojectMembershipsApiInstance.getProjectMembership(project_membership_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectmemberships.getProjectMembership(projectMembershipGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\nproject_memberships_api_instance\
            \ = asana.ProjectMembershipsApi(api_client)\nproject_membership_gid =\
            \ \"1331\" # str | \nopts = {\n    'opt_fields': \"access_level,member,member.name,parent,parent.name,project,project.name,user,user.name,write_access\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get a project membership\n    api_response\
            \ = project_memberships_api_instance.get_project_membership(project_membership_gid,\
            \ opts)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"\
            Exception when calling ProjectMembershipsApi->get_project_membership:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_memberships.get_project_membership(project_membership_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectmemberships->getProjectMembership($project_membership_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_memberships.get_project_membership(project_membership_gid: 'project_membership_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_membership_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/project_memberships:
    get:
      tags:
      - Project memberships
      summary: Get memberships from a project
      description: Returns the compact project membership records for the project.
      operationId: getProjectMembershipsForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - access_level
            - member
            - member.name
            - offset
            - parent
            - parent.name
            - path
            - uri
        example:
        - access_level
        - member
        - member.name
        - offset
        - parent
        - parent.name
        - path
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project's memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20053'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<ProjectMembership> result = client.projectmemberships.getProjectMembershipsForProject(projectGid, user)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectMembershipsApiInstance = new Asana.ProjectMembershipsApi();\n\
            let project_gid = \"1331\"; // String | Globally unique identifier for\
            \ the project.\nlet opts = { \n    'user': \"me\", \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"access_level,member,member.name,offset,parent,parent.name,path,uri\"\
            \n};\nprojectMembershipsApiInstance.getProjectMembershipsForProject(project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectmemberships.getProjectMembershipsForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_memberships_api_instance = asana.ProjectMembershipsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'user': "me", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "access_level,member,member.name,offset,parent,parent.name,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get memberships from a project
                api_response = project_memberships_api_instance.get_project_memberships_for_project(project_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectMembershipsApi->get_project_memberships_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_memberships.get_project_memberships_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectmemberships->getProjectMembershipsForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_memberships.get_project_memberships_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/user_query_param'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /project_statuses/{project_status_gid}:
    get:
      tags:
      - Project statuses
      summary: Get a project status
      description: |-
        *Deprecated: new integrations should prefer the `/status_updates/{status_gid}` route.*

        Returns the complete record for a single status update.
      operationId: getProjectStatus
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - color
            - created_at
            - created_by
            - created_by.name
            - html_text
            - modified_at
            - text
            - title
        example:
        - author
        - author.name
        - color
        - created_at
        - created_by
        - created_by.name
        - html_text
        - modified_at
        - text
        - title
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified project's status updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20054'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            ProjectStatus result = client.projectstatuses.getProjectStatus(projectStatusGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectStatusesApiInstance = new Asana.ProjectStatusesApi();\nlet\
            \ project_status_gid = \"321654\"; // String | The project status update\
            \ to get.\nlet opts = { \n    'opt_fields': \"author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title\"\
            \n};\nprojectStatusesApiInstance.getProjectStatus(project_status_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectstatuses.getProjectStatus(projectStatusGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_statuses_api_instance = asana.ProjectStatusesApi(api_client)
            project_status_gid = "321654" # str | The project status update to get.
            opts = {
                'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a project status
                api_response = project_statuses_api_instance.get_project_status(project_status_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectStatusesApi->get_project_status: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_statuses.get_project_status(project_status_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectstatuses->getProjectStatus($project_status_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_statuses.get_project_status(project_status_gid: 'project_status_gid', param: "value", param: "value", options: {pretty: true})
    delete:
      tags:
      - Project statuses
      summary: Delete a project status
      description: |-
        *Deprecated: new integrations should prefer the `/status_updates/{status_gid}` route.*

        Deletes a specific, existing project status update.

        Returns an empty data record.
      operationId: deleteProjectStatus
      responses:
        "200":
          description: Successfully deleted the specified project status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20055'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projectstatuses.deleteProjectStatus(projectStatusGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let projectStatusesApiInstance = new Asana.ProjectStatusesApi();
            let project_status_gid = "321654"; // String | The project status update to get.

            projectStatusesApiInstance.deleteProjectStatus(project_status_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectstatuses.deleteProjectStatus(projectStatusGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_statuses_api_instance = asana.ProjectStatusesApi(api_client)
            project_status_gid = "321654" # str | The project status update to get.


            try:
                # Delete a project status
                api_response = project_statuses_api_instance.delete_project_status(project_status_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectStatusesApi->delete_project_status: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_statuses.delete_project_status(project_status_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectstatuses->deleteProjectStatus($project_status_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_statuses.delete_project_status(project_status_gid: 'project_status_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_status_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/project_statuses:
    get:
      tags:
      - Project statuses
      summary: Get statuses from a project
      description: |-
        *Deprecated: new integrations should prefer the `/status_updates` route.*

        Returns the compact project status update records for all updates on the project.
      operationId: getProjectStatusesForProject
      parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - color
            - created_at
            - created_by
            - created_by.name
            - html_text
            - modified_at
            - offset
            - path
            - text
            - title
            - uri
        example:
        - author
        - author.name
        - color
        - created_at
        - created_by
        - created_by.name
        - html_text
        - modified_at
        - offset
        - path
        - text
        - title
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified project's status updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20056'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<ProjectStatus> result = client.projectstatuses.getProjectStatusesForProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectStatusesApiInstance = new Asana.ProjectStatusesApi();\nlet\
            \ project_gid = \"1331\"; // String | Globally unique identifier for the\
            \ project.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,offset,path,text,title,uri\"\
            \n};\nprojectStatusesApiInstance.getProjectStatusesForProject(project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectstatuses.getProjectStatusesForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_statuses_api_instance = asana.ProjectStatusesApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,offset,path,text,title,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get statuses from a project
                api_response = project_statuses_api_instance.get_project_statuses_for_project(project_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectStatusesApi->get_project_statuses_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_statuses.get_project_statuses_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectstatuses->getProjectStatusesForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_statuses.get_project_statuses_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Project statuses
      summary: Create a project status
      description: |-
        *Deprecated: new integrations should prefer the `/status_updates` route.*

        Creates a new status update on the project.

        Returns the full record of the newly created project status update.
      operationId: createProjectStatusForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - color
            - created_at
            - created_by
            - created_by.name
            - html_text
            - modified_at
            - text
            - title
        example:
        - author
        - author.name
        - color
        - created_at
        - created_by
        - created_by.name
        - html_text
        - modified_at
        - text
        - title
        x-ballerina-name: optFields
      requestBody:
        description: The project status to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidProjectStatusesBody'
        required: true
      responses:
        "201":
          description: Successfully created a new story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2017'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            ProjectStatus result = client.projectstatuses.createProjectStatusForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectStatusesApiInstance = new Asana.ProjectStatusesApi();\nlet\
            \ body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\"\
            ,}}; // Object | The project status to create.\nlet project_gid = \"1331\"\
            ; // String | Globally unique identifier for the project.\nlet opts =\
            \ { \n    'opt_fields': \"author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title\"\
            \n};\nprojectStatusesApiInstance.createProjectStatusForProject(body, project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projectstatuses.createProjectStatusForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_statuses_api_instance = asana.ProjectStatusesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project status to create.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project status
                api_response = project_statuses_api_instance.create_project_status_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectStatusesApi->create_project_status_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_statuses.create_project_status_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projectstatuses->createProjectStatusForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_statuses.create_project_status_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /project_templates/{project_template_gid}:
    get:
      tags:
      - Project templates
      summary: Get a project template
      description: Returns the complete project template record for a single project
        template.
      operationId: getProjectTemplate
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - description
            - html_description
            - name
            - owner
            - public
            - requested_dates
            - requested_dates.description
            - requested_dates.name
            - requested_roles
            - requested_roles.name
            - team
            - team.name
        example:
        - color
        - description
        - html_description
        - name
        - owner
        - public
        - requested_dates
        - requested_dates.description
        - requested_dates.name
        - requested_roles
        - requested_roles.name
        - team
        - team.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20057'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projecttemplates.getProjectTemplate(projectTemplateGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectTemplatesApiInstance = new Asana.ProjectTemplatesApi();\n\
            let project_template_gid = \"1331\"; // String | Globally unique identifier\
            \ for the project template.\nlet opts = { \n    'opt_fields': \"color,description,html_description,name,owner,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name\"\
            \n};\nprojectTemplatesApiInstance.getProjectTemplate(project_template_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projecttemplates.getProjectTemplate(projectTemplateGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_templates_api_instance = asana.ProjectTemplatesApi(api_client)
            project_template_gid = "1331" # str | Globally unique identifier for the project template.
            opts = {
                'opt_fields': "color,description,html_description,name,owner,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a project template
                api_response = project_templates_api_instance.get_project_template(project_template_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectTemplatesApi->get_project_template: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_templates.get_project_template(project_template_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projecttemplates->getProjectTemplate($project_template_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_templates.get_project_template(project_template_gid: 'project_template_gid', param: "value", param: "value", options: {pretty: true})
    delete:
      tags:
      - Project templates
      summary: Delete a project template
      description: |-
        A specific, existing project template can be deleted by making a DELETE request on the URL for that project template.

        Returns an empty data record.
      operationId: deleteProjectTemplate
      responses:
        "200":
          description: Successfully deleted the specified project template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20058'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let projectTemplatesApiInstance = new Asana.ProjectTemplatesApi();
            let project_template_gid = "1331"; // String | Globally unique identifier for the project template.

            projectTemplatesApiInstance.deleteProjectTemplate(project_template_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_templates_api_instance = asana.ProjectTemplatesApi(api_client)
            project_template_gid = "1331" # str | Globally unique identifier for the project template.


            try:
                # Delete a project template
                api_response = project_templates_api_instance.delete_project_template(project_template_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectTemplatesApi->delete_project_template: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/project_template_path_gid'
    - $ref: '#/components/parameters/pretty'
  /project_templates:
    get:
      tags:
      - Project templates
      summary: Get multiple project templates
      description: Returns the compact project template records for all project templates
        in the given team or workspace.
      operationId: getProjectTemplates
      parameters:
      - $ref: '#/components/parameters/workspace_query_param'
      - $ref: '#/components/parameters/team_query_param'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - description
            - html_description
            - name
            - offset
            - owner
            - path
            - public
            - requested_dates
            - requested_dates.description
            - requested_dates.name
            - requested_roles
            - requested_roles.name
            - team
            - team.name
            - uri
        example:
        - color
        - description
        - html_description
        - name
        - offset
        - owner
        - path
        - public
        - requested_dates
        - requested_dates.description
        - requested_dates.name
        - requested_roles
        - requested_roles.name
        - team
        - team.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team's or workspace's
            project templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20059'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.projecttemplates.getProjectTemplates(team, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectTemplatesApiInstance = new Asana.ProjectTemplatesApi();\n\
            let opts = { \n    'workspace': \"12345\", \n    'team': \"14916\", \n\
            \    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"color,description,html_description,name,offset,owner,path,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name,uri\"\
            \n};\nprojectTemplatesApiInstance.getProjectTemplates(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projecttemplates.getProjectTemplates({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_templates_api_instance = asana.ProjectTemplatesApi(api_client)
            opts = {
                'workspace': "12345", # str | The workspace to filter results on.
                'team': "14916", # str | The team to filter projects on.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "color,description,html_description,name,offset,owner,path,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple project templates
                api_response = project_templates_api_instance.get_project_templates(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectTemplatesApi->get_project_templates: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_templates.get_project_templates({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projecttemplates->getProjectTemplates(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_templates.get_project_templates(param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /teams/{team_gid}/project_templates:
    get:
      tags:
      - Project templates
      summary: Get a team's project templates
      description: Returns the compact project template records for all project templates
        in the team.
      operationId: getProjectTemplatesForTeam
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - description
            - html_description
            - name
            - offset
            - owner
            - path
            - public
            - requested_dates
            - requested_dates.description
            - requested_dates.name
            - requested_roles
            - requested_roles.name
            - team
            - team.name
            - uri
        example:
        - color
        - description
        - html_description
        - name
        - offset
        - owner
        - path
        - public
        - requested_dates
        - requested_dates.description
        - requested_dates.name
        - requested_roles
        - requested_roles.name
        - team
        - team.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team's project templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20060'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.projecttemplates.getProjectTemplatesForTeam(teamGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectTemplatesApiInstance = new Asana.ProjectTemplatesApi();\n\
            let team_gid = \"159874\"; // String | Globally unique identifier for\
            \ the team.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"color,description,html_description,name,offset,owner,path,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name,uri\"\
            \n};\nprojectTemplatesApiInstance.getProjectTemplatesForTeam(team_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projecttemplates.getProjectTemplatesForTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_templates_api_instance = asana.ProjectTemplatesApi(api_client)
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "color,description,html_description,name,offset,owner,path,public,requested_dates,requested_dates.description,requested_dates.name,requested_roles,requested_roles.name,team,team.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a team's project templates
                api_response = project_templates_api_instance.get_project_templates_for_team(team_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectTemplatesApi->get_project_templates_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_templates.get_project_templates_for_team(team_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projecttemplates->getProjectTemplatesForTeam($team_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_templates.get_project_templates_for_team(team_gid: 'team_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
  /project_templates/{project_template_gid}/instantiateProject:
    post:
      tags:
      - Project templates
      summary: Instantiate a project from a project template
      description: |-
        Creates and returns a job that will asynchronously handle the project instantiation.

        To form this request, it is recommended to first make a request to [get a project template](/reference/getprojecttemplate). Then, from the response, copy the `gid` from the object in the `requested_dates` array. This `gid` should be used in `requested_dates` to instantiate a project.

        _Note: The body of this request will differ if your workspace is an organization. To determine if your workspace is an organization, use the [is_organization](/reference/workspaces) parameter._
      operationId: instantiateProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      requestBody:
        description: "Describes the inputs used for instantiating a project, such\
          \ as the resulting project's name, which team it should be created in, and\
          \ values for date variables"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTemplateGidInstantiateProjectBody'
      responses:
        "201":
          description: Successfully created the job to handle project instantiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2018'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Job result = client.projecttemplates.instantiateProject(projectTemplateGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectTemplatesApiInstance = new Asana.ProjectTemplatesApi();\n\
            let project_template_gid = \"1331\"; // String | Globally unique identifier\
            \ for the project template.\nlet opts = { \n    'body': {\"data\": {\"\
            <PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields':\
            \ \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\nprojectTemplatesApiInstance.instantiateProject(project_template_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projecttemplates.instantiateProject(projectTemplateGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            project_templates_api_instance = asana.ProjectTemplatesApi(api_client)
            project_template_gid = "1331" # str | Globally unique identifier for the project template.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | Describes the inputs used for instantiating a project, such as the resulting project's name, which team it should be created in, and values for date variables.
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Instantiate a project from a project template
                api_response = project_templates_api_instance.instantiate_project(project_template_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectTemplatesApi->instantiate_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.project_templates.instantiate_project(project_template_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projecttemplates->instantiateProject($project_template_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.project_templates.instantiate_project(project_template_gid: 'project_template_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_template_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects:
    get:
      tags:
      - Projects
      summary: Get multiple projects
      description: |-
        Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned.
        *Note: This endpoint may timeout for large domains. Try filtering by team!*
      operationId: getProjects
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: workspace
        in: query
        description: The workspace or organization to filter projects on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "1331"
      - name: team
        in: query
        description: The team to filter projects on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "14916"
      - $ref: '#/components/parameters/archived_query_param'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - offset
            - owner
            - path
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - uri
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - offset
        - owner
        - path
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20061'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Project> result = client.projects.getProjects(archived, team, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet opts = { \n\
            \    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'workspace': \"1331\", \n    'team': \"14916\", \n    'archived':\
            \ false, \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.getProjects(opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getProjects({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'workspace': "1331", # str | The workspace or organization to filter projects on.
                'team': "14916", # str | The team to filter projects on.
                'archived': False, # bool | Only return projects whose `archived` field takes on the value of this parameter.
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple projects
                api_response = projects_api_instance.get_projects(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_projects: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_projects({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getProjects(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_projects(param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Projects
      summary: Create a project
      description: |-
        Create a new project in a workspace or team.

        Every project is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the `workspace` parameter regardless of whether or not it is an
        organization.

        If the workspace for your project is an organization, you must also
        supply a `team` to share the project with.

        Returns the full record of the newly created project.
      operationId: createProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsBody'
        required: true
      responses:
        "201":
          description: Successfully retrieved projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2019'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.createProject()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The project to create.\nlet opts = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.createProject(body, opts).then((result) => {\n\
            \    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.createProject({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project to create.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project
                api_response = projects_api_instance.create_project(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->create_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.create_project({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->createProject(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.create_project(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}:
    get:
      tags:
      - Projects
      summary: Get a project
      description: Returns the complete project record for a single project.
      operationId: getProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20062'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.getProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.getProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a project
                api_response = projects_api_instance.get_project(project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Projects
      summary: Update a project
      description: |-
        A specific, existing project can be updated by making a PUT request on
        the URL for that project. Only the fields provided in the `data` block
        will be updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated project record.
      operationId: updateProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsprojectGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20063'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.updateProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The updated fields for the project.\nlet project_gid = \"1331\"; //\
            \ String | Globally unique identifier for the project.\nlet opts = { \n\
            \    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.updateProject(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.updateProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the project.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a project
                api_response = projects_api_instance.update_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->update_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.update_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->updateProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.update_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Projects
      summary: Delete a project
      description: |-
        A specific, existing project can be deleted by making a DELETE request on
        the URL for that project.

        Returns an empty data record.
      operationId: deleteProject
      responses:
        "200":
          description: Successfully deleted the specified project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20064'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projects.deleteProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let projectsApiInstance = new Asana.ProjectsApi();
            let project_gid = "1331"; // String | Globally unique identifier for the project.

            projectsApiInstance.deleteProject(project_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.deleteProject(projectGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.


            try:
                # Delete a project
                api_response = projects_api_instance.delete_project(project_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->delete_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.delete_project(project_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->deleteProject($project_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.delete_project(project_gid: 'project_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/duplicate:
    post:
      tags:
      - Projects
      summary: Duplicate a project
      description: Creates and returns a job that will asynchronously handle the duplication.
      operationId: duplicateProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      requestBody:
        description: Describes the duplicate's name and the elements that will be
          duplicated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidDuplicateBody'
      responses:
        "201":
          description: Successfully created the job to handle duplication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20110'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Job result = client.projects.duplicateProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\nprojectsApiInstance.duplicateProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.duplicateProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | Describes the duplicate's name and the elements that will be duplicated.
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Duplicate a project
                api_response = projects_api_instance.duplicate_project(project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->duplicate_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.duplicate_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->duplicateProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.duplicate_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/projects:
    get:
      tags:
      - Projects
      summary: Get projects a task is in
      description: Returns a compact representation of all of the projects the task
        is in.
      operationId: getProjectsForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - offset
            - owner
            - path
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - uri
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - offset
        - owner
        - path
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the projects for the given task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20065'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Project> result = client.projects.getProjectsForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet task_gid = \"\
            321654\"; // String | The task to operate on.\nlet opts = { \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.getProjectsForTask(task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getProjectsForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get projects a task is in
                api_response = projects_api_instance.get_projects_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_projects_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_projects_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getProjectsForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_projects_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /teams/{team_gid}/projects:
    get:
      tags:
      - Projects
      summary: Get a team's projects
      description: Returns the compact project records for all projects in the team.
      operationId: getProjectsForTeam
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/archived_query_param'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - offset
            - owner
            - path
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - uri
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - offset
        - owner
        - path
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team's projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20066'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Project> result = client.projects.getProjectsForTeam(teamGid, archived)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet team_gid = \"\
            159874\"; // String | Globally unique identifier for the team.\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'archived': false, \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.getProjectsForTeam(team_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getProjectsForTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'archived': False, # bool | Only return projects whose `archived` field takes on the value of this parameter.
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a team's projects
                api_response = projects_api_instance.get_projects_for_team(team_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_projects_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_projects_for_team(team_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getProjectsForTeam($team_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_projects_for_team(team_gid: 'team_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Projects
      summary: Create a project in a team
      description: |-
        Creates a project shared with the given team.

        Returns the full record of the newly created project.
      operationId: createProjectForTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The new project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGidProjectsBody'
        required: true
      responses:
        "201":
          description: Successfully created the specified project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20111'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.createProjectForTeam(teamGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The new project to create.\nlet team_gid = \"159874\"; // String |\
            \ Globally unique identifier for the team.\nlet opts = { \n    'opt_fields':\
            \ \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.createProjectForTeam(body, team_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.createProjectForTeam(teamGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The new project to create.
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project in a team
                api_response = projects_api_instance.create_project_for_team(body, team_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->create_project_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.create_project_for_team(team_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->createProjectForTeam($team_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.create_project_for_team(team_gid: 'team_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/projects:
    get:
      tags:
      - Projects
      summary: Get all projects in a workspace
      description: |-
        Returns the compact project records for all projects in the workspace.
        *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
      operationId: getProjectsForWorkspace
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/archived_query_param'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - offset
            - owner
            - path
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - uri
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - offset
        - owner
        - path
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested workspace's projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20067'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Project> result = client.projects.getProjectsForWorkspace(workspaceGid, archived)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet opts = { \n    'limit': 50, \n    'offset': \"\
            eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'archived': false, \n  \
            \  'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.getProjectsForWorkspace(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getProjectsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'archived': False, # bool | Only return projects whose `archived` field takes on the value of this parameter.
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,offset,owner,path,permalink_url,project_brief,public,start_on,team,team.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get all projects in a workspace
                api_response = projects_api_instance.get_projects_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_projects_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_projects_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getProjectsForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_projects_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Projects
      summary: Create a project in a workspace
      description: |-
        Creates a project in the workspace.

        If the workspace for your project is an organization, you must also
        supply a team to share the project with.

        Returns the full record of the newly created project.
      operationId: createProjectForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The new project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGidProjectsBody'
        required: true
      responses:
        "201":
          description: Successfully created a new project in the specified workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20112'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.createProjectForWorkspace(workspaceGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The new project to create.\nlet workspace_gid = \"12345\"; // String\
            \ | Globally unique identifier for the workspace or organization.\nlet\
            \ opts = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.createProjectForWorkspace(body, workspace_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.createProjectForWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The new project to create.
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project in a workspace
                api_response = projects_api_instance.create_project_for_workspace(body, workspace_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->create_project_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.create_project_for_workspace(workspace_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->createProjectForWorkspace($workspace_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.create_project_for_workspace(workspace_gid: 'workspace_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/addCustomFieldSetting:
    post:
      tags:
      - Projects
      summary: Add a custom field to a project
      description: Custom fields are associated with projects by way of custom field
        settings.  This method creates a setting for the project.
      operationId: addCustomFieldSettingForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - custom_field
            - custom_field.asana_created_field
            - custom_field.created_by
            - custom_field.created_by.name
            - custom_field.currency_code
            - custom_field.custom_label
            - custom_field.custom_label_position
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.description
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.format
            - custom_field.has_notifications_enabled
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.is_global_to_workspace
            - custom_field.is_value_read_only
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.people_value
            - custom_field.people_value.name
            - custom_field.precision
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - is_important
            - parent
            - parent.name
            - project
            - project.name
        example:
        - custom_field
        - custom_field.asana_created_field
        - custom_field.created_by
        - custom_field.created_by.name
        - custom_field.currency_code
        - custom_field.custom_label
        - custom_field.custom_label_position
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.description
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.format
        - custom_field.has_notifications_enabled
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.is_global_to_workspace
        - custom_field.is_value_read_only
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.people_value
        - custom_field.people_value.name
        - custom_field.precision
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - is_important
        - parent
        - parent.name
        - project
        - project.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the custom field setting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidAddCustomFieldSettingBody'
        required: true
      responses:
        "200":
          description: Successfully added the custom field to the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20068'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            CustomFieldSetting result = client.projects.addCustomFieldSettingForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Information about the custom field setting.\nlet project_gid = \"\
            1331\"; // String | Globally unique identifier for the project.\nlet opts\
            \ = { \n    'opt_fields': \"custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,parent,parent.name,project,project.name\"\
            \n};\nprojectsApiInstance.addCustomFieldSettingForProject(body, project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.addCustomFieldSettingForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the custom field setting.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "custom_field,custom_field.asana_created_field,custom_field.created_by,custom_field.created_by.name,custom_field.currency_code,custom_field.custom_label,custom_field.custom_label_position,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.description,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.format,custom_field.has_notifications_enabled,custom_field.id_prefix,custom_field.is_formula_field,custom_field.is_global_to_workspace,custom_field.is_value_read_only,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.people_value,custom_field.people_value.name,custom_field.precision,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,is_important,parent,parent.name,project,project.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add a custom field to a project
                api_response = projects_api_instance.add_custom_field_setting_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->add_custom_field_setting_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.add_custom_field_setting_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->addCustomFieldSettingForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.add_custom_field_setting_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/removeCustomFieldSetting:
    post:
      tags:
      - Projects
      summary: Remove a custom field from a project
      description: Removes a custom field setting from a project.
      operationId: removeCustomFieldSettingForProject
      requestBody:
        description: Information about the custom field setting being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidRemoveCustomFieldSettingBody'
        required: true
      responses:
        "200":
          description: Successfully removed the custom field from the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20069'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projects.removeCustomFieldSettingForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let projectsApiInstance = new Asana.ProjectsApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | Information about the custom field setting being removed.
            let project_gid = "1331"; // String | Globally unique identifier for the project.

            projectsApiInstance.removeCustomFieldSettingForProject(body, project_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.removeCustomFieldSettingForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the custom field setting being removed.
            project_gid = "1331" # str | Globally unique identifier for the project.


            try:
                # Remove a custom field from a project
                api_response = projects_api_instance.remove_custom_field_setting_for_project(body, project_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->remove_custom_field_setting_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.remove_custom_field_setting_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->removeCustomFieldSettingForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.remove_custom_field_setting_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/task_counts:
    get:
      tags:
      - Projects
      summary: Get task count of a project
      description: |-
        Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](/docs/inputoutput-options) using `opt_fields` to get any information from this endpoint.

        This endpoint has an additional [rate limit](/docs/rate-limits) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).

        Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
      operationId: getTaskCountsForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - num_completed_milestones
            - num_completed_tasks
            - num_incomplete_milestones
            - num_incomplete_tasks
            - num_milestones
            - num_tasks
        example:
        - num_completed_milestones
        - num_completed_tasks
        - num_incomplete_milestones
        - num_incomplete_tasks
        - num_milestones
        - num_tasks
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project's task counts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20070'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.projects.getTaskCountsForProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'opt_fields': \"num_completed_milestones,num_completed_tasks,num_incomplete_milestones,num_incomplete_tasks,num_milestones,num_tasks\"\
            \n};\nprojectsApiInstance.getTaskCountsForProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.getTaskCountsForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "num_completed_milestones,num_completed_tasks,num_incomplete_milestones,num_incomplete_tasks,num_milestones,num_tasks", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get task count of a project
                api_response = projects_api_instance.get_task_counts_for_project(project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->get_task_counts_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.get_task_counts_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->getTaskCountsForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.get_task_counts_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/addMembers:
    post:
      tags:
      - Projects
      summary: Add users to a project
      description: |-
        Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user's default notification settings (i.e., in the "Notifcations" tab of "My Profile Settings") will override this endpoint's default behavior of setting "Tasks added" notifications to `false`.
        Returns the updated project record.
      operationId: addMembersForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the members being added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidAddMembersBody'
        required: true
      responses:
        "200":
          description: Successfully added members to the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20071'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.addMembersForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Information about the members being added.\nlet project_gid = \"1331\"\
            ; // String | Globally unique identifier for the project.\nlet opts =\
            \ { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.addMembersForProject(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.addMembersForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the members being added.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add users to a project
                api_response = projects_api_instance.add_members_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->add_members_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.add_members_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->addMembersForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.add_members_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/removeMembers:
    post:
      tags:
      - Projects
      summary: Remove users from a project
      description: |-
        Removes the specified list of users from members of the project.
        Returns the updated project record.
      operationId: removeMembersForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the members being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidRemoveMembersBody'
        required: true
      responses:
        "200":
          description: Successfully removed the members from the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20072'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.removeMembersForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Information about the members being removed.\nlet project_gid = \"\
            1331\"; // String | Globally unique identifier for the project.\nlet opts\
            \ = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.removeMembersForProject(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.removeMembersForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the members being removed.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Remove users from a project
                api_response = projects_api_instance.remove_members_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->remove_members_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.remove_members_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->removeMembersForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.remove_members_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/addFollowers:
    post:
      tags:
      - Projects
      summary: Add followers to a project
      description: |-
        Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation.
        Returns the updated project record.
      operationId: addFollowersForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the followers being added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidAddFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully added followers to the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20073'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.addFollowersForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Information about the followers being added.\nlet project_gid = \"\
            1331\"; // String | Globally unique identifier for the project.\nlet opts\
            \ = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.addFollowersForProject(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.addFollowersForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the followers being added.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add followers to a project
                api_response = projects_api_instance.add_followers_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->add_followers_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.add_followers_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->addFollowersForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.add_followers_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/removeFollowers:
    post:
      tags:
      - Projects
      summary: Remove followers from a project
      description: |-
        Removes the specified list of users from following the project, this will not affect project membership status.
        Returns the updated project record.
      operationId: removeFollowersForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - archived
            - color
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_from_template
            - created_from_template.name
            - current_status
            - current_status.author
            - current_status.author.name
            - current_status.color
            - current_status.created_at
            - current_status.created_by
            - current_status.created_by.name
            - current_status.html_text
            - current_status.modified_at
            - current_status.text
            - current_status.title
            - current_status_update
            - current_status_update.resource_subtype
            - current_status_update.title
            - custom_field_settings
            - custom_field_settings.custom_field
            - custom_field_settings.custom_field.asana_created_field
            - custom_field_settings.custom_field.created_by
            - custom_field_settings.custom_field.created_by.name
            - custom_field_settings.custom_field.currency_code
            - custom_field_settings.custom_field.custom_label
            - custom_field_settings.custom_field.custom_label_position
            - custom_field_settings.custom_field.date_value
            - custom_field_settings.custom_field.date_value.date
            - custom_field_settings.custom_field.date_value.date_time
            - custom_field_settings.custom_field.description
            - custom_field_settings.custom_field.display_value
            - custom_field_settings.custom_field.enabled
            - custom_field_settings.custom_field.enum_options
            - custom_field_settings.custom_field.enum_options.color
            - custom_field_settings.custom_field.enum_options.enabled
            - custom_field_settings.custom_field.enum_options.name
            - custom_field_settings.custom_field.enum_value
            - custom_field_settings.custom_field.enum_value.color
            - custom_field_settings.custom_field.enum_value.enabled
            - custom_field_settings.custom_field.enum_value.name
            - custom_field_settings.custom_field.format
            - custom_field_settings.custom_field.has_notifications_enabled
            - custom_field_settings.custom_field.id_prefix
            - custom_field_settings.custom_field.is_formula_field
            - custom_field_settings.custom_field.is_global_to_workspace
            - custom_field_settings.custom_field.is_value_read_only
            - custom_field_settings.custom_field.multi_enum_values
            - custom_field_settings.custom_field.multi_enum_values.color
            - custom_field_settings.custom_field.multi_enum_values.enabled
            - custom_field_settings.custom_field.multi_enum_values.name
            - custom_field_settings.custom_field.name
            - custom_field_settings.custom_field.number_value
            - custom_field_settings.custom_field.people_value
            - custom_field_settings.custom_field.people_value.name
            - custom_field_settings.custom_field.precision
            - custom_field_settings.custom_field.representation_type
            - custom_field_settings.custom_field.resource_subtype
            - custom_field_settings.custom_field.text_value
            - custom_field_settings.custom_field.type
            - custom_field_settings.is_important
            - custom_field_settings.parent
            - custom_field_settings.parent.name
            - custom_field_settings.project
            - custom_field_settings.project.name
            - custom_fields
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - default_access_level
            - default_view
            - due_date
            - due_on
            - followers
            - followers.name
            - html_notes
            - icon
            - members
            - members.name
            - minimum_access_level_for_customization
            - minimum_access_level_for_sharing
            - modified_at
            - name
            - notes
            - owner
            - permalink_url
            - privacy_setting
            - project_brief
            - public
            - start_on
            - team
            - team.name
            - workspace
            - workspace.name
        example:
        - archived
        - color
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_from_template
        - created_from_template.name
        - current_status
        - current_status.author
        - current_status.author.name
        - current_status.color
        - current_status.created_at
        - current_status.created_by
        - current_status.created_by.name
        - current_status.html_text
        - current_status.modified_at
        - current_status.text
        - current_status.title
        - current_status_update
        - current_status_update.resource_subtype
        - current_status_update.title
        - custom_field_settings
        - custom_field_settings.custom_field
        - custom_field_settings.custom_field.asana_created_field
        - custom_field_settings.custom_field.created_by
        - custom_field_settings.custom_field.created_by.name
        - custom_field_settings.custom_field.currency_code
        - custom_field_settings.custom_field.custom_label
        - custom_field_settings.custom_field.custom_label_position
        - custom_field_settings.custom_field.date_value
        - custom_field_settings.custom_field.date_value.date
        - custom_field_settings.custom_field.date_value.date_time
        - custom_field_settings.custom_field.description
        - custom_field_settings.custom_field.display_value
        - custom_field_settings.custom_field.enabled
        - custom_field_settings.custom_field.enum_options
        - custom_field_settings.custom_field.enum_options.color
        - custom_field_settings.custom_field.enum_options.enabled
        - custom_field_settings.custom_field.enum_options.name
        - custom_field_settings.custom_field.enum_value
        - custom_field_settings.custom_field.enum_value.color
        - custom_field_settings.custom_field.enum_value.enabled
        - custom_field_settings.custom_field.enum_value.name
        - custom_field_settings.custom_field.format
        - custom_field_settings.custom_field.has_notifications_enabled
        - custom_field_settings.custom_field.id_prefix
        - custom_field_settings.custom_field.is_formula_field
        - custom_field_settings.custom_field.is_global_to_workspace
        - custom_field_settings.custom_field.is_value_read_only
        - custom_field_settings.custom_field.multi_enum_values
        - custom_field_settings.custom_field.multi_enum_values.color
        - custom_field_settings.custom_field.multi_enum_values.enabled
        - custom_field_settings.custom_field.multi_enum_values.name
        - custom_field_settings.custom_field.name
        - custom_field_settings.custom_field.number_value
        - custom_field_settings.custom_field.people_value
        - custom_field_settings.custom_field.people_value.name
        - custom_field_settings.custom_field.precision
        - custom_field_settings.custom_field.representation_type
        - custom_field_settings.custom_field.resource_subtype
        - custom_field_settings.custom_field.text_value
        - custom_field_settings.custom_field.type
        - custom_field_settings.is_important
        - custom_field_settings.parent
        - custom_field_settings.parent.name
        - custom_field_settings.project
        - custom_field_settings.project.name
        - custom_fields
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - default_access_level
        - default_view
        - due_date
        - due_on
        - followers
        - followers.name
        - html_notes
        - icon
        - members
        - members.name
        - minimum_access_level_for_customization
        - minimum_access_level_for_sharing
        - modified_at
        - name
        - notes
        - owner
        - permalink_url
        - privacy_setting
        - project_brief
        - public
        - start_on
        - team
        - team.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: Information about the followers being removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidRemoveFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully removed followers from the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20074'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Project result = client.projects.removeFollowersForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Information about the followers being removed.\nlet project_gid =\
            \ \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'opt_fields': \"archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name\"\
            \n};\nprojectsApiInstance.removeFollowersForProject(body, project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.removeFollowersForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the followers being removed.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "archived,color,completed,completed_at,completed_by,completed_by.name,created_at,created_from_template,created_from_template.name,current_status,current_status.author,current_status.author.name,current_status.color,current_status.created_at,current_status.created_by,current_status.created_by.name,current_status.html_text,current_status.modified_at,current_status.text,current_status.title,current_status_update,current_status_update.resource_subtype,current_status_update.title,custom_field_settings,custom_field_settings.custom_field,custom_field_settings.custom_field.asana_created_field,custom_field_settings.custom_field.created_by,custom_field_settings.custom_field.created_by.name,custom_field_settings.custom_field.currency_code,custom_field_settings.custom_field.custom_label,custom_field_settings.custom_field.custom_label_position,custom_field_settings.custom_field.date_value,custom_field_settings.custom_field.date_value.date,custom_field_settings.custom_field.date_value.date_time,custom_field_settings.custom_field.description,custom_field_settings.custom_field.display_value,custom_field_settings.custom_field.enabled,custom_field_settings.custom_field.enum_options,custom_field_settings.custom_field.enum_options.color,custom_field_settings.custom_field.enum_options.enabled,custom_field_settings.custom_field.enum_options.name,custom_field_settings.custom_field.enum_value,custom_field_settings.custom_field.enum_value.color,custom_field_settings.custom_field.enum_value.enabled,custom_field_settings.custom_field.enum_value.name,custom_field_settings.custom_field.format,custom_field_settings.custom_field.has_notifications_enabled,custom_field_settings.custom_field.id_prefix,custom_field_settings.custom_field.is_formula_field,custom_field_settings.custom_field.is_global_to_workspace,custom_field_settings.custom_field.is_value_read_only,custom_field_settings.custom_field.multi_enum_values,custom_field_settings.custom_field.multi_enum_values.color,custom_field_settings.custom_field.multi_enum_values.enabled,custom_field_settings.custom_field.multi_enum_values.name,custom_field_settings.custom_field.name,custom_field_settings.custom_field.number_value,custom_field_settings.custom_field.people_value,custom_field_settings.custom_field.people_value.name,custom_field_settings.custom_field.precision,custom_field_settings.custom_field.representation_type,custom_field_settings.custom_field.resource_subtype,custom_field_settings.custom_field.text_value,custom_field_settings.custom_field.type,custom_field_settings.is_important,custom_field_settings.parent,custom_field_settings.parent.name,custom_field_settings.project,custom_field_settings.project.name,custom_fields,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,default_access_level,default_view,due_date,due_on,followers,followers.name,html_notes,icon,members,members.name,minimum_access_level_for_customization,minimum_access_level_for_sharing,modified_at,name,notes,owner,permalink_url,project_brief,public,start_on,team,team.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Remove followers from a project
                api_response = projects_api_instance.remove_followers_for_project(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->remove_followers_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.remove_followers_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->removeFollowersForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.remove_followers_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/saveAsTemplate:
    post:
      tags:
      - Projects
      summary: Create a project template from a project
      description: |-
        Creates and returns a job that will asynchronously handle the project template creation. Note that
        while the resulting project template can be accessed with the API, it won't be visible in the Asana
        UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
      operationId: projectSaveAsTemplate
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      requestBody:
        description: "Describes the inputs used for creating a project template, such\
          \ as the resulting project template's name, which team it should be created\
          \ in"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidSaveAsTemplateBody'
        required: true
      responses:
        "201":
          description: Successfully created the job to handle project template creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20113'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Job result = client.projects.projectSaveAsTemplate(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet projectsApiInstance = new Asana.ProjectsApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Describes the inputs used for creating a project template, such as\
            \ the resulting project template's name, which team it should be created\
            \ in.\nlet project_gid = \"1331\"; // String | Globally unique identifier\
            \ for the project.\nlet opts = { \n    'opt_fields': \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\nprojectsApiInstance.projectSaveAsTemplate(body, project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.projects.projectSaveAsTemplate(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            projects_api_instance = asana.ProjectsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Describes the inputs used for creating a project template, such as the resulting project template's name, which team it should be created in.
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a project template from a project
                api_response = projects_api_instance.project_save_as_template(body, project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling ProjectsApi->project_save_as_template: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.projects.project_save_as_template(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->projects->projectSaveAsTemplate($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.projects.project_save_as_template(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /rule_triggers/{rule_trigger_gid}/run:
    post:
      tags:
      - Rules
      summary: Trigger a rule
      description: "Trigger a rule which uses an [\"incoming web request\"](/docs/incoming-web-requests)\
        \ trigger."
      operationId: triggerRule
      requestBody:
        description: A dictionary of variables accessible from within the rule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleTriggerGidRunBody'
        required: true
      responses:
        "200":
          description: Successfully triggered a rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20075'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let rulesApiInstance = new Asana.RulesApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | A dictionary of variables accessible from within the rule.
            let rule_trigger_gid = "12345"; // String | The ID of the incoming web request trigger. This value is a path parameter that is automatically generated for the API endpoint.

            rulesApiInstance.triggerRule(body, rule_trigger_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            rules_api_instance = asana.RulesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | A dictionary of variables accessible from within the rule.
            rule_trigger_gid = "12345" # str | The ID of the incoming web request trigger. This value is a path parameter that is automatically generated for the API endpoint.


            try:
                # Trigger a rule
                api_response = rules_api_instance.trigger_rule(body, rule_trigger_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling RulesApi->trigger_rule: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/rule_trigger_path_gid'
  /sections/{section_gid}:
    get:
      tags:
      - Sections
      summary: Get a section
      description: Returns the complete record for a single section.
      operationId: getSection
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - name
            - project
            - project.name
            - projects
            - projects.name
        example:
        - created_at
        - name
        - project
        - project.name
        - projects
        - projects.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20076'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Section result = client.sections.getSection(sectionGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet section_gid\
            \ = \"321654\"; // String | The globally unique identifier for the section.\n\
            let opts = { \n    'opt_fields': \"created_at,name,project,project.name,projects,projects.name\"\
            \n};\nsectionsApiInstance.getSection(section_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.getSection(sectionGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            section_gid = "321654" # str | The globally unique identifier for the section.
            opts = {
                'opt_fields': "created_at,name,project,project.name,projects,projects.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a section
                api_response = sections_api_instance.get_section(section_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->get_section: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.get_section(section_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->getSection($section_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.get_section(section_gid: 'section_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Sections
      summary: Update a section
      description: |-
        A specific, existing section can be updated by making a PUT request on
        the URL for that project. Only the fields provided in the `data` block
        will be updated; any unspecified fields will remain unchanged. (note that
        at this time, the only field that can be updated is the `name` field.)

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated section record.
      operationId: updateSection
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - name
            - project
            - project.name
            - projects
            - projects.name
        example:
        - created_at
        - name
        - project
        - project.name
        - projects
        - projects.name
        x-ballerina-name: optFields
      requestBody:
        description: The section to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionssectionGidBody'
      responses:
        "200":
          description: Successfully updated the specified section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20077'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Section result = client.sections.updateSection(sectionGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet section_gid\
            \ = \"321654\"; // String | The globally unique identifier for the section.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"created_at,name,project,project.name,projects,projects.name\"\
            \n};\nsectionsApiInstance.updateSection(section_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.updateSection(sectionGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            section_gid = "321654" # str | The globally unique identifier for the section.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The section to create.
                'opt_fields': "created_at,name,project,project.name,projects,projects.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a section
                api_response = sections_api_instance.update_section(section_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->update_section: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.update_section(section_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->updateSection($section_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.update_section(section_gid: 'section_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Sections
      summary: Delete a section
      description: |-
        A specific, existing section can be deleted by making a DELETE request on
        the URL for that section.

        Note that sections must be empty to be deleted.

        The last remaining section cannot be deleted.

        Returns an empty data block.
      operationId: deleteSection
      responses:
        "200":
          description: Successfully deleted the specified section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20078'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.sections.deleteSection(sectionGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let sectionsApiInstance = new Asana.SectionsApi();
            let section_gid = "321654"; // String | The globally unique identifier for the section.

            sectionsApiInstance.deleteSection(section_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.deleteSection(sectionGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            section_gid = "321654" # str | The globally unique identifier for the section.


            try:
                # Delete a section
                api_response = sections_api_instance.delete_section(section_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->delete_section: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.delete_section(section_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->deleteSection($section_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.delete_section(section_gid: 'section_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/section_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/sections:
    get:
      tags:
      - Sections
      summary: Get sections in a project
      description: Returns the compact records for all sections in the specified project.
      operationId: getSectionsForProject
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - name
            - offset
            - path
            - project
            - project.name
            - projects
            - projects.name
            - uri
        example:
        - created_at
        - name
        - offset
        - path
        - project
        - project.name
        - projects
        - projects.name
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved sections in project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20079'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Section> result = client.sections.getSectionsForProject(projectGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"created_at,name,offset,path,project,project.name,projects,projects.name,uri\"\
            \n};\nsectionsApiInstance.getSectionsForProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.getSectionsForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "created_at,name,offset,path,project,project.name,projects,projects.name,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get sections in a project
                api_response = sections_api_instance.get_sections_for_project(project_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling SectionsApi->get_sections_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.get_sections_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->getSectionsForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.get_sections_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Sections
      summary: Create a section in a project
      description: |-
        Creates a new section in a project.
        Returns the full record of the newly created section.
      operationId: createSectionForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - name
            - project
            - project.name
            - projects
            - projects.name
        example:
        - created_at
        - name
        - project
        - project.name
        - projects
        - projects.name
        x-ballerina-name: optFields
      requestBody:
        description: The section to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGidSectionsBody'
      responses:
        "201":
          description: Successfully created the specified section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20114'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Section result = client.sections.createSectionForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"created_at,name,project,project.name,projects,projects.name\"\
            \n};\nsectionsApiInstance.createSectionForProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.createSectionForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The section to create.
                'opt_fields': "created_at,name,project,project.name,projects,projects.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a section in a project
                api_response = sections_api_instance.create_section_for_project(project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->create_section_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.create_section_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->createSectionForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.create_section_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /sections/{section_gid}/addTask:
    post:
      tags:
      - Sections
      summary: Add task to section
      description: |-
        Add a task to a specific, existing section. This will remove the task from other sections of the project.

        The task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.

        This does not work for separators (tasks with the resource_subtype of section).
      operationId: addTaskForSection
      requestBody:
        description: The task and optionally the insert location
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionGidAddTaskBody'
      responses:
        "200":
          description: Successfully added the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20080'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.sections.addTaskForSection(sectionGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet section_gid\
            \ = \"321654\"; // String | The globally unique identifier for the section.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}\n};\nsectionsApiInstance.addTaskForSection(section_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.addTaskForSection(sectionGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            section_gid = "321654" # str | The globally unique identifier for the section.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The task and optionally the insert location.
            }

            try:
                # Add task to section
                api_response = sections_api_instance.add_task_for_section(section_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->add_task_for_section: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.add_task_for_section(section_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->addTaskForSection($section_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.add_task_for_section(section_gid: 'section_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/section_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/sections/insert:
    post:
      tags:
      - Sections
      summary: Move or Insert sections
      description: |-
        Move sections relative to each other. One of
        `before_section` or `after_section` is required.

        Sections cannot be moved between projects.

        Returns an empty data block.
      operationId: insertSectionForProject
      requestBody:
        description: The section's move action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionsInsertBody'
      responses:
        "200":
          description: Successfully moved the specified section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20081'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.sections.insertSectionForProject(projectGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet sectionsApiInstance = new Asana.SectionsApi();\nlet project_gid\
            \ = \"1331\"; // String | Globally unique identifier for the project.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}\n};\nsectionsApiInstance.insertSectionForProject(project_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.sections.insertSectionForProject(projectGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            sections_api_instance = asana.SectionsApi(api_client)
            project_gid = "1331" # str | Globally unique identifier for the project.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | The section's move action.
            }

            try:
                # Move or Insert sections
                api_response = sections_api_instance.insert_section_for_project(project_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling SectionsApi->insert_section_for_project: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.sections.insert_section_for_project(project_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->sections->insertSectionForProject($project_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.sections.insert_section_for_project(project_gid: 'project_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
  /status_updates/{status_update_gid}:
    get:
      tags:
      - Status updates
      summary: Get a status update
      description: Returns the complete record for a single status update.
      operationId: getStatus
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - created_at
            - created_by
            - created_by.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - liked
            - likes
            - likes.user
            - likes.user.name
            - modified_at
            - num_hearts
            - num_likes
            - parent
            - parent.name
            - resource_subtype
            - status_type
            - text
            - title
        example:
        - author
        - author.name
        - created_at
        - created_by
        - created_by.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - liked
        - likes
        - likes.user
        - likes.user.name
        - modified_at
        - num_hearts
        - num_likes
        - parent
        - parent.name
        - resource_subtype
        - status_type
        - text
        - title
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified object's status updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20082'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.statusupdates.getStatus(statusGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet statusUpdatesApiInstance = new Asana.StatusUpdatesApi();\nlet status_update_gid\
            \ = \"321654\"; // String | The status update to get.\nlet opts = { \n\
            \    'opt_fields': \"author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,parent,parent.name,resource_subtype,status_type,text,title\"\
            \n};\nstatusUpdatesApiInstance.getStatus(status_update_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.statusupdates.getStatus(statusGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            status_updates_api_instance = asana.StatusUpdatesApi(api_client)
            status_update_gid = "321654" # str | The status update to get.
            opts = {
                'opt_fields': "author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,parent,parent.name,resource_subtype,status_type,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a status update
                api_response = status_updates_api_instance.get_status(status_update_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StatusUpdatesApi->get_status: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.status_updates.get_status(status_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->statusupdates->getStatus($status_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.status_updates.get_status(status_gid: 'status_gid', param: "value", param: "value", options: {pretty: true})
    delete:
      tags:
      - Status updates
      summary: Delete a status update
      description: |-
        Deletes a specific, existing status update.

        Returns an empty data record.
      operationId: deleteStatus
      responses:
        "200":
          description: Successfully deleted the specified status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20083'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.statusupdates.deleteStatus(statusGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let statusUpdatesApiInstance = new Asana.StatusUpdatesApi();
            let status_update_gid = "321654"; // String | The status update to get.

            statusUpdatesApiInstance.deleteStatus(status_update_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.statusupdates.deleteStatus(statusGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            status_updates_api_instance = asana.StatusUpdatesApi(api_client)
            status_update_gid = "321654" # str | The status update to get.


            try:
                # Delete a status update
                api_response = status_updates_api_instance.delete_status(status_update_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StatusUpdatesApi->delete_status: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.status_updates.delete_status(status_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->statusupdates->deleteStatus($status_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.status_updates.delete_status(status_gid: 'status_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/status_update_path_gid'
    - $ref: '#/components/parameters/pretty'
  /status_updates:
    get:
      tags:
      - Status updates
      summary: Get status updates from an object
      description: Returns the compact status update records for all updates on the
        object.
      operationId: getStatusesForObject
      parameters:
      - name: parent
        in: query
        description: "Globally unique identifier for object to fetch statuses from.\
          \ Must be a GID for a project, portfolio, or goal"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "159874"
      - name: created_since
        in: query
        description: Only return statuses that have been created since the given time
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2012-02-22T02:06:58.158Z
        x-ballerina-name: createdSince
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - created_at
            - created_by
            - created_by.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - liked
            - likes
            - likes.user
            - likes.user.name
            - modified_at
            - num_hearts
            - num_likes
            - offset
            - parent
            - parent.name
            - path
            - resource_subtype
            - status_type
            - text
            - title
            - uri
        example:
        - author
        - author.name
        - created_at
        - created_by
        - created_by.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - liked
        - likes
        - likes.user
        - likes.user.name
        - modified_at
        - num_hearts
        - num_likes
        - offset
        - parent
        - parent.name
        - path
        - resource_subtype
        - status_type
        - text
        - title
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified object's status updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20084'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.statusupdates.getStatusesForObject(createdSince, parent)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet statusUpdatesApiInstance = new Asana.StatusUpdatesApi();\nlet parent\
            \ = \"159874\"; // String | Globally unique identifier for object to fetch\
            \ statuses from. Must be a GID for a project, portfolio, or goal.\nlet\
            \ opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'created_since': \"2012-02-22T02:06:58.158Z\", \n    'opt_fields':\
            \ \"author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,offset,parent,parent.name,path,resource_subtype,status_type,text,title,uri\"\
            \n};\nstatusUpdatesApiInstance.getStatusesForObject(parent, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.statusupdates.getStatusesForObject({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            status_updates_api_instance = asana.StatusUpdatesApi(api_client)
            parent = "159874" # str | Globally unique identifier for object to fetch statuses from. Must be a GID for a project, portfolio, or goal.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'created_since': '2012-02-22T02:06:58.158Z', # datetime | Only return statuses that have been created since the given time.
                'opt_fields': "author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,offset,parent,parent.name,path,resource_subtype,status_type,text,title,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get status updates from an object
                api_response = status_updates_api_instance.get_statuses_for_object(parent, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling StatusUpdatesApi->get_statuses_for_object: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.status_updates.get_statuses_for_object({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->statusupdates->getStatusesForObject(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.status_updates.get_statuses_for_object(parent: '&#x27;parent_example&#x27;', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Status updates
      summary: Create a status update
      description: |-
        Creates a new status update on an object.
        Returns the full record of the newly created status update.
      operationId: createStatusForObject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - author
            - author.name
            - created_at
            - created_by
            - created_by.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - liked
            - likes
            - likes.user
            - likes.user.name
            - modified_at
            - num_hearts
            - num_likes
            - parent
            - parent.name
            - resource_subtype
            - status_type
            - text
            - title
        example:
        - author
        - author.name
        - created_at
        - created_by
        - created_by.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - liked
        - likes
        - likes.user
        - likes.user.name
        - modified_at
        - num_hearts
        - num_likes
        - parent
        - parent.name
        - resource_subtype
        - status_type
        - text
        - title
        x-ballerina-name: optFields
      requestBody:
        description: The status update to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdatesBody'
        required: true
      responses:
        "201":
          description: Successfully created a new status update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20115'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.statusupdates.createStatusForObject()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet statusUpdatesApiInstance = new Asana.StatusUpdatesApi();\nlet body\
            \ = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\"\
            ,}}; // Object | The status update to create.\nlet opts = { \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,parent,parent.name,resource_subtype,status_type,text,title\"\
            \n};\nstatusUpdatesApiInstance.createStatusForObject(body, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.statusupdates.createStatusForObject({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            status_updates_api_instance = asana.StatusUpdatesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The status update to create.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "author,author.name,created_at,created_by,created_by.name,hearted,hearts,hearts.user,hearts.user.name,html_text,liked,likes,likes.user,likes.user.name,modified_at,num_hearts,num_likes,parent,parent.name,resource_subtype,status_type,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a status update
                api_response = status_updates_api_instance.create_status_for_object(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StatusUpdatesApi->create_status_for_object: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.status_updates.create_status_for_object({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->statusupdates->createStatusForObject(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.status_updates.create_status_for_object(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /stories/{story_gid}:
    get:
      tags:
      - Stories
      summary: Get a story
      description: Returns the full record for a single story.
      operationId: getStory
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - assignee
            - assignee.name
            - created_at
            - created_by
            - created_by.name
            - custom_field
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - dependency
            - dependency.created_by
            - dependency.name
            - dependency.resource_subtype
            - duplicate_of
            - duplicate_of.created_by
            - duplicate_of.name
            - duplicate_of.resource_subtype
            - duplicated_from
            - duplicated_from.created_by
            - duplicated_from.name
            - duplicated_from.resource_subtype
            - follower
            - follower.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - is_editable
            - is_edited
            - is_pinned
            - liked
            - likes
            - likes.user
            - likes.user.name
            - new_approval_status
            - new_date_value
            - new_dates
            - new_dates.due_at
            - new_dates.due_on
            - new_dates.start_on
            - new_enum_value
            - new_enum_value.color
            - new_enum_value.enabled
            - new_enum_value.name
            - new_multi_enum_values
            - new_multi_enum_values.color
            - new_multi_enum_values.enabled
            - new_multi_enum_values.name
            - new_name
            - new_number_value
            - new_people_value
            - new_people_value.name
            - new_resource_subtype
            - new_section
            - new_section.name
            - new_text_value
            - num_hearts
            - num_likes
            - old_approval_status
            - old_date_value
            - old_dates
            - old_dates.due_at
            - old_dates.due_on
            - old_dates.start_on
            - old_enum_value
            - old_enum_value.color
            - old_enum_value.enabled
            - old_enum_value.name
            - old_multi_enum_values
            - old_multi_enum_values.color
            - old_multi_enum_values.enabled
            - old_multi_enum_values.name
            - old_name
            - old_number_value
            - old_people_value
            - old_people_value.name
            - old_resource_subtype
            - old_section
            - old_section.name
            - old_text_value
            - previews
            - previews.fallback
            - previews.footer
            - previews.header
            - previews.header_link
            - previews.html_text
            - previews.text
            - previews.title
            - previews.title_link
            - project
            - project.name
            - resource_subtype
            - source
            - sticker_name
            - story
            - story.created_at
            - story.created_by
            - story.created_by.name
            - story.resource_subtype
            - story.text
            - tag
            - tag.name
            - target
            - target.created_by
            - target.name
            - target.resource_subtype
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
            - text
            - type
        example:
        - assignee
        - assignee.name
        - created_at
        - created_by
        - created_by.name
        - custom_field
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - dependency
        - dependency.created_by
        - dependency.name
        - dependency.resource_subtype
        - duplicate_of
        - duplicate_of.created_by
        - duplicate_of.name
        - duplicate_of.resource_subtype
        - duplicated_from
        - duplicated_from.created_by
        - duplicated_from.name
        - duplicated_from.resource_subtype
        - follower
        - follower.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - is_editable
        - is_edited
        - is_pinned
        - liked
        - likes
        - likes.user
        - likes.user.name
        - new_approval_status
        - new_date_value
        - new_dates
        - new_dates.due_at
        - new_dates.due_on
        - new_dates.start_on
        - new_enum_value
        - new_enum_value.color
        - new_enum_value.enabled
        - new_enum_value.name
        - new_multi_enum_values
        - new_multi_enum_values.color
        - new_multi_enum_values.enabled
        - new_multi_enum_values.name
        - new_name
        - new_number_value
        - new_people_value
        - new_people_value.name
        - new_resource_subtype
        - new_section
        - new_section.name
        - new_text_value
        - num_hearts
        - num_likes
        - old_approval_status
        - old_date_value
        - old_dates
        - old_dates.due_at
        - old_dates.due_on
        - old_dates.start_on
        - old_enum_value
        - old_enum_value.color
        - old_enum_value.enabled
        - old_enum_value.name
        - old_multi_enum_values
        - old_multi_enum_values.color
        - old_multi_enum_values.enabled
        - old_multi_enum_values.name
        - old_name
        - old_number_value
        - old_people_value
        - old_people_value.name
        - old_resource_subtype
        - old_section
        - old_section.name
        - old_text_value
        - previews
        - previews.fallback
        - previews.footer
        - previews.header
        - previews.header_link
        - previews.html_text
        - previews.text
        - previews.title
        - previews.title_link
        - project
        - project.name
        - resource_subtype
        - source
        - sticker_name
        - story
        - story.created_at
        - story.created_by
        - story.created_by.name
        - story.resource_subtype
        - story.text
        - tag
        - tag.name
        - target
        - target.created_by
        - target.name
        - target.resource_subtype
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        - text
        - type
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20085'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Story result = client.stories.getStory(storyGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet storiesApiInstance = new Asana.StoriesApi();\nlet story_gid = \"\
            35678\"; // String | Globally unique identifier for the story.\nlet opts\
            \ = { \n    'opt_fields': \"assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type\"\
            \n};\nstoriesApiInstance.getStory(story_gid, opts).then((result) => {\n\
            \    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.stories.getStory(storyGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            stories_api_instance = asana.StoriesApi(api_client)
            story_gid = "35678" # str | Globally unique identifier for the story.
            opts = {
                'opt_fields': "assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.id_prefix,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a story
                api_response = stories_api_instance.get_story(story_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StoriesApi->get_story: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.stories.get_story(story_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->stories->getStory($story_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.stories.get_story(story_gid: 'story_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Stories
      summary: Update a story
      description: "Updates the story and returns the full record for the updated\
        \ story. Only comment stories can have their text updated, and only comment\
        \ stories and attachment stories can be pinned. Only one of `text` and `html_text`\
        \ can be specified."
      operationId: updateStory
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - assignee
            - assignee.name
            - created_at
            - created_by
            - created_by.name
            - custom_field
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - dependency
            - dependency.created_by
            - dependency.name
            - dependency.resource_subtype
            - duplicate_of
            - duplicate_of.created_by
            - duplicate_of.name
            - duplicate_of.resource_subtype
            - duplicated_from
            - duplicated_from.created_by
            - duplicated_from.name
            - duplicated_from.resource_subtype
            - follower
            - follower.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - is_editable
            - is_edited
            - is_pinned
            - liked
            - likes
            - likes.user
            - likes.user.name
            - new_approval_status
            - new_date_value
            - new_dates
            - new_dates.due_at
            - new_dates.due_on
            - new_dates.start_on
            - new_enum_value
            - new_enum_value.color
            - new_enum_value.enabled
            - new_enum_value.name
            - new_multi_enum_values
            - new_multi_enum_values.color
            - new_multi_enum_values.enabled
            - new_multi_enum_values.name
            - new_name
            - new_number_value
            - new_people_value
            - new_people_value.name
            - new_resource_subtype
            - new_section
            - new_section.name
            - new_text_value
            - num_hearts
            - num_likes
            - old_approval_status
            - old_date_value
            - old_dates
            - old_dates.due_at
            - old_dates.due_on
            - old_dates.start_on
            - old_enum_value
            - old_enum_value.color
            - old_enum_value.enabled
            - old_enum_value.name
            - old_multi_enum_values
            - old_multi_enum_values.color
            - old_multi_enum_values.enabled
            - old_multi_enum_values.name
            - old_name
            - old_number_value
            - old_people_value
            - old_people_value.name
            - old_resource_subtype
            - old_section
            - old_section.name
            - old_text_value
            - previews
            - previews.fallback
            - previews.footer
            - previews.header
            - previews.header_link
            - previews.html_text
            - previews.text
            - previews.title
            - previews.title_link
            - project
            - project.name
            - resource_subtype
            - source
            - sticker_name
            - story
            - story.created_at
            - story.created_by
            - story.created_by.name
            - story.resource_subtype
            - story.text
            - tag
            - tag.name
            - target
            - target.created_by
            - target.name
            - target.resource_subtype
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
            - text
            - type
        example:
        - assignee
        - assignee.name
        - created_at
        - created_by
        - created_by.name
        - custom_field
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - dependency
        - dependency.created_by
        - dependency.name
        - dependency.resource_subtype
        - duplicate_of
        - duplicate_of.created_by
        - duplicate_of.name
        - duplicate_of.resource_subtype
        - duplicated_from
        - duplicated_from.created_by
        - duplicated_from.name
        - duplicated_from.resource_subtype
        - follower
        - follower.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - is_editable
        - is_edited
        - is_pinned
        - liked
        - likes
        - likes.user
        - likes.user.name
        - new_approval_status
        - new_date_value
        - new_dates
        - new_dates.due_at
        - new_dates.due_on
        - new_dates.start_on
        - new_enum_value
        - new_enum_value.color
        - new_enum_value.enabled
        - new_enum_value.name
        - new_multi_enum_values
        - new_multi_enum_values.color
        - new_multi_enum_values.enabled
        - new_multi_enum_values.name
        - new_name
        - new_number_value
        - new_people_value
        - new_people_value.name
        - new_resource_subtype
        - new_section
        - new_section.name
        - new_text_value
        - num_hearts
        - num_likes
        - old_approval_status
        - old_date_value
        - old_dates
        - old_dates.due_at
        - old_dates.due_on
        - old_dates.start_on
        - old_enum_value
        - old_enum_value.color
        - old_enum_value.enabled
        - old_enum_value.name
        - old_multi_enum_values
        - old_multi_enum_values.color
        - old_multi_enum_values.enabled
        - old_multi_enum_values.name
        - old_name
        - old_number_value
        - old_people_value
        - old_people_value.name
        - old_resource_subtype
        - old_section
        - old_section.name
        - old_text_value
        - previews
        - previews.fallback
        - previews.footer
        - previews.header
        - previews.header_link
        - previews.html_text
        - previews.text
        - previews.title
        - previews.title_link
        - project
        - project.name
        - resource_subtype
        - source
        - sticker_name
        - story
        - story.created_at
        - story.created_by
        - story.created_by.name
        - story.resource_subtype
        - story.text
        - tag
        - tag.name
        - target
        - target.created_by
        - target.name
        - target.resource_subtype
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        - text
        - type
        x-ballerina-name: optFields
      requestBody:
        description: The comment story to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoriesstoryGidBody'
        required: true
      responses:
        "200":
          description: Successfully retrieved the specified story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20086'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Story result = client.stories.updateStory(storyGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet storiesApiInstance = new Asana.StoriesApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The comment story to update.\nlet story_gid = \"35678\"; // String\
            \ | Globally unique identifier for the story.\nlet opts = { \n    'opt_fields':\
            \ \"assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type\"\
            \n};\nstoriesApiInstance.updateStory(body, story_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.stories.updateStory(storyGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            stories_api_instance = asana.StoriesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The comment story to update.
            story_gid = "35678" # str | Globally unique identifier for the story.
            opts = {
                'opt_fields': "assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.id_prefix,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a story
                api_response = stories_api_instance.update_story(body, story_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StoriesApi->update_story: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.stories.update_story(story_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->stories->updateStory($story_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.stories.update_story(story_gid: 'story_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Stories
      summary: Delete a story
      description: |-
        Deletes a story. A user can only delete stories they have created.

        Returns an empty data record.
      operationId: deleteStory
      responses:
        "200":
          description: Successfully deleted the specified story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20087'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.stories.deleteStory(storyGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let storiesApiInstance = new Asana.StoriesApi();
            let story_gid = "35678"; // String | Globally unique identifier for the story.

            storiesApiInstance.deleteStory(story_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.stories.deleteStory(storyGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            stories_api_instance = asana.StoriesApi(api_client)
            story_gid = "35678" # str | Globally unique identifier for the story.


            try:
                # Delete a story
                api_response = stories_api_instance.delete_story(story_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StoriesApi->delete_story: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.stories.delete_story(story_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->stories->deleteStory($story_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.stories.delete_story(story_gid: 'story_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/story_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/stories:
    get:
      tags:
      - Stories
      summary: Get stories from a task
      description: Returns the compact records for all stories on the task.
      operationId: getStoriesForTask
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - assignee
            - assignee.name
            - created_at
            - created_by
            - created_by.name
            - custom_field
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - dependency
            - dependency.created_by
            - dependency.name
            - dependency.resource_subtype
            - duplicate_of
            - duplicate_of.created_by
            - duplicate_of.name
            - duplicate_of.resource_subtype
            - duplicated_from
            - duplicated_from.created_by
            - duplicated_from.name
            - duplicated_from.resource_subtype
            - follower
            - follower.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - is_editable
            - is_edited
            - is_pinned
            - liked
            - likes
            - likes.user
            - likes.user.name
            - new_approval_status
            - new_date_value
            - new_dates
            - new_dates.due_at
            - new_dates.due_on
            - new_dates.start_on
            - new_enum_value
            - new_enum_value.color
            - new_enum_value.enabled
            - new_enum_value.name
            - new_multi_enum_values
            - new_multi_enum_values.color
            - new_multi_enum_values.enabled
            - new_multi_enum_values.name
            - new_name
            - new_number_value
            - new_people_value
            - new_people_value.name
            - new_resource_subtype
            - new_section
            - new_section.name
            - new_text_value
            - num_hearts
            - num_likes
            - offset
            - old_approval_status
            - old_date_value
            - old_dates
            - old_dates.due_at
            - old_dates.due_on
            - old_dates.start_on
            - old_enum_value
            - old_enum_value.color
            - old_enum_value.enabled
            - old_enum_value.name
            - old_multi_enum_values
            - old_multi_enum_values.color
            - old_multi_enum_values.enabled
            - old_multi_enum_values.name
            - old_name
            - old_number_value
            - old_people_value
            - old_people_value.name
            - old_resource_subtype
            - old_section
            - old_section.name
            - old_text_value
            - path
            - previews
            - previews.fallback
            - previews.footer
            - previews.header
            - previews.header_link
            - previews.html_text
            - previews.text
            - previews.title
            - previews.title_link
            - project
            - project.name
            - resource_subtype
            - source
            - sticker_name
            - story
            - story.created_at
            - story.created_by
            - story.created_by.name
            - story.resource_subtype
            - story.text
            - tag
            - tag.name
            - target
            - target.created_by
            - target.name
            - target.resource_subtype
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
            - text
            - type
            - uri
        example:
        - assignee
        - assignee.name
        - created_at
        - created_by
        - created_by.name
        - custom_field
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - dependency
        - dependency.created_by
        - dependency.name
        - dependency.resource_subtype
        - duplicate_of
        - duplicate_of.created_by
        - duplicate_of.name
        - duplicate_of.resource_subtype
        - duplicated_from
        - duplicated_from.created_by
        - duplicated_from.name
        - duplicated_from.resource_subtype
        - follower
        - follower.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - is_editable
        - is_edited
        - is_pinned
        - liked
        - likes
        - likes.user
        - likes.user.name
        - new_approval_status
        - new_date_value
        - new_dates
        - new_dates.due_at
        - new_dates.due_on
        - new_dates.start_on
        - new_enum_value
        - new_enum_value.color
        - new_enum_value.enabled
        - new_enum_value.name
        - new_multi_enum_values
        - new_multi_enum_values.color
        - new_multi_enum_values.enabled
        - new_multi_enum_values.name
        - new_name
        - new_number_value
        - new_people_value
        - new_people_value.name
        - new_resource_subtype
        - new_section
        - new_section.name
        - new_text_value
        - num_hearts
        - num_likes
        - offset
        - old_approval_status
        - old_date_value
        - old_dates
        - old_dates.due_at
        - old_dates.due_on
        - old_dates.start_on
        - old_enum_value
        - old_enum_value.color
        - old_enum_value.enabled
        - old_enum_value.name
        - old_multi_enum_values
        - old_multi_enum_values.color
        - old_multi_enum_values.enabled
        - old_multi_enum_values.name
        - old_name
        - old_number_value
        - old_people_value
        - old_people_value.name
        - old_resource_subtype
        - old_section
        - old_section.name
        - old_text_value
        - path
        - previews
        - previews.fallback
        - previews.footer
        - previews.header
        - previews.header_link
        - previews.html_text
        - previews.text
        - previews.title
        - previews.title_link
        - project
        - project.name
        - resource_subtype
        - source
        - sticker_name
        - story
        - story.created_at
        - story.created_by
        - story.created_by.name
        - story.resource_subtype
        - story.text
        - tag
        - tag.name
        - target
        - target.created_by
        - target.name
        - target.resource_subtype
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        - text
        - type
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified task's stories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20088'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Story> result = client.stories.getStoriesForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet storiesApiInstance = new Asana.StoriesApi();\nlet task_gid = \"\
            321654\"; // String | The task to operate on.\nlet opts = { \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,offset,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,path,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type,uri\"\
            \n};\nstoriesApiInstance.getStoriesForTask(task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.stories.getStoriesForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            stories_api_instance = asana.StoriesApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.id_prefix,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,offset,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,path,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get stories from a task
                api_response = stories_api_instance.get_stories_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling StoriesApi->get_stories_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.stories.get_stories_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->stories->getStoriesForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.stories.get_stories_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Stories
      summary: Create a story on a task
      description: |-
        Adds a story to a task. This endpoint currently only allows for comment
        stories to be created. The comment will be authored by the currently
        authenticated user, and timestamped when the server receives the request.

        Returns the full record for the new story added to the task.
      operationId: createStoryForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - assignee
            - assignee.name
            - created_at
            - created_by
            - created_by.name
            - custom_field
            - custom_field.date_value
            - custom_field.date_value.date
            - custom_field.date_value.date_time
            - custom_field.display_value
            - custom_field.enabled
            - custom_field.enum_options
            - custom_field.enum_options.color
            - custom_field.enum_options.enabled
            - custom_field.enum_options.name
            - custom_field.enum_value
            - custom_field.enum_value.color
            - custom_field.enum_value.enabled
            - custom_field.enum_value.name
            - custom_field.id_prefix
            - custom_field.is_formula_field
            - custom_field.multi_enum_values
            - custom_field.multi_enum_values.color
            - custom_field.multi_enum_values.enabled
            - custom_field.multi_enum_values.name
            - custom_field.name
            - custom_field.number_value
            - custom_field.representation_type
            - custom_field.resource_subtype
            - custom_field.text_value
            - custom_field.type
            - dependency
            - dependency.created_by
            - dependency.name
            - dependency.resource_subtype
            - duplicate_of
            - duplicate_of.created_by
            - duplicate_of.name
            - duplicate_of.resource_subtype
            - duplicated_from
            - duplicated_from.created_by
            - duplicated_from.name
            - duplicated_from.resource_subtype
            - follower
            - follower.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_text
            - is_editable
            - is_edited
            - is_pinned
            - liked
            - likes
            - likes.user
            - likes.user.name
            - new_approval_status
            - new_date_value
            - new_dates
            - new_dates.due_at
            - new_dates.due_on
            - new_dates.start_on
            - new_enum_value
            - new_enum_value.color
            - new_enum_value.enabled
            - new_enum_value.name
            - new_multi_enum_values
            - new_multi_enum_values.color
            - new_multi_enum_values.enabled
            - new_multi_enum_values.name
            - new_name
            - new_number_value
            - new_people_value
            - new_people_value.name
            - new_resource_subtype
            - new_section
            - new_section.name
            - new_text_value
            - num_hearts
            - num_likes
            - old_approval_status
            - old_date_value
            - old_dates
            - old_dates.due_at
            - old_dates.due_on
            - old_dates.start_on
            - old_enum_value
            - old_enum_value.color
            - old_enum_value.enabled
            - old_enum_value.name
            - old_multi_enum_values
            - old_multi_enum_values.color
            - old_multi_enum_values.enabled
            - old_multi_enum_values.name
            - old_name
            - old_number_value
            - old_people_value
            - old_people_value.name
            - old_resource_subtype
            - old_section
            - old_section.name
            - old_text_value
            - previews
            - previews.fallback
            - previews.footer
            - previews.header
            - previews.header_link
            - previews.html_text
            - previews.text
            - previews.title
            - previews.title_link
            - project
            - project.name
            - resource_subtype
            - source
            - sticker_name
            - story
            - story.created_at
            - story.created_by
            - story.created_by.name
            - story.resource_subtype
            - story.text
            - tag
            - tag.name
            - target
            - target.created_by
            - target.name
            - target.resource_subtype
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
            - text
            - type
        example:
        - assignee
        - assignee.name
        - created_at
        - created_by
        - created_by.name
        - custom_field
        - custom_field.date_value
        - custom_field.date_value.date
        - custom_field.date_value.date_time
        - custom_field.display_value
        - custom_field.enabled
        - custom_field.enum_options
        - custom_field.enum_options.color
        - custom_field.enum_options.enabled
        - custom_field.enum_options.name
        - custom_field.enum_value
        - custom_field.enum_value.color
        - custom_field.enum_value.enabled
        - custom_field.enum_value.name
        - custom_field.id_prefix
        - custom_field.is_formula_field
        - custom_field.multi_enum_values
        - custom_field.multi_enum_values.color
        - custom_field.multi_enum_values.enabled
        - custom_field.multi_enum_values.name
        - custom_field.name
        - custom_field.number_value
        - custom_field.representation_type
        - custom_field.resource_subtype
        - custom_field.text_value
        - custom_field.type
        - dependency
        - dependency.created_by
        - dependency.name
        - dependency.resource_subtype
        - duplicate_of
        - duplicate_of.created_by
        - duplicate_of.name
        - duplicate_of.resource_subtype
        - duplicated_from
        - duplicated_from.created_by
        - duplicated_from.name
        - duplicated_from.resource_subtype
        - follower
        - follower.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_text
        - is_editable
        - is_edited
        - is_pinned
        - liked
        - likes
        - likes.user
        - likes.user.name
        - new_approval_status
        - new_date_value
        - new_dates
        - new_dates.due_at
        - new_dates.due_on
        - new_dates.start_on
        - new_enum_value
        - new_enum_value.color
        - new_enum_value.enabled
        - new_enum_value.name
        - new_multi_enum_values
        - new_multi_enum_values.color
        - new_multi_enum_values.enabled
        - new_multi_enum_values.name
        - new_name
        - new_number_value
        - new_people_value
        - new_people_value.name
        - new_resource_subtype
        - new_section
        - new_section.name
        - new_text_value
        - num_hearts
        - num_likes
        - old_approval_status
        - old_date_value
        - old_dates
        - old_dates.due_at
        - old_dates.due_on
        - old_dates.start_on
        - old_enum_value
        - old_enum_value.color
        - old_enum_value.enabled
        - old_enum_value.name
        - old_multi_enum_values
        - old_multi_enum_values.color
        - old_multi_enum_values.enabled
        - old_multi_enum_values.name
        - old_name
        - old_number_value
        - old_people_value
        - old_people_value.name
        - old_resource_subtype
        - old_section
        - old_section.name
        - old_text_value
        - previews
        - previews.fallback
        - previews.footer
        - previews.header
        - previews.header_link
        - previews.html_text
        - previews.text
        - previews.title
        - previews.title_link
        - project
        - project.name
        - resource_subtype
        - source
        - sticker_name
        - story
        - story.created_at
        - story.created_by
        - story.created_by.name
        - story.resource_subtype
        - story.text
        - tag
        - tag.name
        - target
        - target.created_by
        - target.name
        - target.resource_subtype
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        - text
        - type
        x-ballerina-name: optFields
      requestBody:
        description: The story to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidStoriesBody'
        required: true
      responses:
        "201":
          description: Successfully created a new story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20116'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Story result = client.stories.createStoryForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet storiesApiInstance = new Asana.StoriesApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The story to create.\nlet task_gid = \"321654\"; // String | The task\
            \ to operate on.\nlet opts = { \n    'opt_fields': \"assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type\"\
            \n};\nstoriesApiInstance.createStoryForTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.stories.createStoryForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            stories_api_instance = asana.StoriesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The story to create.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "assignee,assignee.name,created_at,created_by,created_by.name,custom_field,custom_field.date_value,custom_field.date_value.date,custom_field.date_value.date_time,custom_field.display_value,custom_field.enabled,custom_field.enum_options,custom_field.enum_options.color,custom_field.enum_options.enabled,custom_field.enum_options.name,custom_field.enum_value,custom_field.enum_value.color,custom_field.enum_value.enabled,custom_field.enum_value.name,custom_field.id_prefix,custom_field.is_formula_field,custom_field.multi_enum_values,custom_field.multi_enum_values.color,custom_field.multi_enum_values.enabled,custom_field.multi_enum_values.name,custom_field.name,custom_field.number_value,custom_field.representation_type,custom_field.resource_subtype,custom_field.text_value,custom_field.type,dependency,dependency.created_by,dependency.name,dependency.resource_subtype,duplicate_of,duplicate_of.created_by,duplicate_of.name,duplicate_of.resource_subtype,duplicated_from,duplicated_from.created_by,duplicated_from.name,duplicated_from.resource_subtype,follower,follower.name,hearted,hearts,hearts.user,hearts.user.name,html_text,is_editable,is_edited,is_pinned,liked,likes,likes.user,likes.user.name,new_approval_status,new_date_value,new_dates,new_dates.due_at,new_dates.due_on,new_dates.start_on,new_enum_value,new_enum_value.color,new_enum_value.enabled,new_enum_value.name,new_multi_enum_values,new_multi_enum_values.color,new_multi_enum_values.enabled,new_multi_enum_values.name,new_name,new_number_value,new_people_value,new_people_value.name,new_resource_subtype,new_section,new_section.name,new_text_value,num_hearts,num_likes,old_approval_status,old_date_value,old_dates,old_dates.due_at,old_dates.due_on,old_dates.start_on,old_enum_value,old_enum_value.color,old_enum_value.enabled,old_enum_value.name,old_multi_enum_values,old_multi_enum_values.color,old_multi_enum_values.enabled,old_multi_enum_values.name,old_name,old_number_value,old_people_value,old_people_value.name,old_resource_subtype,old_section,old_section.name,old_text_value,previews,previews.fallback,previews.footer,previews.header,previews.header_link,previews.html_text,previews.text,previews.title,previews.title_link,project,project.name,resource_subtype,source,sticker_name,story,story.created_at,story.created_by,story.created_by.name,story.resource_subtype,story.text,tag,tag.name,target,target.created_by,target.name,target.resource_subtype,task,task.created_by,task.name,task.resource_subtype,text,type", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a story on a task
                api_response = stories_api_instance.create_story_for_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling StoriesApi->create_story_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.stories.create_story_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->stories->createStoryForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.stories.create_story_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tags:
    get:
      tags:
      - Tags
      summary: Get multiple tags
      description: Returns the compact tag records for some filtered set of tags.
        Use one or more of the parameters provided to filter the tags returned.
      operationId: getTags
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: workspace
        in: query
        description: The workspace to filter tags on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "1331"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - offset
            - path
            - permalink_url
            - uri
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - offset
        - path
        - permalink_url
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified set of tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20089'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Tag> result = client.tags.getTags(workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet opts = { \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'workspace': \"1331\", \n    'opt_fields': \"color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name\"\
            \n};\ntagsApiInstance.getTags(opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.getTags({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'workspace': "1331", # str | The workspace to filter tags on.
                'opt_fields': "color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple tags
                api_response = tags_api_instance.get_tags(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TagsApi->get_tags: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.get_tags({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->getTags(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.get_tags(param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Tags
      summary: Create a tag
      description: |-
        Creates a new tag in a workspace or organization.

        Every tag is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the workspace parameter regardless of whether or not it is an
        organization.

        Returns the full record of the newly created tag.
      operationId: createTag
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - permalink_url
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - permalink_url
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsBody'
        required: true
      responses:
        "201":
          description: Successfully created the newly specified tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20117'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Tag result = client.tags.createTag()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet body = {\"data\": {\"\
            <PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The tag to create.\nlet opts = { \n    'opt_fields': \"color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name\"\
            \n};\ntagsApiInstance.createTag(body, opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.createTag({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The tag to create.
            opts = {
                'opt_fields': "color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a tag
                api_response = tags_api_instance.create_tag(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TagsApi->create_tag: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.create_tag({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->createTag(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.create_tag(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /tags/{tag_gid}:
    get:
      tags:
      - Tags
      summary: Get a tag
      description: Returns the complete tag record for a single tag.
      operationId: getTag
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - permalink_url
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - permalink_url
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20090'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Tag result = client.tags.getTag(tagGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet tag_gid = \"11235\"\
            ; // String | Globally unique identifier for the tag.\nlet opts = { \n\
            \    'opt_fields': \"color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name\"\
            \n};\ntagsApiInstance.getTag(tag_gid, opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.getTag(tagGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            tag_gid = "11235" # str | Globally unique identifier for the tag.
            opts = {
                'opt_fields': "color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a tag
                api_response = tags_api_instance.get_tag(tag_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TagsApi->get_tag: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.get_tag(tag_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->getTag($tag_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.get_tag(tag_gid: 'tag_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Tags
      summary: Update a tag
      description: |-
        Updates the properties of a tag. Only the fields provided in the `data`
        block will be updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the tag.

        Returns the complete updated tag record.
      operationId: updateTag
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - permalink_url
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - permalink_url
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully updated the specified tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20091'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Tag result = client.tags.updateTag(tagGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet tag_gid = \"11235\"\
            ; // String | Globally unique identifier for the tag.\nlet opts = { \n\
            \    'opt_fields': \"color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name\"\
            \n};\ntagsApiInstance.updateTag(tag_gid, opts).then((result) => {\n  \
            \  console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.updateTag(tagGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            tag_gid = "11235" # str | Globally unique identifier for the tag.
            opts = {
                'opt_fields': "color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a tag
                api_response = tags_api_instance.update_tag(tag_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TagsApi->update_tag: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.update_tag(tag_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->updateTag($tag_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.update_tag(tag_gid: 'tag_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Tags
      summary: Delete a tag
      description: |-
        A specific, existing tag can be deleted by making a DELETE request on
        the URL for that tag.

        Returns an empty data record.
      operationId: deleteTag
      responses:
        "200":
          description: Successfully deleted the specified tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20092'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tags.deleteTag(tagGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tagsApiInstance = new Asana.TagsApi();
            let tag_gid = "11235"; // String | Globally unique identifier for the tag.

            tagsApiInstance.deleteTag(tag_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.deleteTag(tagGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            tag_gid = "11235" # str | Globally unique identifier for the tag.


            try:
                # Delete a tag
                api_response = tags_api_instance.delete_tag(tag_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TagsApi->delete_tag: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.delete_tag(tag_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->deleteTag($tag_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.delete_tag(tag_gid: 'tag_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/tag_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/tags:
    get:
      tags:
      - Tags
      summary: Get a task's tags
      description: Get a compact representation of all of the tags the task has.
      operationId: getTagsForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - offset
            - path
            - permalink_url
            - uri
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - offset
        - path
        - permalink_url
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the tags for the given task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20093'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Tag> result = client.tags.getTagsForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name\"\
            \n};\ntagsApiInstance.getTagsForTask(task_gid, opts).then((result) =>\
            \ {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.getTagsForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a task's tags
                api_response = tags_api_instance.get_tags_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TagsApi->get_tags_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.get_tags_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->getTagsForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.get_tags_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /workspaces/{workspace_gid}/tags:
    get:
      tags:
      - Tags
      summary: Get tags in a workspace
      description: Returns the compact tag records for some filtered set of tags.
        Use one or more of the parameters provided to filter the tags returned.
      operationId: getTagsForWorkspace
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - offset
            - path
            - permalink_url
            - uri
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - offset
        - path
        - permalink_url
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified set of tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20094'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Tag> result = client.tags.getTagsForWorkspace(workspaceGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet workspace_gid = \"12345\"\
            ; // String | Globally unique identifier for the workspace or organization.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name\"\
            \n};\ntagsApiInstance.getTagsForWorkspace(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.getTagsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "color,created_at,followers,followers.name,name,notes,offset,path,permalink_url,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get tags in a workspace
                api_response = tags_api_instance.get_tags_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TagsApi->get_tags_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.get_tags_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->getTagsForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.get_tags_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Tags
      summary: Create a tag in a workspace
      description: |-
        Creates a new tag in a workspace or organization.

        Every tag is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the workspace parameter regardless of whether or not it is an
        organization.

        Returns the full record of the newly created tag.
      operationId: createTagForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - color
            - created_at
            - followers
            - followers.name
            - name
            - notes
            - permalink_url
            - workspace
            - workspace.name
        example:
        - color
        - created_at
        - followers
        - followers.name
        - name
        - notes
        - permalink_url
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGidTagsBody'
        required: true
      responses:
        "201":
          description: Successfully created the newly specified tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20118'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Tag result = client.tags.createTagForWorkspace(workspaceGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tagsApiInstance = new Asana.TagsApi();\nlet body = {\"data\": {\"\
            <PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The tag to create.\nlet workspace_gid = \"12345\"; // String | Globally\
            \ unique identifier for the workspace or organization.\nlet opts = { \n\
            \    'opt_fields': \"color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name\"\
            \n};\ntagsApiInstance.createTagForWorkspace(body, workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tags.createTagForWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tags_api_instance = asana.TagsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The tag to create.
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'opt_fields': "color,created_at,followers,followers.name,name,notes,permalink_url,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a tag in a workspace
                api_response = tags_api_instance.create_tag_for_workspace(body, workspace_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TagsApi->create_tag_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tags.create_tag_for_workspace(workspace_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tags->createTagForWorkspace($workspace_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tags.create_tag_for_workspace(workspace_gid: 'workspace_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
  /task_templates:
    get:
      tags:
      - Task templates
      summary: Get multiple task templates
      description: Returns the compact task template records for some filtered set
        of task templates. You must specify a `project`
      operationId: getTaskTemplates
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: project
        in: query
        description: The project to filter task templates on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "321654"
        x-env-variable: project
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - created_by
            - name
            - project
            - template
        example:
        - created_at
        - created_by
        - name
        - project
        - template
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved requested task templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20095'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet taskTemplatesApiInstance = new Asana.TaskTemplatesApi();\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'project': \"321654\", \n    'opt_fields': \"created_at,created_by,name,project,template\"\
            \n};\ntaskTemplatesApiInstance.getTaskTemplates(opts).then((result) =>\
            \ {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            task_templates_api_instance = asana.TaskTemplatesApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'project': "321654", # str | The project to filter task templates on.
                'opt_fields': "created_at,created_by,name,project,template", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple task templates
                api_response = task_templates_api_instance.get_task_templates(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TaskTemplatesApi->get_task_templates: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/pretty'
  /task_templates/{task_template_gid}:
    get:
      tags:
      - Task templates
      summary: Get a task template
      description: Returns the complete task template record for a single task template.
      operationId: getTaskTemplate
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - created_by
            - name
            - project
            - template
        example:
        - created_at
        - created_by
        - name
        - project
        - template
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved requested task template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20096'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet taskTemplatesApiInstance = new Asana.TaskTemplatesApi();\nlet task_template_gid\
            \ = \"1331\"; // String | Globally unique identifier for the task template.\n\
            let opts = { \n    'opt_fields': \"created_at,created_by,name,project,template\"\
            \n};\ntaskTemplatesApiInstance.getTaskTemplate(task_template_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            task_templates_api_instance = asana.TaskTemplatesApi(api_client)
            task_template_gid = "1331" # str | Globally unique identifier for the task template.
            opts = {
                'opt_fields': "created_at,created_by,name,project,template", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a task template
                api_response = task_templates_api_instance.get_task_template(task_template_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TaskTemplatesApi->get_task_template: %s\n" % e)
          name: python-sdk-v5
    delete:
      tags:
      - Task templates
      summary: Delete a task template
      description: "A specific, existing task template can be deleted by making a\
        \ DELETE request on the URL for that task template. Returns an empty data\
        \ record."
      operationId: deleteTaskTemplate
      responses:
        "200":
          description: Successfully deleted the specified task template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20097'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            task_templates_api_instance = asana.TaskTemplatesApi(api_client)
            task_template_gid = "1331" # str | Globally unique identifier for the task template.


            try:
                # Delete a task template
                api_response = task_templates_api_instance.delete_task_template(task_template_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TaskTemplatesApi->delete_task_template: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/task_template_path_gid'
    - $ref: '#/components/parameters/pretty'
  /task_templates/{task_template_gid}/instantiateTask:
    post:
      tags:
      - Task templates
      summary: Instantiate a task from a task template
      description: Creates and returns a job that will asynchronously handle the task
        instantiation.
      operationId: instantiateTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      requestBody:
        description: Describes the inputs used for instantiating a task - the task's
          name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTemplateGidInstantiateTaskBody'
      responses:
        "201":
          description: Successfully created the job to handle task instantiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20119'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet taskTemplatesApiInstance = new Asana.TaskTemplatesApi();\nlet task_template_gid\
            \ = \"1331\"; // String | Globally unique identifier for the task template.\n\
            let opts = { \n    'body': {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"\
            <PARAM_2>\": \"<VALUE_2>\",}}, \n    'opt_fields': \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\ntaskTemplatesApiInstance.instantiateTask(task_template_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            task_templates_api_instance = asana.TaskTemplatesApi(api_client)
            task_template_gid = "1331" # str | Globally unique identifier for the task template.
            opts = {
                'body': {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}, # dict | Describes the inputs used for instantiating a task - the task's name.
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Instantiate a task from a task template
                api_response = task_templates_api_instance.instantiate_task(task_template_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TaskTemplatesApi->instantiate_task: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/task_template_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks:
    get:
      tags:
      - Tasks
      summary: Get multiple tasks
      description: |-
        Returns the compact task records for some filtered set of tasks. Use one or more of the parameters provided to filter the tasks returned. You must specify a `project` or `tag` if you do not specify `assignee` and `workspace`.

        For more complex task retrieval, use [workspaces/{workspace_gid}/tasks/search](/reference/searchtasksforworkspace).
      operationId: getTasks
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: assignee
        in: query
        description: |-
          The assignee to filter tasks on. If searching for unassigned tasks, assignee.any = null can be specified.
          *Note: If you specify `assignee`, you must also specify the `workspace` to filter on.*
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "14641"
        x-env-variable: assignee
      - name: project
        in: query
        description: The project to filter tasks on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "321654"
        x-env-variable: project
      - name: section
        in: query
        description: The section to filter tasks on
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "321654"
        x-env-variable: section
      - name: workspace
        in: query
        description: |-
          The workspace to filter tasks on.
          *Note: If you specify `workspace`, you must also specify the `assignee` to filter on.*
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "321654"
        x-env-variable: workspace
      - name: completed_since
        in: query
        description: Only return tasks that are either incomplete or that have been
          completed since this time
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          example: 2012-02-22T02:06:58.158Z
        x-ballerina-name: completedSince
      - name: modified_since
        in: query
        description: |-
          Only return tasks that have been modified since the given time.

          *Note: A task is considered “modified” if any of its properties
          change, or associations between it and other objects are modified
          (e.g.  a task being added to a project). A task is not considered
          modified just because another object it is associated with (e.g. a
          subtask) is modified. Actions that count as modifying the task
          include assigning, renaming, completing, and adding stories.*
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2012-02-22T02:06:58.158Z
        x-ballerina-name: modifiedSince
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved requested tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20098'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getTasks(modifiedSince, completedSince, workspace, section, project, assignee)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet opts = { \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'assignee': \"14641\", \n    'project': \"321654\", \n    'section':\
            \ \"321654\", \n    'workspace': \"321654\", \n    'completed_since':\
            \ \"2012-02-22T02:06:58.158Z\", \n    'modified_since': \"2012-02-22T02:06:58.158Z\"\
            , \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTasks(opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTasks({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'assignee': "14641", # str | The assignee to filter tasks on. If searching for unassigned tasks, assignee.any = null can be specified. *Note: If you specify `assignee`, you must also specify the `workspace` to filter on.*
                'project': "321654", # str | The project to filter tasks on.
                'section': "321654", # str | The section to filter tasks on.
                'workspace': "321654", # str | The workspace to filter tasks on. *Note: If you specify `workspace`, you must also specify the `assignee` to filter on.*
                'completed_since': '2012-02-22T02:06:58.158Z', # datetime | Only return tasks that are either incomplete or that have been completed since this time.
                'modified_since': '2012-02-22T02:06:58.158Z', # datetime | Only return tasks that have been modified since the given time.  *Note: A task is considered “modified” if any of its properties change, or associations between it and other objects are modified (e.g.  a task being added to a project). A task is not considered modified just because another object it is associated with (e.g. a subtask) is modified. Actions that count as modifying the task include assigning, renaming, completing, and adding stories.*
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple tasks
                api_response = tasks_api_instance.get_tasks(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->get_tasks: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_tasks({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTasks(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_tasks(param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Tasks
      summary: Create a task
      description: |-
        Creating a new task is as easy as POSTing to the `/tasks` endpoint with a
        data block containing the fields you’d like to set on the task. Any
        unspecified fields will take on default values.

        Every task is required to be created in a specific workspace, and this
        workspace cannot be changed once set. The workspace need not be set
        explicitly if you specify `projects` or a `parent` task instead.
      operationId: createTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The task to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TasksBody'
        required: true
      responses:
        "201":
          description: Successfully created a new task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20120'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.createTask()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The task to create.\nlet opts = { \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.createTask(body, opts).then((result) => {\n   \
            \ console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.createTask({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The task to create.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a task
                api_response = tasks_api_instance.create_task(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->create_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.create_task({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->createTask(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.create_task(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}:
    get:
      tags:
      - Tasks
      summary: Get a task
      description: Returns the complete task record for a single task.
      operationId: getTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20099'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.getTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTask(task_gid, opts).then((result) => {\n  \
            \  console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a task
                api_response = tasks_api_instance.get_task(task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->get_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Tasks
      summary: Update a task
      description: |-
        A specific, existing task can be updated by making a PUT request on the
        URL for that task. Only the fields provided in the `data` block will be
        updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated task record.
      operationId: updateTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The task to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskstaskGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the specified task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200100'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.updateTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The task to update.\nlet task_gid = \"321654\"; // String | The task\
            \ to operate on.\nlet opts = { \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.updateTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.updateTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The task to update.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a task
                api_response = tasks_api_instance.update_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->update_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.update_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->updateTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.update_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Tasks
      summary: Delete a task
      description: |-
        A specific, existing task can be deleted by making a DELETE request on
        the URL for that task. Deleted tasks go into the “trash” of the user
        making the delete request. Tasks can be recovered from the trash within a
        period of 30 days; afterward they are completely removed from the system.

        Returns an empty data record.
      operationId: deleteTask
      responses:
        "200":
          description: Successfully deleted the specified task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200101'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.deleteTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.deleteTask(task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.deleteTask(taskGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            task_gid = "321654" # str | The task to operate on.


            try:
                # Delete a task
                api_response = tasks_api_instance.delete_task(task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->delete_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.delete_task(task_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->deleteTask($task_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.delete_task(task_gid: 'task_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/duplicate:
    post:
      tags:
      - Tasks
      summary: Duplicate a task
      description: Creates and returns a job that will asynchronously handle the duplication.
      operationId: duplicateTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - new_project
            - new_project.name
            - new_project_template
            - new_project_template.name
            - new_task
            - new_task.created_by
            - new_task.name
            - new_task.resource_subtype
            - new_task_template
            - new_task_template.name
            - resource_subtype
            - status
        example:
        - new_project
        - new_project.name
        - new_project_template
        - new_project_template.name
        - new_task
        - new_task.created_by
        - new_task.name
        - new_task.resource_subtype
        - new_task_template
        - new_task_template.name
        - resource_subtype
        - status
        x-ballerina-name: optFields
      requestBody:
        description: Describes the duplicate's name and the fields that will be duplicated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidDuplicateBody'
        required: true
      responses:
        "201":
          description: Successfully created the job to handle duplication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20121'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Job result = client.tasks.duplicateTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | Describes the duplicate's name and the fields that will be duplicated.\n\
            let task_gid = \"321654\"; // String | The task to operate on.\nlet opts\
            \ = { \n    'opt_fields': \"new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status\"\
            \n};\ntasksApiInstance.duplicateTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.duplicateTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Describes the duplicate's name and the fields that will be duplicated.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "new_project,new_project.name,new_project_template,new_project_template.name,new_task,new_task.created_by,new_task.name,new_task.resource_subtype,resource_subtype,status", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Duplicate a task
                api_response = tasks_api_instance.duplicate_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->duplicate_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.duplicate_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->duplicateTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.duplicate_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /projects/{project_gid}/tasks:
    get:
      tags:
      - Tasks
      summary: Get tasks from a project
      description: "Returns the compact task records for all tasks within the given\
        \ project, ordered by their priority within the project. Tasks can exist in\
        \ more than one project at a time."
      operationId: getTasksForProject
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested project's tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200102'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getTasksForProject(projectGid, completedSince)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet project_gid = \"1331\"\
            ; // String | Globally unique identifier for the project.\nlet opts =\
            \ { \n    'completed_since': \"2012-02-22T02:06:58.158Z\", \n    'limit':\
            \ 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n   \
            \ 'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTasksForProject(project_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTasksForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\ntasks_api_instance = asana.TasksApi(api_client)\n\
            project_gid = \"1331\" # str | Globally unique identifier for the project.\n\
            opts = {\n    'completed_since': \"2012-02-22T02:06:58.158Z\", # str |\
            \ Only return tasks that are either incomplete or that have been completed\
            \ since this time. Accepts a date-time string or the keyword *now*. \n\
            \    'limit': 50, # int | Results per page. The number of objects to return\
            \ per page. The value must be between 1 and 100.\n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , # str | Offset token. An offset to the next page returned by the API.\
            \ A pagination request will return an offset token, which can be used\
            \ as an input parameter to the next request. If an offset is not passed\
            \ in, the API will return the first page of results. 'Note: You can only\
            \ pass in an offset that was returned to you via a previously paginated\
            \ request.'\n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get tasks from a project\n    api_response\
            \ = tasks_api_instance.get_tasks_for_project(project_gid, opts)\n    for\
            \ data in api_response:\n        pprint(data)\nexcept ApiException as\
            \ e:\n    print(\"Exception when calling TasksApi->get_tasks_for_project:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_tasks_for_project(project_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTasksForProject($project_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_tasks_for_project(project_gid: 'project_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/completed_since'
    - $ref: '#/components/parameters/project_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /sections/{section_gid}/tasks:
    get:
      tags:
      - Tasks
      summary: Get tasks from a section
      description: "*Board view only*: Returns the compact section records for all\
        \ tasks within the given section."
      operationId: getTasksForSection
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the section's tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200103'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getTasksForSection(sectionGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet section_gid = \"321654\"\
            ; // String | The globally unique identifier for the section.\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'completed_since': \"2012-02-22T02:06:58.158Z\", \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTasksForSection(section_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTasksForSection(sectionGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\ntasks_api_instance = asana.TasksApi(api_client)\n\
            section_gid = \"321654\" # str | The globally unique identifier for the\
            \ section.\nopts = {\n    'limit': 50, # int | Results per page. The number\
            \ of objects to return per page. The value must be between 1 and 100.\n\
            \    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", # str | Offset\
            \ token. An offset to the next page returned by the API. A pagination\
            \ request will return an offset token, which can be used as an input parameter\
            \ to the next request. If an offset is not passed in, the API will return\
            \ the first page of results. 'Note: You can only pass in an offset that\
            \ was returned to you via a previously paginated request.'\n    'completed_since':\
            \ \"2012-02-22T02:06:58.158Z\", # str | Only return tasks that are either\
            \ incomplete or that have been completed since this time. Accepts a date-time\
            \ string or the keyword *now*. \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get tasks from a section\n    api_response\
            \ = tasks_api_instance.get_tasks_for_section(section_gid, opts)\n    for\
            \ data in api_response:\n        pprint(data)\nexcept ApiException as\
            \ e:\n    print(\"Exception when calling TasksApi->get_tasks_for_section:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_tasks_for_section(section_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTasksForSection($section_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_tasks_for_section(section_gid: 'section_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/section_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
    - $ref: '#/components/parameters/completed_since'
  /tags/{tag_gid}/tasks:
    get:
      tags:
      - Tasks
      summary: Get tasks from a tag
      description: Returns the compact task records for all tasks with the given tag.
        Tasks can have more than one tag at a time.
      operationId: getTasksForTag
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the tasks associated with the specified
            tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200104'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getTasksForTag(tagGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet tag_gid = \"11235\"\
            ; // String | Globally unique identifier for the tag.\nlet opts = { \n\
            \    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTasksForTag(tag_gid, opts).then((result) =>\
            \ {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTasksForTag(tagGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            tag_gid = "11235" # str | Globally unique identifier for the tag.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get tasks from a tag
                api_response = tasks_api_instance.get_tasks_for_tag(tag_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->get_tasks_for_tag: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_tasks_for_tag(tag_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTasksForTag($tag_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_tasks_for_tag(tag_gid: 'tag_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/tag_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /user_task_lists/{user_task_list_gid}/tasks:
    get:
      tags:
      - Tasks
      summary: Get tasks from a user task list
      description: |-
        Returns the compact list of tasks in a user’s My Tasks list.
        *Note: Access control is enforced for this endpoint as with all Asana API endpoints, meaning a user’s private tasks will be filtered out if the API-authenticated user does not have access to them.*
        *Note: Both complete and incomplete tasks are returned by default unless they are filtered out (for example, setting `completed_since=now` will return only incomplete tasks, which is the default view for “My Tasks” in Asana.)*
      operationId: getTasksForUserTaskList
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the user task list's tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200105'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getTasksForUserTaskList(userTaskListGid, completedSince)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet user_task_list_gid\
            \ = \"12345\"; // String | Globally unique identifier for the user task\
            \ list.\nlet opts = { \n    'completed_since': \"2012-02-22T02:06:58.158Z\"\
            , \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getTasksForUserTaskList(user_task_list_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getTasksForUserTaskList(userTaskListGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\ntasks_api_instance = asana.TasksApi(api_client)\n\
            user_task_list_gid = \"12345\" # str | Globally unique identifier for\
            \ the user task list.\nopts = {\n    'completed_since': \"2012-02-22T02:06:58.158Z\"\
            , # str | Only return tasks that are either incomplete or that have been\
            \ completed since this time. Accepts a date-time string or the keyword\
            \ *now*. \n    'limit': 50, # int | Results per page. The number of objects\
            \ to return per page. The value must be between 1 and 100.\n    'offset':\
            \ \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", # str | Offset token. An offset\
            \ to the next page returned by the API. A pagination request will return\
            \ an offset token, which can be used as an input parameter to the next\
            \ request. If an offset is not passed in, the API will return the first\
            \ page of results. 'Note: You can only pass in an offset that was returned\
            \ to you via a previously paginated request.'\n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get tasks from a user task list\n\
            \    api_response = tasks_api_instance.get_tasks_for_user_task_list(user_task_list_gid,\
            \ opts)\n    for data in api_response:\n        pprint(data)\nexcept ApiException\
            \ as e:\n    print(\"Exception when calling TasksApi->get_tasks_for_user_task_list:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_tasks_for_user_task_list(user_task_list_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getTasksForUserTaskList($user_task_list_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_tasks_for_user_task_list(user_task_list_gid: 'user_task_list_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/completed_since'
    - $ref: '#/components/parameters/user_task_list_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /tasks/{task_gid}/subtasks:
    get:
      tags:
      - Tasks
      summary: Get subtasks from a task
      description: Returns a compact representation of all of the subtasks of a task.
      operationId: getSubtasksForTask
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified task's subtasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200106'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getSubtasksForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getSubtasksForTask(task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getSubtasksForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get subtasks from a task
                api_response = tasks_api_instance.get_subtasks_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->get_subtasks_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_subtasks_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getSubtasksForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_subtasks_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Tasks
      summary: Create a subtask
      description: Creates a new subtask and adds it to the parent task. Returns the
        full record for the newly created subtask.
      operationId: createSubtaskForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The new subtask to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidSubtasksBody'
        required: true
      responses:
        "201":
          description: Successfully created the specified subtask
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20122'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.createSubtaskForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The new subtask to create.\nlet task_gid = \"321654\"; // String |\
            \ The task to operate on.\nlet opts = { \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.createSubtaskForTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.createSubtaskForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The new subtask to create.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a subtask
                api_response = tasks_api_instance.create_subtask_for_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->create_subtask_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.create_subtask_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->createSubtaskForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.create_subtask_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/setParent:
    post:
      tags:
      - Tasks
      summary: Set the parent of a task
      description: "parent, or no parent task at all. Returns an empty data block.\
        \ When using `insert_before` and `insert_after`, at most one of those two\
        \ options can be specified, and they must already be subtasks of the parent."
      operationId: setParentForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The new parent of the subtask
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidSetParentBody'
        required: true
      responses:
        "200":
          description: Successfully changed the parent of the specified subtask
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200107'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.setParentForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The new parent of the subtask.\nlet task_gid = \"321654\"; // String\
            \ | The task to operate on.\nlet opts = { \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.setParentForTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.setParentForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The new parent of the subtask.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Set the parent of a task
                api_response = tasks_api_instance.set_parent_for_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->set_parent_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.set_parent_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->setParentForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.set_parent_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/dependencies:
    get:
      tags:
      - Tasks
      summary: Get dependencies from a task
      description: Returns the compact representations of all of the dependencies
        of a task.
      operationId: getDependenciesForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified task's dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200108'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getDependenciesForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getDependenciesForTask(task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getDependenciesForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get dependencies from a task
                api_response = tasks_api_instance.get_dependencies_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->get_dependencies_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_dependencies_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getDependenciesForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_dependencies_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /tasks/{task_gid}/addDependencies:
    post:
      tags:
      - Tasks
      summary: Set dependencies for a task
      description: "Marks a set of tasks as dependencies of this task, if they are\
        \ not already dependencies. *A task can have at most 30 dependents and dependencies\
        \ combined*."
      operationId: addDependenciesForTask
      requestBody:
        description: The list of tasks to set as dependencies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidAddDependenciesBody'
        required: true
      responses:
        "200":
          description: Successfully set the specified dependencies on the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200109'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.addDependenciesForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The list of tasks to set as dependencies.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.addDependenciesForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.addDependenciesForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The list of tasks to set as dependencies.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Set dependencies for a task
                api_response = tasks_api_instance.add_dependencies_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->add_dependencies_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.add_dependencies_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->addDependenciesForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.add_dependencies_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/removeDependencies:
    post:
      tags:
      - Tasks
      summary: Unlink dependencies from a task
      description: Unlinks a set of dependencies from this task.
      operationId: removeDependenciesForTask
      requestBody:
        description: The list of tasks to unlink as dependencies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidRemoveDependenciesBody'
        required: true
      responses:
        "200":
          description: Successfully unlinked the dependencies from the specified task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200110'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.removeDependenciesForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The list of tasks to unlink as dependencies.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.removeDependenciesForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.removeDependenciesForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The list of tasks to unlink as dependencies.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Unlink dependencies from a task
                api_response = tasks_api_instance.remove_dependencies_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->remove_dependencies_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.remove_dependencies_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->removeDependenciesForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.remove_dependencies_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/dependents:
    get:
      tags:
      - Tasks
      summary: Get dependents from a task
      description: Returns the compact representations of all of the dependents of
        a task.
      operationId: getDependentsForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - offset
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - path
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - uri
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - offset
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - path
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - uri
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the specified dependents of the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200111'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.getDependentsForTask(taskGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'limit': 50,\
            \ \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\
            \n};\ntasksApiInstance.getDependentsForTask(task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.getDependentsForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get dependents from a task
                api_response = tasks_api_instance.get_dependents_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->get_dependents_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.get_dependents_for_task(task_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->getDependentsForTask($task_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.get_dependents_for_task(task_gid: 'task_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /tasks/{task_gid}/addDependents:
    post:
      tags:
      - Tasks
      summary: Set dependents for a task
      description: "Marks a set of tasks as dependents of this task, if they are not\
        \ already dependents. *A task can have at most 30 dependents and dependencies\
        \ combined*."
      operationId: addDependentsForTask
      requestBody:
        description: The list of tasks to add as dependents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidAddDependentsBody'
        required: true
      responses:
        "200":
          description: Successfully set the specified dependents on the given task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200112'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.addDependentsForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The list of tasks to add as dependents.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.addDependentsForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.addDependentsForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The list of tasks to add as dependents.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Set dependents for a task
                api_response = tasks_api_instance.add_dependents_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->add_dependents_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.add_dependents_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->addDependentsForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.add_dependents_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/removeDependents:
    post:
      tags:
      - Tasks
      summary: Unlink dependents from a task
      description: Unlinks a set of dependents from this task.
      operationId: removeDependentsForTask
      requestBody:
        description: The list of tasks to remove as dependents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidRemoveDependentsBody'
        required: true
      responses:
        "200":
          description: Successfully unlinked the specified tasks as dependents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200113'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "402":
          $ref: '#/components/responses/PaymentRequired'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.removeDependentsForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The list of tasks to remove as dependents.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.removeDependentsForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.removeDependentsForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The list of tasks to remove as dependents.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Unlink dependents from a task
                api_response = tasks_api_instance.remove_dependents_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->remove_dependents_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.remove_dependents_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->removeDependentsForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.remove_dependents_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/addProject:
    post:
      tags:
      - Tasks
      summary: Add a project to a task
      description: |-
        Adds the task to the specified project, in the optional location
        specified. If no location arguments are given, the task will be added to
        the end of the project.

        `addProject` can also be used to reorder a task within a project or
        section that already contains it.

        At most one of `insert_before`, `insert_after`, or `section` should be
        specified. Inserting into a section in an non-order-dependent way can be
        done by specifying section, otherwise, to insert within a section in a
        particular place, specify `insert_before` or `insert_after` and a task
        within the section to anchor the position of this task.

        Returns an empty data block.
      operationId: addProjectForTask
      requestBody:
        description: The project to add the task to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidAddProjectBody'
        required: true
      responses:
        "200":
          description: Successfully added the specified project to the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200114'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.addProjectForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The project to add the task to.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.addProjectForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.addProjectForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project to add the task to.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Add a project to a task
                api_response = tasks_api_instance.add_project_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->add_project_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.add_project_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->addProjectForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.add_project_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/removeProject:
    post:
      tags:
      - Tasks
      summary: Remove a project from a task
      description: |-
        Removes the task from the specified project. The task will still exist in
        the system, but it will not be in the project anymore.

        Returns an empty data block.
      operationId: removeProjectForTask
      requestBody:
        description: The project to remove the task from
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidRemoveProjectBody'
        required: true
      responses:
        "200":
          description: Successfully removed the specified project from the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200115'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.removeProjectForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The project to remove the task from.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.removeProjectForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.removeProjectForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project to remove the task from.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Remove a project from a task
                api_response = tasks_api_instance.remove_project_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->remove_project_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.remove_project_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->removeProjectForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.remove_project_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/addTag:
    post:
      tags:
      - Tasks
      summary: Add a tag to a task
      description: Adds a tag to a task. Returns an empty data block.
      operationId: addTagForTask
      requestBody:
        description: The tag to add to the task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidAddTagBody'
        required: true
      responses:
        "200":
          description: Successfully added the specified tag to the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200116'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.addTagForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The tag to add to the task.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.addTagForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.addTagForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The tag to add to the task.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Add a tag to a task
                api_response = tasks_api_instance.add_tag_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->add_tag_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.add_tag_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->addTagForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.add_tag_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/removeTag:
    post:
      tags:
      - Tasks
      summary: Remove a tag from a task
      description: Removes a tag from a task. Returns an empty data block.
      operationId: removeTagForTask
      requestBody:
        description: The tag to remove from the task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidRemoveTagBody'
        required: true
      responses:
        "200":
          description: Successfully removed the specified tag from the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200117'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.tasks.removeTagForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let tasksApiInstance = new Asana.TasksApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The tag to remove from the task.
            let task_gid = "321654"; // String | The task to operate on.

            tasksApiInstance.removeTagForTask(body, task_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.removeTagForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The tag to remove from the task.
            task_gid = "321654" # str | The task to operate on.


            try:
                # Remove a tag from a task
                api_response = tasks_api_instance.remove_tag_for_task(body, task_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->remove_tag_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.remove_tag_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->removeTagForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.remove_tag_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/addFollowers:
    post:
      tags:
      - Tasks
      summary: Add followers to a task
      description: |-
        Adds followers to a task. Returns an empty data block.
        Each task can be associated with zero or more followers in the system.
        Requests to add/remove followers, if successful, will return the complete updated task record, described above.
      operationId: addFollowersForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The followers to add to the task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidAddFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully added the specified followers to the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200118'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.addFollowersForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The followers to add to the task.\nlet task_gid = \"321654\"; // String\
            \ | The task to operate on.\nlet opts = { \n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.addFollowersForTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.addFollowersForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The followers to add to the task.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add followers to a task
                api_response = tasks_api_instance.add_followers_for_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->add_followers_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.add_followers_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->addFollowersForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.add_followers_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /tasks/{task_gid}/removeFollowers:
    post:
      tags:
      - Tasks
      summary: Remove followers from a task
      description: "Removes each of the specified followers from the task if they\
        \ are following. Returns the complete, updated record for the affected task."
      operationId: removeFollowerForTask
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      requestBody:
        description: The followers to remove from the task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidRemoveFollowersBody'
        required: true
      responses:
        "200":
          description: Successfully removed the specified followers from the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200119'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Task result = client.tasks.removeFollowerForTask(taskGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The followers to remove from the task.\nlet task_gid = \"321654\"\
            ; // String | The task to operate on.\nlet opts = { \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\ntasksApiInstance.removeFollowerForTask(body, task_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.removeFollowerForTask(taskGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The followers to remove from the task.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Remove followers from a task
                api_response = tasks_api_instance.remove_follower_for_task(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TasksApi->remove_follower_for_task: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.remove_follower_for_task(task_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->removeFollowerForTask($task_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.remove_follower_for_task(task_gid: 'task_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/tasks/custom_id/{custom_id}:
    get:
      tags:
      - Tasks
      summary: Get a task for a given custom ID
      description: Returns a task given a custom ID shortcode.
      operationId: getTaskForCustomID
      responses:
        "200":
          description: Successfully retrieved task for given custom ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200120'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/custom_id'
  /workspaces/{workspace_gid}/tasks/search:
    get:
      tags:
      - Tasks
      summary: Search tasks in a workspace
      description: |-
        To mirror the functionality of the Asana web app's advanced search feature, the Asana API has a task search endpoint that allows you to build complex filters to find and retrieve the exact data you need.
        #### Premium access
        Like the Asana web product's advance search feature, this search endpoint will only be available to premium Asana users. A user is premium if any of the following is true:

        - The workspace in which the search is being performed is a premium workspace - The user is a member of a premium team inside the workspace

        Even if a user is only a member of a premium team inside a non-premium workspace, search will allow them to find data anywhere in the workspace, not just inside the premium team. Making a search request using credentials of a non-premium user will result in a `402 Payment Required` error.
        #### Pagination
        Search results are not stable; repeating the same query multiple times may return the data in a different order, even if the data do not change. Because of this, the traditional [pagination](https://developers.asana.com/docs/#pagination) available elsewhere in the Asana API is not available here. However, you can paginate manually by sorting the search results by their creation time and then modifying each subsequent query to exclude data you have already seen. Page sizes are limited to a maximum of 100 items, and can be specified by the `limit` query parameter.
        #### Eventual consistency
        Changes in Asana (regardless of whether they’re made though the web product or the API) are forwarded to our search infrastructure to be indexed. This process can take between 10 and 60 seconds to complete under normal operation, and longer during some production incidents. Making a change to a task that would alter its presence in a particular search query will not be reflected immediately. This is also true of the advanced search feature in the web product.
        #### Rate limits
        You may receive a `429 Too Many Requests` response if you hit any of our [rate limits](https://developers.asana.com/docs/#rate-limits).
        #### Custom field parameters
        | Parameter name | Custom field type | Accepted type |
        |---|---|---|
        | custom_fields.{gid}.is_set | All | Boolean |
        | custom_fields.{gid}.value | Text | String |
        | custom_fields.{gid}.value | Number | Number |
        | custom_fields.{gid}.value | Enum | Enum option ID |
        | custom_fields.{gid}.starts_with | Text only | String |
        | custom_fields.{gid}.ends_with | Text only | String |
        | custom_fields.{gid}.contains | Text only | String |
        | custom_fields.{gid}.less_than | Number only | Number |
        | custom_fields.{gid}.greater_than | Number only | Number |


        For example, if the gid of the custom field is 12345, these query parameter to find tasks where it is set would be `custom_fields.12345.is_set=true`. To match an exact value for an enum custom field, use the gid of the desired enum option and not the name of the enum option: `custom_fields.12345.value=67890`.

        **Not Supported**: searching for multiple exact matches of a custom field, searching for multi-enum custom field

        *Note: If you specify `projects.any` and `sections.any`, you will receive tasks for the project **and** tasks for the section. If you're looking for only tasks in a section, omit the `projects.any` from the request.*
      operationId: searchTasksForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - actual_time_minutes
            - approval_status
            - assignee
            - assignee.name
            - assignee_section
            - assignee_section.name
            - assignee_status
            - completed
            - completed_at
            - completed_by
            - completed_by.name
            - created_at
            - created_by
            - custom_fields
            - custom_fields.asana_created_field
            - custom_fields.created_by
            - custom_fields.created_by.name
            - custom_fields.currency_code
            - custom_fields.custom_label
            - custom_fields.custom_label_position
            - custom_fields.date_value
            - custom_fields.date_value.date
            - custom_fields.date_value.date_time
            - custom_fields.description
            - custom_fields.display_value
            - custom_fields.enabled
            - custom_fields.enum_options
            - custom_fields.enum_options.color
            - custom_fields.enum_options.enabled
            - custom_fields.enum_options.name
            - custom_fields.enum_value
            - custom_fields.enum_value.color
            - custom_fields.enum_value.enabled
            - custom_fields.enum_value.name
            - custom_fields.format
            - custom_fields.has_notifications_enabled
            - custom_fields.id_prefix
            - custom_fields.is_formula_field
            - custom_fields.is_global_to_workspace
            - custom_fields.is_value_read_only
            - custom_fields.multi_enum_values
            - custom_fields.multi_enum_values.color
            - custom_fields.multi_enum_values.enabled
            - custom_fields.multi_enum_values.name
            - custom_fields.name
            - custom_fields.number_value
            - custom_fields.people_value
            - custom_fields.people_value.name
            - custom_fields.precision
            - custom_fields.representation_type
            - custom_fields.resource_subtype
            - custom_fields.text_value
            - custom_fields.type
            - dependencies
            - dependents
            - due_at
            - due_on
            - external
            - external.data
            - followers
            - followers.name
            - hearted
            - hearts
            - hearts.user
            - hearts.user.name
            - html_notes
            - is_rendered_as_separator
            - liked
            - likes
            - likes.user
            - likes.user.name
            - memberships
            - memberships.project
            - memberships.project.name
            - memberships.section
            - memberships.section.name
            - modified_at
            - name
            - notes
            - num_hearts
            - num_likes
            - num_subtasks
            - parent
            - parent.created_by
            - parent.name
            - parent.resource_subtype
            - permalink_url
            - projects
            - projects.name
            - resource_subtype
            - start_at
            - start_on
            - tags
            - tags.name
            - workspace
            - workspace.name
        example:
        - actual_time_minutes
        - approval_status
        - assignee
        - assignee.name
        - assignee_section
        - assignee_section.name
        - assignee_status
        - completed
        - completed_at
        - completed_by
        - completed_by.name
        - created_at
        - created_by
        - custom_fields
        - custom_fields.asana_created_field
        - custom_fields.created_by
        - custom_fields.created_by.name
        - custom_fields.currency_code
        - custom_fields.custom_label
        - custom_fields.custom_label_position
        - custom_fields.date_value
        - custom_fields.date_value.date
        - custom_fields.date_value.date_time
        - custom_fields.description
        - custom_fields.display_value
        - custom_fields.enabled
        - custom_fields.enum_options
        - custom_fields.enum_options.color
        - custom_fields.enum_options.enabled
        - custom_fields.enum_options.name
        - custom_fields.enum_value
        - custom_fields.enum_value.color
        - custom_fields.enum_value.enabled
        - custom_fields.enum_value.name
        - custom_fields.format
        - custom_fields.has_notifications_enabled
        - custom_fields.id_prefix
        - custom_fields.is_formula_field
        - custom_fields.is_global_to_workspace
        - custom_fields.is_value_read_only
        - custom_fields.multi_enum_values
        - custom_fields.multi_enum_values.color
        - custom_fields.multi_enum_values.enabled
        - custom_fields.multi_enum_values.name
        - custom_fields.name
        - custom_fields.number_value
        - custom_fields.people_value
        - custom_fields.people_value.name
        - custom_fields.precision
        - custom_fields.representation_type
        - custom_fields.resource_subtype
        - custom_fields.text_value
        - custom_fields.type
        - dependencies
        - dependents
        - due_at
        - due_on
        - external
        - external.data
        - followers
        - followers.name
        - hearted
        - hearts
        - hearts.user
        - hearts.user.name
        - html_notes
        - is_rendered_as_separator
        - liked
        - likes
        - likes.user
        - likes.user.name
        - memberships
        - memberships.project
        - memberships.project.name
        - memberships.section
        - memberships.section.name
        - modified_at
        - name
        - notes
        - num_hearts
        - num_likes
        - num_subtasks
        - parent
        - parent.created_by
        - parent.name
        - parent.resource_subtype
        - permalink_url
        - projects
        - projects.name
        - resource_subtype
        - start_at
        - start_on
        - tags
        - tags.name
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the section's tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200121'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Task> result = client.tasks.searchTasksForWorkspace(workspaceGid, sortAscending, sortBy, isSubtask, completed, hasAttachment, isBlocked, isBlocking, modifiedAtAfter, modifiedAtBefore, dueOn, modifiedOn, modifiedOnAfter, modifiedOnBefore, completedAtAfter, completedAtBefore, completedOn, completedOnAfter, completedOnBefore, createdAtAfter, dueOnAfter, createdAtBefore, createdOn, createdOnAfter, createdOnBefore, startOn, startOnAfter, startOnBefore, dueAtAfter, dueAtBefore, dueOnBefore, commentedOnByNot, likedByNot, assignedByNot, assignedByAny, createdByNot, createdByAny, followersNot, teamsAny, tagsAll, tagsNot, tagsAny, sectionsAll, sectionsNot, sectionsAny, projectsAll, projectsNot, projectsAny, portfoliosAny, assigneeNot, assigneeAny, resourceSubtype, text)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet tasksApiInstance = new Asana.TasksApi();\nlet workspace_gid = \"\
            12345\"; // String | Globally unique identifier for the workspace or organization.\n\
            let opts = { \n    'text': \"Bug\", \n    'resource_subtype': \"milestone\"\
            , \n    'assignee.any': \"12345,23456,34567\", \n    'assignee.not': \"\
            12345,23456,34567\", \n    'portfolios.any': \"12345,23456,34567\", \n\
            \    'projects.any': \"12345,23456,34567\", \n    'projects.not': \"12345,23456,34567\"\
            , \n    'projects.all': \"12345,23456,34567\", \n    'sections.any': \"\
            12345,23456,34567\", \n    'sections.not': \"12345,23456,34567\", \n \
            \   'sections.all': \"12345,23456,34567\", \n    'tags.any': \"12345,23456,34567\"\
            , \n    'tags.not': \"12345,23456,34567\", \n    'tags.all': \"12345,23456,34567\"\
            , \n    'teams.any': \"12345,23456,34567\", \n    'followers.not': \"\
            12345,23456,34567\", \n    'created_by.any': \"12345,23456,34567\", \n\
            \    'created_by.not': \"12345,23456,34567\", \n    'assigned_by.any':\
            \ \"12345,23456,34567\", \n    'assigned_by.not': \"12345,23456,34567\"\
            , \n    'liked_by.not': \"12345,23456,34567\", \n    'commented_on_by.not':\
            \ \"12345,23456,34567\", \n    'due_on.before': \"2019-09-15\", \n   \
            \ 'due_on.after': \"2019-09-15\", \n    'due_on': \"2019-09-15\", \n \
            \   'due_at.before': \"2019-04-15T01:01:46.055Z\", \n    'due_at.after':\
            \ \"2019-04-15T01:01:46.055Z\", \n    'start_on.before': \"2019-09-15\"\
            , \n    'start_on.after': \"2019-09-15\", \n    'start_on': \"2019-09-15\"\
            , \n    'created_on.before': \"2019-09-15\", \n    'created_on.after':\
            \ \"2019-09-15\", \n    'created_on': \"2019-09-15\", \n    'created_at.before':\
            \ \"2019-04-15T01:01:46.055Z\", \n    'created_at.after': \"2019-04-15T01:01:46.055Z\"\
            , \n    'completed_on.before': \"2019-09-15\", \n    'completed_on.after':\
            \ \"2019-09-15\", \n    'completed_on': \"2019-09-15\", \n    'completed_at.before':\
            \ \"2019-04-15T01:01:46.055Z\", \n    'completed_at.after': \"2019-04-15T01:01:46.055Z\"\
            , \n    'modified_on.before': \"2019-09-15\", \n    'modified_on.after':\
            \ \"2019-09-15\", \n    'modified_on': \"2019-09-15\", \n    'modified_at.before':\
            \ \"2019-04-15T01:01:46.055Z\", \n    'modified_at.after': \"2019-04-15T01:01:46.055Z\"\
            , \n    'is_blocking': false, \n    'is_blocked': false, \n    'has_attachment':\
            \ false, \n    'completed': false, \n    'is_subtask': false, \n    'sort_by':\
            \ \"modified_at\", \n    'sort_ascending': false, \n    'opt_fields':\
            \ \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name\"\
            \n};\n// Custom fields query\nopts['custom_fields.123.is_set'] = true;\
            \ // Boolean | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE: searching\
            \ for multiple exact matches of a custom field, searching for multi-enum\
            \ custom field\nopts['custom_fields.123.value'] = '456'; // String, Number,\
            \ Enum option ID | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE:\
            \ searching for multiple exact matches of a custom field, searching for\
            \ multi-enum custom field\nopts['custom_fields.123.starts_with'] = 'start';\
            \ // String | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE: searching\
            \ for multiple exact matches of a custom field, searching for multi-enum\
            \ custom field\nopts['custom_fields.123.ends_with'] = 'end'; // String\
            \ | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE: searching for\
            \ multiple exact matches of a custom field, searching for multi-enum custom\
            \ field\nopts['custom_fields.123.contains'] = 'first'; // String | Replace\
            \ \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE: searching for multiple exact\
            \ matches of a custom field, searching for multi-enum custom field\nopts['custom_fields.123.less_than']\
            \ = 10; // Number | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE:\
            \ searching for multiple exact matches of a custom field, searching for\
            \ multi-enum custom field\nopts['custom_fields.123.greater_than'] = 100;\
            \ // Number | Replace \"123\" with <YOUR_CUSTOM_FIELD_GID>. NOTE: searching\
            \ for multiple exact matches of a custom field, searching for multi-enum\
            \ custom field\ntasksApiInstance.searchTasksForWorkspace(workspace_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.tasks.searchTasksForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            tasks_api_instance = asana.TasksApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'text': "Bug", # str | Performs full-text search on both task name and description
                'resource_subtype': "milestone", # str | Filters results by the task's resource_subtype
                'assignee.any': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'assignee.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'portfolios.any': "12345,23456,34567", # str | Comma-separated list of portfolio IDs
                'projects.any': "12345,23456,34567", # str | Comma-separated list of project IDs
                'projects.not': "12345,23456,34567", # str | Comma-separated list of project IDs
                'projects.all': "12345,23456,34567", # str | Comma-separated list of project IDs
                'sections.any': "12345,23456,34567", # str | Comma-separated list of section or column IDs
                'sections.not': "12345,23456,34567", # str | Comma-separated list of section or column IDs
                'sections.all': "12345,23456,34567", # str | Comma-separated list of section or column IDs
                'tags.any': "12345,23456,34567", # str | Comma-separated list of tag IDs
                'tags.not': "12345,23456,34567", # str | Comma-separated list of tag IDs
                'tags.all': "12345,23456,34567", # str | Comma-separated list of tag IDs
                'teams.any': "12345,23456,34567", # str | Comma-separated list of team IDs
                'followers.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'created_by.any': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'created_by.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'assigned_by.any': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'assigned_by.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'liked_by.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'commented_on_by.not': "12345,23456,34567", # str | Comma-separated list of user identifiers
                'due_on.before': '2019-09-15', # date | ISO 8601 date string
                'due_on.after': '2019-09-15', # date | ISO 8601 date string
                'due_on': '2019-09-15', # date | ISO 8601 date string or `null`
                'due_at.before': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'due_at.after': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'start_on.before': '2019-09-15', # date | ISO 8601 date string
                'start_on.after': '2019-09-15', # date | ISO 8601 date string
                'start_on': '2019-09-15', # date | ISO 8601 date string or `null`
                'created_on.before': '2019-09-15', # date | ISO 8601 date string
                'created_on.after': '2019-09-15', # date | ISO 8601 date string
                'created_on': '2019-09-15', # date | ISO 8601 date string or `null`
                'created_at.before': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'created_at.after': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'completed_on.before': '2019-09-15', # date | ISO 8601 date string
                'completed_on.after': '2019-09-15', # date | ISO 8601 date string
                'completed_on': '2019-09-15', # date | ISO 8601 date string or `null`
                'completed_at.before': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'completed_at.after': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'modified_on.before': '2019-09-15', # date | ISO 8601 date string
                'modified_on.after': '2019-09-15', # date | ISO 8601 date string
                'modified_on': '2019-09-15', # date | ISO 8601 date string or `null`
                'modified_at.before': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'modified_at.after': '2019-04-15T01:01:46.055Z', # datetime | ISO 8601 datetime string
                'is_blocking': False, # bool | Filter to incomplete tasks with dependents
                'is_blocked': False, # bool | Filter to tasks with incomplete dependencies
                'has_attachment': False, # bool | Filter to tasks with attachments
                'completed': False, # bool | Filter to completed tasks
                'is_subtask': False, # bool | Filter to subtasks
                'sort_by': "modified_at", # str | One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`, defaults to `modified_at`
                'sort_ascending': True, # bool | Default `false`
                'opt_fields': "actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,parent,parent.created_by,parent.name,parent.resource_subtype,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }
            opts['custom_fields.123.is_set'] = True # bool | Filiter to tasks with custom field set or unset. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.value'] = '456' # str or bool or Enum option ID | Filter to tasks with custom field that matches the provided value. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.starts_with'] = 'start' # string | Filter to tasks with custom field that starts with provided string. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.ends_with'] = 'end' # string | Filter to tasks with custom field that ends in provided string. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.contains'] = 'first' # string | Filter to tasks with custom field that contains the provided string. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.less_than'] = 10 # number | Filter to tasks with custom field with number value less than the provided number. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field
            opts['custom_fields.123.greater_than'] = 100 # number | Filter to tasks with custom field with number value greater than the provided number. Note: searching for multiple exact matches of a custom field, searching for multi-enum custom field

            try:
                # Search tasks in a workspace
                api_response = tasks_api_instance.search_tasks_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TasksApi->search_tasks_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.tasks.search_tasks_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->tasks->searchTasksForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.tasks.search_tasks_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
    - name: text
      in: query
      description: Performs full-text search on both task name and description
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: Bug
    - name: resource_subtype
      in: query
      description: Filters results by the task's resource_subtype
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: milestone
        enum:
        - default_task
        - milestone
    - name: assignee.any
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: assignee.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: portfolios.any
      in: query
      description: Comma-separated list of portfolio IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: projects.any
      in: query
      description: Comma-separated list of project IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: projects.not
      in: query
      description: Comma-separated list of project IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: projects.all
      in: query
      description: Comma-separated list of project IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: sections.any
      in: query
      description: Comma-separated list of section or column IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: sections.not
      in: query
      description: Comma-separated list of section or column IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: sections.all
      in: query
      description: Comma-separated list of section or column IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: tags.any
      in: query
      description: Comma-separated list of tag IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: tags.not
      in: query
      description: Comma-separated list of tag IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: tags.all
      in: query
      description: Comma-separated list of tag IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: teams.any
      in: query
      description: Comma-separated list of team IDs
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: followers.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: created_by.any
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: created_by.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: assigned_by.any
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: assigned_by.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: liked_by.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: commented_on_by.not
      in: query
      description: Comma-separated list of user identifiers
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345,23456,34567"
    - name: due_on.before
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: due_on.after
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: due_on
      in: query
      description: ISO 8601 date string or `null`
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        nullable: true
      example: 2019-09-15
    - name: due_at.before
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: due_at.after
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: start_on.before
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: start_on.after
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: start_on
      in: query
      description: ISO 8601 date string or `null`
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        nullable: true
      example: 2019-09-15
    - name: created_on.before
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: created_on.after
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: created_on
      in: query
      description: ISO 8601 date string or `null`
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        nullable: true
      example: 2019-09-15
    - name: created_at.before
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: created_at.after
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: completed_on.before
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: completed_on.after
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: completed_on
      in: query
      description: ISO 8601 date string or `null`
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        nullable: true
      example: 2019-09-15
    - name: completed_at.before
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: completed_at.after
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: modified_on.before
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: modified_on.after
      in: query
      description: ISO 8601 date string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
      example: 2019-09-15
    - name: modified_on
      in: query
      description: ISO 8601 date string or `null`
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        nullable: true
      example: 2019-09-15
    - name: modified_at.before
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: modified_at.after
      in: query
      description: ISO 8601 datetime string
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2019-04-15T01:01:46.055Z
    - name: is_blocking
      in: query
      description: Filter to incomplete tasks with dependents
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    - name: is_blocked
      in: query
      description: Filter to tasks with incomplete dependencies
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    - name: has_attachment
      in: query
      description: Filter to tasks with attachments
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    - name: completed
      in: query
      description: Filter to completed tasks
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    - name: is_subtask
      in: query
      description: Filter to subtasks
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    - name: sort_by
      in: query
      description: "One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`,\
        \ defaults to `modified_at`"
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: modified_at
        enum:
        - due_date
        - created_at
        - completed_at
        - likes
        - modified_at
      example: likes
    - name: sort_ascending
      in: query
      description: Default `false`
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
      example: true
  /team_memberships/{team_membership_gid}:
    get:
      tags:
      - Team memberships
      summary: Get a team membership
      description: Returns the complete team membership record for a single team membership.
      operationId: getTeamMembership
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - is_admin
            - is_guest
            - is_limited_access
            - team
            - team.name
            - user
            - user.name
        example:
        - is_admin
        - is_guest
        - is_limited_access
        - team
        - team.name
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200122'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.teammemberships.getTeamMembership(teamMembershipGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamMembershipsApiInstance = new Asana.TeamMembershipsApi();\nlet\
            \ team_membership_gid = \"724362\"; // String | \nlet opts = { \n    'opt_fields':\
            \ \"is_admin,is_guest,is_limited_access,team,team.name,user,user.name\"\
            \n};\nteamMembershipsApiInstance.getTeamMembership(team_membership_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teammemberships.getTeamMembership(teamMembershipGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\nteam_memberships_api_instance\
            \ = asana.TeamMembershipsApi(api_client)\nteam_membership_gid = \"724362\"\
            \ # str | \nopts = {\n    'opt_fields': \"is_admin,is_guest,is_limited_access,team,team.name,user,user.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get a team membership\n    api_response\
            \ = team_memberships_api_instance.get_team_membership(team_membership_gid,\
            \ opts)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"\
            Exception when calling TeamMembershipsApi->get_team_membership: %s\\n\"\
            \ % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.team_memberships.get_team_membership(team_membership_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teammemberships->getTeamMembership($team_membership_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.team_memberships.get_team_membership(team_membership_gid: 'team_membership_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_membership_path_gid'
    - $ref: '#/components/parameters/pretty'
  /team_memberships:
    get:
      tags:
      - Team memberships
      summary: Get team memberships
      description: Returns compact team membership records.
      operationId: getTeamMemberships
      parameters:
      - name: team
        in: query
        description: Globally unique identifier for the team
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "159874"
      - name: user
        in: query
        description: "A string identifying a user. This can either be the string \"\
          me\", an email, or the gid of a user. This parameter must be used with the\
          \ workspace parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "512241"
      - name: workspace
        in: query
        description: Globally unique identifier for the workspace. This parameter
          must be used with the user parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "31326"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - is_admin
            - is_guest
            - is_limited_access
            - offset
            - path
            - team
            - team.name
            - uri
            - user
            - user.name
        example:
        - is_admin
        - is_guest
        - is_limited_access
        - offset
        - path
        - team
        - team.name
        - uri
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200123'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.teammemberships.getTeamMemberships(workspace, user, team)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamMembershipsApiInstance = new Asana.TeamMembershipsApi();\nlet\
            \ opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'team': \"159874\", \n    'user': \"512241\", \n    'workspace':\
            \ \"31326\", \n    'opt_fields': \"is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name\"\
            \n};\nteamMembershipsApiInstance.getTeamMemberships(opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teammemberships.getTeamMemberships({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'team': "159874", # str | Globally unique identifier for the team.
                'user': "512241", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user. This parameter must be used with the workspace parameter.
                'workspace': "31326", # str | Globally unique identifier for the workspace. This parameter must be used with the user parameter.
                'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get team memberships
                api_response = team_memberships_api_instance.get_team_memberships(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TeamMembershipsApi->get_team_memberships: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.team_memberships.get_team_memberships({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teammemberships->getTeamMemberships(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.team_memberships.get_team_memberships(param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /teams/{team_gid}/team_memberships:
    get:
      tags:
      - Team memberships
      summary: Get memberships from a team
      description: Returns the compact team memberships for the team.
      operationId: getTeamMembershipsForTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - is_admin
            - is_guest
            - is_limited_access
            - offset
            - path
            - team
            - team.name
            - uri
            - user
            - user.name
        example:
        - is_admin
        - is_guest
        - is_limited_access
        - offset
        - path
        - team
        - team.name
        - uri
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested team's memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200124'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.teammemberships.getTeamMembershipsForTeam(teamGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamMembershipsApiInstance = new Asana.TeamMembershipsApi();\nlet\
            \ team_gid = \"159874\"; // String | Globally unique identifier for the\
            \ team.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name\"\
            \n};\nteamMembershipsApiInstance.getTeamMembershipsForTeam(team_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teammemberships.getTeamMembershipsForTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get memberships from a team
                api_response = team_memberships_api_instance.get_team_memberships_for_team(team_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TeamMembershipsApi->get_team_memberships_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.team_memberships.get_team_memberships_for_team(team_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teammemberships->getTeamMembershipsForTeam($team_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.team_memberships.get_team_memberships_for_team(team_gid: 'team_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /users/{user_gid}/team_memberships:
    get:
      tags:
      - Team memberships
      summary: Get memberships from a user
      description: Returns the compact team membership records for the user.
      operationId: getTeamMembershipsForUser
      parameters:
      - name: workspace
        in: query
        description: Globally unique identifier for the workspace
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "31326"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - is_admin
            - is_guest
            - is_limited_access
            - offset
            - path
            - team
            - team.name
            - uri
            - user
            - user.name
        example:
        - is_admin
        - is_guest
        - is_limited_access
        - offset
        - path
        - team
        - team.name
        - uri
        - user
        - user.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested users's memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200125'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.teammemberships.getTeamMembershipsForUser(userGid, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamMembershipsApiInstance = new Asana.TeamMembershipsApi();\nlet\
            \ user_gid = \"me\"; // String | A string identifying a user. This can\
            \ either be the string \\\"me\\\", an email, or the gid of a user.\nlet\
            \ workspace = \"31326\"; // String | Globally unique identifier for the\
            \ workspace.\nlet opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name\"\
            \n};\nteamMembershipsApiInstance.getTeamMembershipsForUser(user_gid, workspace,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teammemberships.getTeamMembershipsForUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            workspace = "31326" # str | Globally unique identifier for the workspace.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get memberships from a user
                api_response = team_memberships_api_instance.get_team_memberships_for_user(user_gid, workspace, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TeamMembershipsApi->get_team_memberships_for_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.team_memberships.get_team_memberships_for_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teammemberships->getTeamMembershipsForUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.team_memberships.get_team_memberships_for_user(user_gid: 'user_gid', workspace: '&#x27;workspace_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /teams:
    post:
      tags:
      - Teams
      summary: Create a team
      description: Creates a team within the current workspace.
      operationId: createTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - description
            - edit_team_name_or_description_access_level
            - edit_team_visibility_or_trash_team_access_level
            - guest_invite_management_access_level
            - html_description
            - join_request_management_access_level
            - member_invite_management_access_level
            - name
            - organization
            - organization.name
            - permalink_url
            - team_member_removal_access_level
            - visibility
        example:
        - description
        - edit_team_name_or_description_access_level
        - edit_team_visibility_or_trash_team_access_level
        - guest_invite_management_access_level
        - html_description
        - join_request_management_access_level
        - member_invite_management_access_level
        - name
        - organization
        - organization.name
        - permalink_url
        - team_member_removal_access_level
        - visibility
        x-ballerina-name: optFields
      requestBody:
        description: The team to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsBody'
        required: true
      responses:
        "201":
          description: Successfully created a new team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20123'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Team result = client.teams.createTeam()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The team to create.\nlet opts = { \n    'opt_fields': \"description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility\"\
            \n};\nteamsApiInstance.createTeam(body, opts).then((result) => {\n   \
            \ console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.createTeam({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The team to create.
            opts = {
                'opt_fields': "description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a team
                api_response = teams_api_instance.create_team(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TeamsApi->create_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.create_team({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->createTeam(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.create_team(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /teams/{team_gid}:
    get:
      tags:
      - Teams
      summary: Get a team
      description: Returns the full record for a single team.
      operationId: getTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - description
            - edit_team_name_or_description_access_level
            - edit_team_visibility_or_trash_team_access_level
            - guest_invite_management_access_level
            - html_description
            - join_request_management_access_level
            - member_invite_management_access_level
            - name
            - organization
            - organization.name
            - permalink_url
            - team_member_removal_access_level
            - visibility
        example:
        - description
        - edit_team_name_or_description_access_level
        - edit_team_visibility_or_trash_team_access_level
        - guest_invite_management_access_level
        - html_description
        - join_request_management_access_level
        - member_invite_management_access_level
        - name
        - organization
        - organization.name
        - permalink_url
        - team_member_removal_access_level
        - visibility
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a single team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200126'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Team result = client.teams.getTeam(teamGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet team_gid = \"159874\"\
            ; // String | Globally unique identifier for the team.\nlet opts = { \n\
            \    'opt_fields': \"description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility\"\
            \n};\nteamsApiInstance.getTeam(team_gid, opts).then((result) => {\n  \
            \  console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.getTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'opt_fields': "description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a team
                api_response = teams_api_instance.get_team(team_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TeamsApi->get_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.get_team(team_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->getTeam($team_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.get_team(team_gid: 'team_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Teams
      summary: Update a team
      description: Updates a team within the current workspace.
      operationId: updateTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - description
            - edit_team_name_or_description_access_level
            - edit_team_visibility_or_trash_team_access_level
            - guest_invite_management_access_level
            - html_description
            - join_request_management_access_level
            - member_invite_management_access_level
            - name
            - organization
            - organization.name
            - permalink_url
            - team_member_removal_access_level
            - visibility
        example:
        - description
        - edit_team_name_or_description_access_level
        - edit_team_visibility_or_trash_team_access_level
        - guest_invite_management_access_level
        - html_description
        - join_request_management_access_level
        - member_invite_management_access_level
        - name
        - organization
        - organization.name
        - permalink_url
        - team_member_removal_access_level
        - visibility
        x-ballerina-name: optFields
      requestBody:
        description: The team to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsteamGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200127'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Team result = client.teams.updateTeam()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The team to update.\nlet team_gid = \"159874\"; // String | Globally\
            \ unique identifier for the team.\nlet opts = { \n    'opt_fields': \"\
            description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility\"\
            \n};\nteamsApiInstance.updateTeam(body, team_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The team to update.
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'opt_fields': "description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,organization,organization.name,permalink_url,team_member_removal_access_level,visibility", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a team
                api_response = teams_api_instance.update_team(body, team_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TeamsApi->update_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.update_team({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->updateTeam(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.update_team(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/teams:
    get:
      tags:
      - Teams
      summary: Get teams in a workspace
      description: Returns the compact records for all teams in the workspace visible
        to the authorized user.
      operationId: getTeamsForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - description
            - edit_team_name_or_description_access_level
            - edit_team_visibility_or_trash_team_access_level
            - guest_invite_management_access_level
            - html_description
            - join_request_management_access_level
            - member_invite_management_access_level
            - name
            - offset
            - organization
            - organization.name
            - path
            - permalink_url
            - team_member_removal_access_level
            - uri
            - visibility
        example:
        - description
        - edit_team_name_or_description_access_level
        - edit_team_visibility_or_trash_team_access_level
        - guest_invite_management_access_level
        - html_description
        - join_request_management_access_level
        - member_invite_management_access_level
        - name
        - offset
        - organization
        - organization.name
        - path
        - permalink_url
        - team_member_removal_access_level
        - uri
        - visibility
        x-ballerina-name: optFields
      responses:
        "200":
          description: Returns the team records for all teams in the organization
            or workspace accessible to the authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200128'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Team> result = client.teams.getTeamsForWorkspace(workspaceGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet workspace_gid = \"\
            12345\"; // String | Globally unique identifier for the workspace or organization.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,offset,organization,organization.name,path,permalink_url,team_member_removal_access_level,uri,visibility\"\
            \n};\nteamsApiInstance.getTeamsForWorkspace(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.getTeamsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,offset,organization,organization.name,path,permalink_url,team_member_removal_access_level,uri,visibility", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get teams in a workspace
                api_response = teams_api_instance.get_teams_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TeamsApi->get_teams_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.get_teams_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->getTeamsForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.get_teams_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /users/{user_gid}/teams:
    get:
      tags:
      - Teams
      summary: Get teams for a user
      description: Returns the compact records for all teams to which the given user
        is assigned.
      operationId: getTeamsForUser
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - description
            - edit_team_name_or_description_access_level
            - edit_team_visibility_or_trash_team_access_level
            - guest_invite_management_access_level
            - html_description
            - join_request_management_access_level
            - member_invite_management_access_level
            - name
            - offset
            - organization
            - organization.name
            - path
            - permalink_url
            - team_member_removal_access_level
            - uri
            - visibility
        example:
        - description
        - edit_team_name_or_description_access_level
        - edit_team_visibility_or_trash_team_access_level
        - guest_invite_management_access_level
        - html_description
        - join_request_management_access_level
        - member_invite_management_access_level
        - name
        - offset
        - organization
        - organization.name
        - path
        - permalink_url
        - team_member_removal_access_level
        - uri
        - visibility
        x-ballerina-name: optFields
      responses:
        "200":
          description: Returns the team records for all teams in the organization
            or workspace to which the given user is assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200129'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Team> result = client.teams.getTeamsForUser(userGid, organization)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet user_gid = \"me\"\
            ; // String | A string identifying a user. This can either be the string\
            \ \\\"me\\\", an email, or the gid of a user.\nlet organization = \"1331\"\
            ; // String | The workspace or organization to filter teams on.\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,offset,organization,organization.name,path,permalink_url,team_member_removal_access_level,uri,visibility\"\
            \n};\nteamsApiInstance.getTeamsForUser(user_gid, organization, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.getTeamsForUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            organization = "1331" # str | The workspace or organization to filter teams on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "description,edit_team_name_or_description_access_level,edit_team_visibility_or_trash_team_access_level,guest_invite_management_access_level,html_description,join_request_management_access_level,member_invite_management_access_level,name,offset,organization,organization.name,path,permalink_url,team_member_removal_access_level,uri,visibility", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get teams for a user
                api_response = teams_api_instance.get_teams_for_user(user_gid, organization, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TeamsApi->get_teams_for_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.get_teams_for_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->getTeamsForUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.get_teams_for_user(user_gid: 'user_gid', organization: '&#x27;organization_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
    - name: organization
      in: query
      description: The workspace or organization to filter teams on
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: "1331"
  /teams/{team_gid}/addUser:
    post:
      tags:
      - Teams
      summary: Add a user to a team
      description: |-
        The user making this call must be a member of the team in order to add others. The user being added must exist in the same organization as the team.

        Returns the complete team membership record for the newly added user.
      operationId: addUserForTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - is_admin
            - is_guest
            - is_limited_access
            - team
            - team.name
            - user
            - user.name
        example:
        - is_admin
        - is_guest
        - is_limited_access
        - team
        - team.name
        - user
        - user.name
        x-ballerina-name: optFields
      requestBody:
        description: The user to add to the team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGidAddUserBody'
        required: true
      responses:
        "200":
          description: Successfully added user to the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200130'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.teams.addUserForTeam(teamGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet teamsApiInstance = new Asana.TeamsApi();\nlet body = {\"data\":\
            \ {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The user to add to the team.\nlet team_gid = \"159874\"; // String\
            \ | Globally unique identifier for the team.\nlet opts = { \n    'opt_fields':\
            \ \"is_admin,is_guest,is_limited_access,team,team.name,user,user.name\"\
            \n};\nteamsApiInstance.addUserForTeam(body, team_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.addUserForTeam(teamGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The user to add to the team.
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'opt_fields': "is_admin,is_guest,is_limited_access,team,team.name,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add a user to a team
                api_response = teams_api_instance.add_user_for_team(body, team_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TeamsApi->add_user_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.add_user_for_team(team_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->addUserForTeam($team_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.add_user_for_team(team_gid: 'team_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
  /teams/{team_gid}/removeUser:
    post:
      tags:
      - Teams
      summary: Remove a user from a team
      description: The user making this call must be a member of the team in order
        to remove themselves or others.
      operationId: removeUserForTeam
      requestBody:
        description: The user to remove from the team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGidRemoveUserBody'
        required: true
      responses:
        "204":
          description: Returns an empty data record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse204'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.teams.removeUserForTeam(teamGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let teamsApiInstance = new Asana.TeamsApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The user to remove from the team.
            let team_gid = "159874"; // String | Globally unique identifier for the team.

            teamsApiInstance.removeUserForTeam(body, team_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.teams.removeUserForTeam(teamGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            teams_api_instance = asana.TeamsApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The user to remove from the team.
            team_gid = "159874" # str | Globally unique identifier for the team.


            try:
                # Remove a user from a team
                api_response = teams_api_instance.remove_user_for_team(body, team_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TeamsApi->remove_user_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.teams.remove_user_for_team(team_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->teams->removeUserForTeam($team_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.teams.remove_user_for_team(team_gid: 'team_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
  /time_periods/{time_period_gid}:
    get:
      tags:
      - Time periods
      summary: Get a time period
      description: Returns the full record for a single time period.
      operationId: getTimePeriod
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - display_name
            - end_on
            - parent
            - parent.display_name
            - parent.end_on
            - parent.period
            - parent.start_on
            - period
            - start_on
        example:
        - display_name
        - end_on
        - parent
        - parent.display_name
        - parent.end_on
        - parent.period
        - parent.start_on
        - period
        - start_on
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the record for a single time period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200131'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.timeperiods.getTimePeriod(timePeriodGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timePeriodsApiInstance = new Asana.TimePeriodsApi();\nlet time_period_gid\
            \ = \"917392\"; // String | Globally unique identifier for the time period.\n\
            let opts = { \n    'opt_fields': \"display_name,end_on,parent,parent.display_name,parent.end_on,parent.period,parent.start_on,period,start_on\"\
            \n};\ntimePeriodsApiInstance.getTimePeriod(time_period_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.timeperiods.getTimePeriod(timePeriodGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_periods_api_instance = asana.TimePeriodsApi(api_client)
            time_period_gid = "917392" # str | Globally unique identifier for the time period.
            opts = {
                'opt_fields': "display_name,end_on,parent,parent.display_name,parent.end_on,parent.period,parent.start_on,period,start_on", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a time period
                api_response = time_periods_api_instance.get_time_period(time_period_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TimePeriodsApi->get_time_period: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.time_periods.get_time_period(time_period_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->timeperiods->getTimePeriod($time_period_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.time_periods.get_time_period(time_period_gid: 'time_period_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/time_period_path_gid'
    - $ref: '#/components/parameters/pretty'
  /time_periods:
    get:
      tags:
      - Time periods
      summary: Get time periods
      description: Returns compact time period records.
      operationId: getTimePeriods
      parameters:
      - name: start_on
        in: query
        description: ISO 8601 date string
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
        example: 2019-09-15
        x-ballerina-name: startOn
      - name: end_on
        in: query
        description: ISO 8601 date string
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
        example: 2019-09-15
        x-ballerina-name: endOn
      - name: workspace
        in: query
        description: Globally unique identifier for the workspace
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "31326"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - display_name
            - end_on
            - offset
            - parent
            - parent.display_name
            - parent.end_on
            - parent.period
            - parent.start_on
            - path
            - period
            - start_on
            - uri
        example:
        - display_name
        - end_on
        - offset
        - parent
        - parent.display_name
        - parent.end_on
        - parent.period
        - parent.start_on
        - path
        - period
        - start_on
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested time periods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200132'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.timeperiods.getTimePeriods(endOn, startOn, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timePeriodsApiInstance = new Asana.TimePeriodsApi();\nlet workspace\
            \ = \"31326\"; // String | Globally unique identifier for the workspace.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'start_on': \"2019-09-15\", \n    'end_on': \"2019-09-15\", \n\
            \    'opt_fields': \"display_name,end_on,offset,parent,parent.display_name,parent.end_on,parent.period,parent.start_on,path,period,start_on,uri\"\
            \n};\ntimePeriodsApiInstance.getTimePeriods(workspace, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.timeperiods.getTimePeriods({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_periods_api_instance = asana.TimePeriodsApi(api_client)
            workspace = "31326" # str | Globally unique identifier for the workspace.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'start_on': '2019-09-15', # date | ISO 8601 date string
                'end_on': '2019-09-15', # date | ISO 8601 date string
                'opt_fields': "display_name,end_on,offset,parent,parent.display_name,parent.end_on,parent.period,parent.start_on,path,period,start_on,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get time periods
                api_response = time_periods_api_instance.get_time_periods(workspace, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TimePeriodsApi->get_time_periods: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.time_periods.get_time_periods({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->timeperiods->getTimePeriods(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.time_periods.get_time_periods(workspace: '&#x27;workspace_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /tasks/{task_gid}/time_tracking_entries:
    get:
      tags:
      - Time tracking entries
      summary: Get time tracking entries for a task
      description: Returns time tracking entries for a given task.
      operationId: getTimeTrackingEntriesForTask
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_by
            - created_by.name
            - duration_minutes
            - entered_on
            - offset
            - path
            - uri
        example:
        - created_by
        - created_by.name
        - duration_minutes
        - entered_on
        - offset
        - path
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested time tracking entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200133'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timeTrackingEntriesApiInstance = new Asana.TimeTrackingEntriesApi();\n\
            let task_gid = \"321654\"; // String | The task to operate on.\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"created_by,created_by.name,duration_minutes,entered_on,offset,path,uri\"\
            \n};\ntimeTrackingEntriesApiInstance.getTimeTrackingEntriesForTask(task_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "created_by,created_by.name,duration_minutes,entered_on,offset,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get time tracking entries for a task
                api_response = time_tracking_entries_api_instance.get_time_tracking_entries_for_task(task_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TimeTrackingEntriesApi->get_time_tracking_entries_for_task: %s\n" % e)
          name: python-sdk-v5
    post:
      tags:
      - Time tracking entries
      summary: Create a time tracking entry
      description: |-
        Creates a time tracking entry on a given task.

        Returns the record of the newly created time tracking entry.
      operationId: createTimeTrackingEntry
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - created_by
            - created_by.name
            - duration_minutes
            - entered_on
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
        example:
        - created_at
        - created_by
        - created_by.name
        - duration_minutes
        - entered_on
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        x-ballerina-name: optFields
      requestBody:
        description: Information about the time tracking entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGidTimeTrackingEntriesBody'
        required: true
      responses:
        "201":
          description: Successfully created a time tracking entry for the task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20124'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timeTrackingEntriesApiInstance = new Asana.TimeTrackingEntriesApi();\n\
            let body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"\
            <VALUE_2>\",}}; // Object | Information about the time tracking entry.\n\
            let task_gid = \"321654\"; // String | The task to operate on.\nlet opts\
            \ = { \n    'opt_fields': \"created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype\"\
            \n};\ntimeTrackingEntriesApiInstance.createTimeTrackingEntry(body, task_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the time tracking entry.
            task_gid = "321654" # str | The task to operate on.
            opts = {
                'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Create a time tracking entry
                api_response = time_tracking_entries_api_instance.create_time_tracking_entry(body, task_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TimeTrackingEntriesApi->create_time_tracking_entry: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/task_path_gid'
    - $ref: '#/components/parameters/pretty'
  /time_tracking_entries/{time_tracking_entry_gid}:
    get:
      tags:
      - Time tracking entries
      summary: Get a time tracking entry
      description: Returns the complete time tracking entry record for a single time
        tracking entry.
      operationId: getTimeTrackingEntry
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - created_by
            - created_by.name
            - duration_minutes
            - entered_on
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
        example:
        - created_at
        - created_by
        - created_by.name
        - duration_minutes
        - entered_on
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested time tracking entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200134'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timeTrackingEntriesApiInstance = new Asana.TimeTrackingEntriesApi();\n\
            let time_tracking_entry_gid = \"917392\"; // String | Globally unique\
            \ identifier for the time tracking entry.\nlet opts = { \n    'opt_fields':\
            \ \"created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype\"\
            \n};\ntimeTrackingEntriesApiInstance.getTimeTrackingEntry(time_tracking_entry_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
            time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.
            opts = {
                'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a time tracking entry
                api_response = time_tracking_entries_api_instance.get_time_tracking_entry(time_tracking_entry_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TimeTrackingEntriesApi->get_time_tracking_entry: %s\n" % e)
          name: python-sdk-v5
    put:
      tags:
      - Time tracking entries
      summary: Update a time tracking entry
      description: |-
        A specific, existing time tracking entry can be updated by making a `PUT` request on
        the URL for that time tracking entry. Only the fields provided in the `data` block
        will be updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated time tracking entry record.
      operationId: updateTimeTrackingEntry
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - created_by
            - created_by.name
            - duration_minutes
            - entered_on
            - task
            - task.created_by
            - task.name
            - task.resource_subtype
        example:
        - created_at
        - created_by
        - created_by.name
        - duration_minutes
        - entered_on
        - task
        - task.created_by
        - task.name
        - task.resource_subtype
        x-ballerina-name: optFields
      requestBody:
        description: The updated fields for the time tracking entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingEntriestimeTrackingEntryGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the time tracking entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200135'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet timeTrackingEntriesApiInstance = new Asana.TimeTrackingEntriesApi();\n\
            let body = {\"data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"\
            <VALUE_2>\",}}; // Object | The updated fields for the time tracking entry.\n\
            let time_tracking_entry_gid = \"917392\"; // String | Globally unique\
            \ identifier for the time tracking entry.\nlet opts = { \n    'opt_fields':\
            \ \"created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype\"\
            \n};\ntimeTrackingEntriesApiInstance.updateTimeTrackingEntry(body, time_tracking_entry_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the time tracking entry.
            time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.
            opts = {
                'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a time tracking entry
                api_response = time_tracking_entries_api_instance.update_time_tracking_entry(body, time_tracking_entry_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TimeTrackingEntriesApi->update_time_tracking_entry: %s\n" % e)
          name: python-sdk-v5
    delete:
      tags:
      - Time tracking entries
      summary: Delete a time tracking entry
      description: |-
        A specific, existing time tracking entry can be deleted by making a `DELETE` request on
        the URL for that time tracking entry.

        Returns an empty data record.
      operationId: deleteTimeTrackingEntry
      responses:
        "200":
          description: Successfully deleted the specified time tracking entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200136'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let timeTrackingEntriesApiInstance = new Asana.TimeTrackingEntriesApi();
            let time_tracking_entry_gid = "917392"; // String | Globally unique identifier for the time tracking entry.

            timeTrackingEntriesApiInstance.deleteTimeTrackingEntry(time_tracking_entry_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
            time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.


            try:
                # Delete a time tracking entry
                api_response = time_tracking_entries_api_instance.delete_time_tracking_entry(time_tracking_entry_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling TimeTrackingEntriesApi->delete_time_tracking_entry: %s\n" % e)
          name: python-sdk-v5
    parameters:
    - $ref: '#/components/parameters/time_tracking_entry_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/typeahead:
    get:
      tags:
      - Typeahead
      summary: Get objects via typeahead
      description: |-
        Retrieves objects in the workspace based via an auto-completion/typeahead
        search algorithm. This feature is meant to provide results quickly, so do
        not rely on this API to provide extremely accurate search results. The
        result set is limited to a single page of results with a maximum size, so
        you won’t be able to fetch large numbers of results.

        The typeahead search API provides search for objects from a single
        workspace. This endpoint should be used to query for objects when
        creating an auto-completion/typeahead search feature. This API is meant
        to provide results quickly and should not be relied upon for accurate or
        exhaustive search results. The results sets are limited in size and
        cannot be paginated.

        Queries return a compact representation of each object which is typically
        the gid and name fields. Interested in a specific set of fields or all of
        the fields?! Of course you are. Use field selectors to manipulate what
        data is included in a response.

        Resources with type `user` are returned in order of most contacted to
        least contacted. This is determined by task assignments, adding the user
        to projects, and adding the user as a follower to tasks, messages,
        etc.

        Resources with type `project` are returned in order of recency. This is
        determined when the user visits the project, is added to the project, and
        completes tasks in the project.

        Resources with type `task` are returned with priority placed on tasks
        the user is following, but no guarantee on the order of those tasks.

        Resources with type `project_template` are returned with priority
        placed on favorited project templates.

        Leaving the `query` string empty or omitted will give you results, still
        following the resource ordering above. This could be used to list users or
        projects that are relevant for the requesting user's api token.
      operationId: typeaheadForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - name
        example:
        - name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved objects via a typeahead search algorithm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200137'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.typeahead.typeaheadForWorkspace(workspaceGid, count, query, type, resourceType)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet typeaheadApiInstance = new Asana.TypeaheadApi();\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet resource_type = \"user\"; // String | The type\
            \ of values the typeahead should return. You can choose from one of the\
            \ following: `custom_field`, `project`, `project_template`, `portfolio`,\
            \ `tag`, `task`, and `user`. Note that unlike in the names of endpoints,\
            \ the types listed here are in singular form (e.g. `task`). Using multiple\
            \ types is not yet supported.\nlet opts = { \n    'type': \"user\", \n\
            \    'query': \"Greg\", \n    'count': 20, \n    'opt_fields': \"name\"\
            \n};\ntypeaheadApiInstance.typeaheadForWorkspace(workspace_gid, resource_type,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.typeahead.typeaheadForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            typeahead_api_instance = asana.TypeaheadApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            resource_type = "user" # str | The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported.
            opts = {
                'type': "user", # str | *Deprecated: new integrations should prefer the resource_type field.*
                'query': "Greg", # str | The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results.
                'count': 20, # int | The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.
                'opt_fields': "name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get objects via typeahead
                api_response = typeahead_api_instance.typeahead_for_workspace(workspace_gid, resource_type, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling TypeaheadApi->typeahead_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.typeahead.typeahead_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->typeahead->typeaheadForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.typeahead.typeahead_for_workspace(workspace_gid: 'workspace_gid', resource_type: '&#x27;resource_type_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - name: resource_type
      in: query
      description: "The type of values the typeahead should return. You can choose\
        \ from one of the following: `custom_field`, `goal`, `project`, `project_template`,\
        \ `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the\
        \ names of endpoints, the types listed here are in singular form (e.g. `task`).\
        \ Using multiple types is not yet supported"
      required: true
      style: form
      explode: true
      schema:
        type: string
        default: user
        enum:
        - custom_field
        - goal
        - project
        - project_template
        - portfolio
        - tag
        - task
        - team
        - user
    - name: type
      in: query
      description: "*Deprecated: new integrations should prefer the resource_type\
        \ field.*"
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: user
        enum:
        - custom_field
        - portfolio
        - project
        - tag
        - task
        - user
    - name: query
      in: query
      description: "The string that will be used to search for relevant objects. If\
        \ an empty string is passed in, the API will return results"
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: Greg
    - name: count
      in: query
      description: "The number of results to return. The default is 20 if this parameter\
        \ is omitted, with a minimum of 1 and a maximum of 100. If there are fewer\
        \ results found than requested, all will be returned"
      required: false
      style: form
      explode: true
      schema:
        type: integer
      example: 20
    - $ref: '#/components/parameters/pretty'
  /user_task_lists/{user_task_list_gid}:
    get:
      tags:
      - User task lists
      summary: Get a user task list
      description: Returns the full record for a user task list.
      operationId: getUserTaskList
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - owner
            - workspace
        example:
        - name
        - owner
        - workspace
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the user task list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200138'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            UserTaskList result = client.usertasklists.getUserTaskList(userTaskListGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet userTaskListsApiInstance = new Asana.UserTaskListsApi();\nlet user_task_list_gid\
            \ = \"12345\"; // String | Globally unique identifier for the user task\
            \ list.\nlet opts = { \n    'opt_fields': \"name,owner,workspace\"\n};\n\
            userTaskListsApiInstance.getUserTaskList(user_task_list_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.usertasklists.getUserTaskList(userTaskListGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            user_task_lists_api_instance = asana.UserTaskListsApi(api_client)
            user_task_list_gid = "12345" # str | Globally unique identifier for the user task list.
            opts = {
                'opt_fields': "name,owner,workspace", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a user task list
                api_response = user_task_lists_api_instance.get_user_task_list(user_task_list_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling UserTaskListsApi->get_user_task_list: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.user_task_lists.get_user_task_list(user_task_list_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->usertasklists->getUserTaskList($user_task_list_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.user_task_lists.get_user_task_list(user_task_list_gid: 'user_task_list_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_task_list_path_gid'
    - $ref: '#/components/parameters/pretty'
  /users/{user_gid}/user_task_list:
    get:
      tags:
      - User task lists
      summary: Get a user's task list
      description: Returns the full record for a user's task list.
      operationId: getUserTaskListForUser
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - owner
            - workspace
        example:
        - name
        - owner
        - workspace
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the user's task list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200139'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            UserTaskList result = client.usertasklists.getUserTaskListForUser(userGid, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet userTaskListsApiInstance = new Asana.UserTaskListsApi();\nlet user_gid\
            \ = \"me\"; // String | A string identifying a user. This can either be\
            \ the string \\\"me\\\", an email, or the gid of a user.\nlet workspace\
            \ = \"1234\"; // String | The workspace in which to get the user task\
            \ list.\nlet opts = { \n    'opt_fields': \"name,owner,workspace\"\n};\n\
            userTaskListsApiInstance.getUserTaskListForUser(user_gid, workspace, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.usertasklists.getUserTaskListForUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            user_task_lists_api_instance = asana.UserTaskListsApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            workspace = "1234" # str | The workspace in which to get the user task list.
            opts = {
                'opt_fields': "name,owner,workspace", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a user's task list
                api_response = user_task_lists_api_instance.get_user_task_list_for_user(user_gid, workspace, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling UserTaskListsApi->get_user_task_list_for_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.user_task_lists.get_user_task_list_for_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->usertasklists->getUserTaskListForUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.user_task_lists.get_user_task_list_for_user(user_gid: 'user_gid', workspace: '&#x27;workspace_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
    - name: workspace
      in: query
      description: The workspace in which to get the user task list
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: "1234"
  /users:
    get:
      tags:
      - Users
      summary: Get multiple users
      description: |-
        Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter.
        Results are sorted by user ID.
      operationId: getUsers
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - name
            - offset
            - path
            - photo
            - photo.image_1024x1024
            - photo.image_128x128
            - photo.image_21x21
            - photo.image_27x27
            - photo.image_36x36
            - photo.image_60x60
            - uri
            - workspaces
            - workspaces.name
        example:
        - email
        - name
        - offset
        - path
        - photo
        - photo.image_1024x1024
        - photo.image_128x128
        - photo.image_21x21
        - photo.image_27x27
        - photo.image_36x36
        - photo.image_60x60
        - uri
        - workspaces
        - workspaces.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested user records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200140'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<User> result = client.users.getUsers(team, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet usersApiInstance = new Asana.UsersApi();\nlet opts = { \n    'workspace':\
            \ \"1331\", \n    'team': \"15627\", \n    'limit': 50, \n    'offset':\
            \ \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields': \"email,name,offset,path,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,uri,workspaces,workspaces.name\"\
            \n};\nusersApiInstance.getUsers(opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.users.getUsers({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            users_api_instance = asana.UsersApi(api_client)
            opts = {
                'workspace': "1331", # str | The workspace or organization ID to filter users on.
                'team': "15627", # str | The team ID to filter users on.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "email,name,offset,path,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,uri,workspaces,workspaces.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple users
                api_response = users_api_instance.get_users(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling UsersApi->get_users: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.users.get_users({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->users->getUsers(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.users.get_users(param: "value", param: "value", options: {pretty: true})
    parameters:
    - name: workspace
      in: query
      description: The workspace or organization ID to filter users on
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "1331"
    - name: team
      in: query
      description: The team ID to filter users on
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "15627"
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /users/{user_gid}:
    get:
      tags:
      - Users
      summary: Get a user
      description: Returns the full user record for the single user with the provided
        ID.
      operationId: getUser
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - name
            - photo
            - photo.image_1024x1024
            - photo.image_128x128
            - photo.image_21x21
            - photo.image_27x27
            - photo.image_36x36
            - photo.image_60x60
            - workspaces
            - workspaces.name
        example:
        - email
        - name
        - photo
        - photo.image_1024x1024
        - photo.image_128x128
        - photo.image_21x21
        - photo.image_27x27
        - photo.image_36x36
        - photo.image_60x60
        - workspaces
        - workspaces.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Returns the user specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200141'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            User result = client.users.getUser(userGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet usersApiInstance = new Asana.UsersApi();\nlet user_gid = \"me\"\
            ; // String | A string identifying a user. This can either be the string\
            \ \\\"me\\\", an email, or the gid of a user.\nlet opts = { \n    'opt_fields':\
            \ \"email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name\"\
            \n};\nusersApiInstance.getUser(user_gid, opts).then((result) => {\n  \
            \  console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.users.getUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            users_api_instance = asana.UsersApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            opts = {
                'opt_fields': "email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a user
                api_response = users_api_instance.get_user(user_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling UsersApi->get_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.users.get_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->users->getUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.users.get_user(user_gid: 'user_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
  /users/{user_gid}/favorites:
    get:
      tags:
      - Users
      summary: Get a user's favorites
      description: |-
        Returns all of a user's favorites in the given workspace, of the given type.
        Results are given in order (The same order as Asana's sidebar).
      operationId: getFavoritesForUser
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - offset
            - path
            - uri
        example:
        - name
        - offset
        - path
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Returns the specified user's favorites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200142'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.users.getFavoritesForUser(userGid, workspace, resourceType)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet usersApiInstance = new Asana.UsersApi();\nlet user_gid = \"me\"\
            ; // String | A string identifying a user. This can either be the string\
            \ \\\"me\\\", an email, or the gid of a user.\nlet resource_type = \"\
            project\"; // String | The resource type of favorites to be returned.\n\
            let workspace = \"1234\"; // String | The workspace in which to get favorites.\n\
            let opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"name,offset,path,uri\"\n};\nusersApiInstance.getFavoritesForUser(user_gid,\
            \ resource_type, workspace, opts).then((result) => {\n    console.log('API\
            \ called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.users.getFavoritesForUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            users_api_instance = asana.UsersApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            resource_type = "project" # str | The resource type of favorites to be returned.
            workspace = "1234" # str | The workspace in which to get favorites.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "name,offset,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a user's favorites
                api_response = users_api_instance.get_favorites_for_user(user_gid, resource_type, workspace, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling UsersApi->get_favorites_for_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.users.get_favorites_for_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->users->getFavoritesForUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.users.get_favorites_for_user(user_gid: 'user_gid', resource_type: '&#x27;resource_type_example&#x27;', workspace: '&#x27;workspace_example&#x27;', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
    - name: resource_type
      in: query
      description: The resource type of favorites to be returned
      required: true
      style: form
      explode: true
      schema:
        type: string
        default: project
        enum:
        - portfolio
        - project
        - tag
        - task
        - user
        - project_template
    - name: workspace
      in: query
      description: The workspace in which to get favorites
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: "1234"
  /teams/{team_gid}/users:
    get:
      tags:
      - Users
      summary: Get users in a team
      description: |-
        Returns the compact records for all users that are members of the team.
        Results are sorted alphabetically and limited to 2000. For more results use the `/users` endpoint.
      operationId: getUsersForTeam
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - name
            - photo
            - photo.image_1024x1024
            - photo.image_128x128
            - photo.image_21x21
            - photo.image_27x27
            - photo.image_36x36
            - photo.image_60x60
            - workspaces
            - workspaces.name
        example:
        - email
        - name
        - photo
        - photo.image_1024x1024
        - photo.image_128x128
        - photo.image_21x21
        - photo.image_27x27
        - photo.image_36x36
        - photo.image_60x60
        - workspaces
        - workspaces.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: "Returns the user records for all the members of the team,\
            \ including guests and limited access users"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200143'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<User> result = client.users.getUsersForTeam(teamGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet usersApiInstance = new Asana.UsersApi();\nlet team_gid = \"159874\"\
            ; // String | Globally unique identifier for the team.\nlet opts = { \n\
            \    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\", \n    'opt_fields':\
            \ \"email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name\"\
            \n};\nusersApiInstance.getUsersForTeam(team_gid, opts).then((result) =>\
            \ {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.users.getUsersForTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            users_api_instance = asana.UsersApi(api_client)
            team_gid = "159874" # str | Globally unique identifier for the team.
            opts = {
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get users in a team
                api_response = users_api_instance.get_users_for_team(team_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling UsersApi->get_users_for_team: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.users.get_users_for_team(team_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->users->getUsersForTeam($team_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.users.get_users_for_team(team_gid: 'team_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/team_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/offset'
  /workspaces/{workspace_gid}/users:
    get:
      tags:
      - Users
      summary: Get users in a workspace or organization
      description: |-
        Returns the compact records for all users in the specified workspace or organization.
        Results are sorted alphabetically and limited to 2000. For more results use the `/users` endpoint.
      operationId: getUsersForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - name
            - photo
            - photo.image_1024x1024
            - photo.image_128x128
            - photo.image_21x21
            - photo.image_27x27
            - photo.image_36x36
            - photo.image_60x60
            - workspaces
            - workspaces.name
        example:
        - email
        - name
        - photo
        - photo.image_1024x1024
        - photo.image_128x128
        - photo.image_21x21
        - photo.image_27x27
        - photo.image_36x36
        - photo.image_60x60
        - workspaces
        - workspaces.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Return the users in the specified workspace or org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200144'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<User> result = client.users.getUsersForWorkspace(workspaceGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet usersApiInstance = new Asana.UsersApi();\nlet workspace_gid = \"\
            12345\"; // String | Globally unique identifier for the workspace or organization.\n\
            let opts = { \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name\"\
            \n};\nusersApiInstance.getUsersForWorkspace(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.users.getUsersForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            users_api_instance = asana.UsersApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60,workspaces,workspaces.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get users in a workspace or organization
                api_response = users_api_instance.get_users_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling UsersApi->get_users_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.users.get_users_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->users->getUsersForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.users.get_users_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/offset'
  /webhooks:
    get:
      tags:
      - Webhooks
      summary: Get multiple webhooks
      description: Get the compact representation of all webhooks your app has registered
        for the authenticated user in the given workspace.
      operationId: getWebhooks
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: workspace
        in: query
        description: The workspace to query for webhooks in
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "1331"
      - name: resource
        in: query
        description: Only return webhooks for the given resource
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "51648"
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - created_at
            - filters
            - filters.action
            - filters.fields
            - filters.resource_subtype
            - last_failure_at
            - last_failure_content
            - last_success_at
            - offset
            - path
            - resource
            - resource.name
            - target
            - uri
        example:
        - active
        - created_at
        - filters
        - filters.action
        - filters.fields
        - filters.resource_subtype
        - last_failure_at
        - last_failure_content
        - last_success_at
        - offset
        - path
        - resource
        - resource.name
        - target
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200145'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Webhook> result = client.webhooks.getWebhooks(resource, workspace)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet webhooksApiInstance = new Asana.WebhooksApi();\nlet workspace =\
            \ \"1331\"; // String | The workspace to query for webhooks in.\nlet opts\
            \ = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'resource': \"51648\", \n    'opt_fields': \"active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,offset,path,resource,resource.name,target,uri\"\
            \n};\nwebhooksApiInstance.getWebhooks(workspace, opts).then((result) =>\
            \ {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.webhooks.getWebhooks({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            webhooks_api_instance = asana.WebhooksApi(api_client)
            workspace = "1331" # str | The workspace to query for webhooks in.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'resource': "51648", # str | Only return webhooks for the given resource.
                'opt_fields': "active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,offset,path,resource,resource.name,target,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple webhooks
                api_response = webhooks_api_instance.get_webhooks(workspace, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling WebhooksApi->get_webhooks: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.webhooks.get_webhooks({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->webhooks->getWebhooks(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.webhooks.get_webhooks(workspace: '&#x27;workspace_example&#x27;', param: "value", param: "value", options: {pretty: true})
    post:
      tags:
      - Webhooks
      summary: Establish a webhook
      description: |-
        Establishing a webhook is a two-part process. First, a simple HTTP POST
        request initiates the creation similar to creating any other resource.

        Next, in the middle of this request comes the confirmation handshake.
        When a webhook is created, we will send a test POST to the target with an
        `X-Hook-Secret` header. The target must respond with a `200 OK` or `204
        No Content` and a matching `X-Hook-Secret` header to confirm that this
        webhook subscription is indeed expected. We strongly recommend storing
        this secret to be used to verify future webhook event signatures.

        The POST request to create the webhook will then return with the status
        of the request. If you do not acknowledge the webhook’s confirmation
        handshake it will fail to setup, and you will receive an error in
        response to your attempt to create it. This means you need to be able to
        receive and complete the webhook *while* the POST request is in-flight
        (in other words, have a server that can handle requests asynchronously).

        Invalid hostnames like localhost will recieve a 403 Forbidden status code.

        ```
        # Request
        curl -H "Authorization: Bearer <personal_access_token>" \
        -X POST https://app.asana.com/api/1.0/webhooks \
        -d "resource=8675309" \
        -d "target=https://example.com/receive-webhook/7654"
        ```

        ```
        # Handshake sent to https://example.com/
        POST /receive-webhook/7654
        X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
        ```

        ```
        # Handshake response sent by example.com
        HTTP/1.1 200
        X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
        ```

        ```
        # Response
        HTTP/1.1 201
        {
          "data": {
            "gid": "43214",
            "resource": {
              "gid": "8675309",
              "name": "Bugs"
            },
            "target": "https://example.com/receive-webhook/7654",
            "active": false,
            "last_success_at": null,
            "last_failure_at": null,
            "last_failure_content": null
          }
        }
        ```
      operationId: createWebhook
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - created_at
            - filters
            - filters.action
            - filters.fields
            - filters.resource_subtype
            - last_failure_at
            - last_failure_content
            - last_success_at
            - resource
            - resource.name
            - target
        example:
        - active
        - created_at
        - filters
        - filters.action
        - filters.fields
        - filters.resource_subtype
        - last_failure_at
        - last_failure_content
        - last_success_at
        - resource
        - resource.name
        - target
        x-ballerina-name: optFields
      requestBody:
        description: The webhook workspace and target
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksBody'
        required: true
      responses:
        "201":
          description: Successfully created the requested webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse20125'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Webhook result = client.webhooks.createWebhook()
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet webhooksApiInstance = new Asana.WebhooksApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The webhook workspace and target.\nlet opts = { \n    'opt_fields':\
            \ \"active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target\"\
            \n};\nwebhooksApiInstance.createWebhook(body, opts).then((result) => {\n\
            \    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.webhooks.createWebhook({field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            webhooks_api_instance = asana.WebhooksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The webhook workspace and target.
            opts = {
                'opt_fields': "active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Establish a webhook
                api_response = webhooks_api_instance.create_webhook(body, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WebhooksApi->create_webhook: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.webhooks.create_webhook({'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->webhooks->createWebhook(array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.webhooks.create_webhook(field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
  /webhooks/{webhook_gid}:
    get:
      tags:
      - Webhooks
      summary: Get a webhook
      description: Returns the full record for the given webhook.
      operationId: getWebhook
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - created_at
            - filters
            - filters.action
            - filters.fields
            - filters.resource_subtype
            - last_failure_at
            - last_failure_content
            - last_success_at
            - resource
            - resource.name
            - target
        example:
        - active
        - created_at
        - filters
        - filters.action
        - filters.fields
        - filters.resource_subtype
        - last_failure_at
        - last_failure_content
        - last_success_at
        - resource
        - resource.name
        - target
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200146'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Webhook result = client.webhooks.getWebhook(webhookGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet webhooksApiInstance = new Asana.WebhooksApi();\nlet webhook_gid\
            \ = \"12345\"; // String | Globally unique identifier for the webhook.\n\
            let opts = { \n    'opt_fields': \"active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target\"\
            \n};\nwebhooksApiInstance.getWebhook(webhook_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.webhooks.getWebhook(webhookGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            webhooks_api_instance = asana.WebhooksApi(api_client)
            webhook_gid = "12345" # str | Globally unique identifier for the webhook.
            opts = {
                'opt_fields': "active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a webhook
                api_response = webhooks_api_instance.get_webhook(webhook_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WebhooksApi->get_webhook: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.webhooks.get_webhook(webhook_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->webhooks->getWebhook($webhook_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.webhooks.get_webhook(webhook_gid: 'webhook_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Webhooks
      summary: Update a webhook
      description: An existing webhook's filters can be updated by making a PUT request
        on the URL for that webhook. Note that the webhook's previous `filters` array
        will be completely overwritten by the `filters` sent in the PUT request.
      operationId: updateWebhook
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - created_at
            - filters
            - filters.action
            - filters.fields
            - filters.resource_subtype
            - last_failure_at
            - last_failure_content
            - last_success_at
            - resource
            - resource.name
            - target
        example:
        - active
        - created_at
        - filters
        - filters.action
        - filters.fields
        - filters.resource_subtype
        - last_failure_at
        - last_failure_content
        - last_success_at
        - resource
        - resource.name
        - target
        x-ballerina-name: optFields
      requestBody:
        description: The updated filters for the webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookswebhookGidBody'
        required: true
      responses:
        "200":
          description: Successfully updated the webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200147'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Webhook result = client.webhooks.updateWebhook(webhookGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet webhooksApiInstance = new Asana.WebhooksApi();\nlet body = {\"data\"\
            : {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}}; // Object\
            \ | The updated filters for the webhook.\nlet webhook_gid = \"12345\"\
            ; // String | Globally unique identifier for the webhook.\nlet opts =\
            \ { \n    'opt_fields': \"active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target\"\
            \n};\nwebhooksApiInstance.updateWebhook(body, webhook_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.webhooks.updateWebhook(webhookGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            webhooks_api_instance = asana.WebhooksApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated filters for the webhook.
            webhook_gid = "12345" # str | Globally unique identifier for the webhook.
            opts = {
                'opt_fields': "active,created_at,filters,filters.action,filters.fields,filters.resource_subtype,last_failure_at,last_failure_content,last_success_at,resource,resource.name,target", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a webhook
                api_response = webhooks_api_instance.update_webhook(body, webhook_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WebhooksApi->update_webhook: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.webhooks.update_webhook(webhook_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->webhooks->updateWebhook($webhook_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.webhooks.update_webhook(webhook_gid: 'webhook_gid', field: "value", field: "value", options: {pretty: true})
    delete:
      tags:
      - Webhooks
      summary: Delete a webhook
      description: "This method *permanently* removes a webhook. Note that it may\
        \ be possible to receive a request that was already in flight after deleting\
        \ the webhook, but no further requests will be issued."
      operationId: deleteWebhook
      responses:
        "200":
          description: Successfully retrieved the requested webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200148'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.webhooks.deleteWebhook(webhookGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let webhooksApiInstance = new Asana.WebhooksApi();
            let webhook_gid = "12345"; // String | Globally unique identifier for the webhook.

            webhooksApiInstance.deleteWebhook(webhook_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.webhooks.deleteWebhook(webhookGid)
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            webhooks_api_instance = asana.WebhooksApi(api_client)
            webhook_gid = "12345" # str | Globally unique identifier for the webhook.


            try:
                # Delete a webhook
                api_response = webhooks_api_instance.delete_webhook(webhook_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WebhooksApi->delete_webhook: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.webhooks.delete_webhook(webhook_gid, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->webhooks->deleteWebhook($webhook_gid, array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.webhooks.delete_webhook(webhook_gid: 'webhook_gid', options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/webhook_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspace_memberships/{workspace_membership_gid}:
    get:
      tags:
      - Workspace memberships
      summary: Get a workspace membership
      description: Returns the complete workspace record for a single workspace membership.
      operationId: getWorkspaceMembership
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - is_active
            - is_admin
            - is_guest
            - user
            - user.name
            - user_task_list
            - user_task_list.name
            - user_task_list.owner
            - user_task_list.workspace
            - vacation_dates
            - vacation_dates.end_on
            - vacation_dates.start_on
            - workspace
            - workspace.name
        example:
        - created_at
        - is_active
        - is_admin
        - is_guest
        - user
        - user.name
        - user_task_list
        - user_task_list.name
        - user_task_list.owner
        - user_task_list.workspace
        - vacation_dates
        - vacation_dates.end_on
        - vacation_dates.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested workspace membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200149'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.workspacememberships.getWorkspaceMembership(workspaceMembershipGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspaceMembershipsApiInstance = new Asana.WorkspaceMembershipsApi();\n\
            let workspace_membership_gid = \"12345\"; // String | \nlet opts = { \n\
            \    'opt_fields': \"created_at,is_active,is_admin,is_guest,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name\"\
            \n};\nworkspaceMembershipsApiInstance.getWorkspaceMembership(workspace_membership_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspacememberships.getWorkspaceMembership(workspaceMembershipGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: "import asana\nfrom asana.rest import ApiException\nfrom pprint import\
            \ pprint\n\nconfiguration = asana.Configuration()\nconfiguration.access_token\
            \ = '<YOUR_ACCESS_TOKEN>'\napi_client = asana.ApiClient(configuration)\n\
            \n# create an instance of the API class\nworkspace_memberships_api_instance\
            \ = asana.WorkspaceMembershipsApi(api_client)\nworkspace_membership_gid\
            \ = \"12345\" # str | \nopts = {\n    'opt_fields': \"created_at,is_active,is_admin,is_guest,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name\"\
            , # list[str] | This endpoint returns a compact resource, which excludes\
            \ some properties by default. To include those optional properties, set\
            \ this query parameter to a comma-separated list of the properties you\
            \ wish to include.\n}\n\ntry:\n    # Get a workspace membership\n    api_response\
            \ = workspace_memberships_api_instance.get_workspace_membership(workspace_membership_gid,\
            \ opts)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"\
            Exception when calling WorkspaceMembershipsApi->get_workspace_membership:\
            \ %s\\n\" % e)"
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspace_memberships.get_workspace_membership(workspace_membership_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspacememberships->getWorkspaceMembership($workspace_membership_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspace_memberships.get_workspace_membership(workspace_membership_gid: 'workspace_membership_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_membership_path_gid'
    - $ref: '#/components/parameters/pretty'
  /users/{user_gid}/workspace_memberships:
    get:
      tags:
      - Workspace memberships
      summary: Get workspace memberships for a user
      description: Returns the compact workspace membership records for the user.
      operationId: getWorkspaceMembershipsForUser
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - is_active
            - is_admin
            - is_guest
            - offset
            - path
            - uri
            - user
            - user.name
            - user_task_list
            - user_task_list.name
            - user_task_list.owner
            - user_task_list.workspace
            - vacation_dates
            - vacation_dates.end_on
            - vacation_dates.start_on
            - workspace
            - workspace.name
        example:
        - created_at
        - is_active
        - is_admin
        - is_guest
        - offset
        - path
        - uri
        - user
        - user.name
        - user_task_list
        - user_task_list.name
        - user_task_list.owner
        - user_task_list.workspace
        - vacation_dates
        - vacation_dates.end_on
        - vacation_dates.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested user's workspace memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200150'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.workspacememberships.getWorkspaceMembershipsForUser(userGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspaceMembershipsApiInstance = new Asana.WorkspaceMembershipsApi();\n\
            let user_gid = \"me\"; // String | A string identifying a user. This can\
            \ either be the string \\\"me\\\", an email, or the gid of a user.\nlet\
            \ opts = { \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"created_at,is_active,is_admin,is_guest,offset,path,uri,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name\"\
            \n};\nworkspaceMembershipsApiInstance.getWorkspaceMembershipsForUser(user_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspacememberships.getWorkspaceMembershipsForUser(userGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspace_memberships_api_instance = asana.WorkspaceMembershipsApi(api_client)
            user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "created_at,is_active,is_admin,is_guest,offset,path,uri,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get workspace memberships for a user
                api_response = workspace_memberships_api_instance.get_workspace_memberships_for_user(user_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling WorkspaceMembershipsApi->get_workspace_memberships_for_user: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspace_memberships.get_workspace_memberships_for_user(user_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspacememberships->getWorkspaceMembershipsForUser($user_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspace_memberships.get_workspace_memberships_for_user(user_gid: 'user_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/user_path_gid'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /workspaces/{workspace_gid}/workspace_memberships:
    get:
      tags:
      - Workspace memberships
      summary: Get the workspace memberships for a workspace
      description: Returns the compact workspace membership records for the workspace.
      operationId: getWorkspaceMembershipsForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - created_at
            - is_active
            - is_admin
            - is_guest
            - offset
            - path
            - uri
            - user
            - user.name
            - user_task_list
            - user_task_list.name
            - user_task_list.owner
            - user_task_list.workspace
            - vacation_dates
            - vacation_dates.end_on
            - vacation_dates.start_on
            - workspace
            - workspace.name
        example:
        - created_at
        - is_active
        - is_admin
        - is_guest
        - offset
        - path
        - uri
        - user
        - user.name
        - user_task_list
        - user_task_list.name
        - user_task_list.owner
        - user_task_list.workspace
        - vacation_dates
        - vacation_dates.end_on
        - vacation_dates.start_on
        - workspace
        - workspace.name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Successfully retrieved the requested workspace's memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200151'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<JsonElement> result = client.workspacememberships.getWorkspaceMembershipsForWorkspace(workspaceGid, user)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspaceMembershipsApiInstance = new Asana.WorkspaceMembershipsApi();\n\
            let workspace_gid = \"12345\"; // String | Globally unique identifier\
            \ for the workspace or organization.\nlet opts = { \n    'user': \"me\"\
            , \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"created_at,is_active,is_admin,is_guest,offset,path,uri,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name\"\
            \n};\nworkspaceMembershipsApiInstance.getWorkspaceMembershipsForWorkspace(workspace_gid,\
            \ opts).then((result) => {\n    console.log('API called successfully.\
            \ Returned data: ' + JSON.stringify(result.data, null, 2));\n}, (error)\
            \ => {\n    console.error(error.response.body);\n});"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspacememberships.getWorkspaceMembershipsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspace_memberships_api_instance = asana.WorkspaceMembershipsApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'user': "me", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "created_at,is_active,is_admin,is_guest,offset,path,uri,user,user.name,user_task_list,user_task_list.name,user_task_list.owner,user_task_list.workspace,vacation_dates,vacation_dates.end_on,vacation_dates.start_on,workspace,workspace.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get the workspace memberships for a workspace
                api_response = workspace_memberships_api_instance.get_workspace_memberships_for_workspace(workspace_gid, opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling WorkspaceMembershipsApi->get_workspace_memberships_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspace_memberships.get_workspace_memberships_for_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspacememberships->getWorkspaceMembershipsForWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspace_memberships.get_workspace_memberships_for_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/user_query_param'
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /workspaces:
    get:
      tags:
      - Workspaces
      summary: Get multiple workspaces
      description: Returns the compact records for all workspaces visible to the authorized
        user.
      operationId: getWorkspaces
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email_domains
            - is_organization
            - name
            - offset
            - path
            - uri
        example:
        - email_domains
        - is_organization
        - name
        - offset
        - path
        - uri
        x-ballerina-name: optFields
      responses:
        "200":
          description: Return all workspaces visible to the authorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200152'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            List<Workspace> result = client.workspaces.getWorkspaces()
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspacesApiInstance = new Asana.WorkspacesApi();\nlet opts = {\
            \ \n    'limit': 50, \n    'offset': \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\
            , \n    'opt_fields': \"email_domains,is_organization,name,offset,path,uri\"\
            \n};\nworkspacesApiInstance.getWorkspaces(opts).then((result) => {\n \
            \   console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspaces.getWorkspaces({param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspaces_api_instance = asana.WorkspacesApi(api_client)
            opts = {
                'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
                'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
                'opt_fields': "email_domains,is_organization,name,offset,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get multiple workspaces
                api_response = workspaces_api_instance.get_workspaces(opts)
                for data in api_response:
                    pprint(data)
            except ApiException as e:
                print("Exception when calling WorkspacesApi->get_workspaces: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspaces.get_workspaces({'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspaces->getWorkspaces(array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspaces.get_workspaces(param: "value", param: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/pretty'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/offset'
  /workspaces/{workspace_gid}:
    get:
      tags:
      - Workspaces
      summary: Get a workspace
      description: Returns the full workspace record for a single workspace.
      operationId: getWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email_domains
            - is_organization
            - name
        example:
        - email_domains
        - is_organization
        - name
        x-ballerina-name: optFields
      responses:
        "200":
          description: Return the full workspace record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200153'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Workspace result = client.workspaces.getWorkspace(workspaceGid)
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspacesApiInstance = new Asana.WorkspacesApi();\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet opts = { \n    'opt_fields': \"email_domains,is_organization,name\"\
            \n};\nworkspacesApiInstance.getWorkspace(workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspaces.getWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspaces_api_instance = asana.WorkspacesApi(api_client)
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'opt_fields': "email_domains,is_organization,name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Get a workspace
                api_response = workspaces_api_instance.get_workspace(workspace_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WorkspacesApi->get_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspaces.get_workspace(workspace_gid, {'param': 'value', 'param': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspaces->getWorkspace($workspace_gid, array('param' => 'value', 'param' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspaces.get_workspace(workspace_gid: 'workspace_gid', param: "value", param: "value", options: {pretty: true})
    put:
      tags:
      - Workspaces
      summary: Update a workspace
      description: |-
        A specific, existing workspace can be updated by making a PUT request on the URL for that workspace. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.
        Currently the only field that can be modified for a workspace is its name.
        Returns the complete, updated workspace record.
      operationId: updateWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email_domains
            - is_organization
            - name
        example:
        - email_domains
        - is_organization
        - name
        x-ballerina-name: optFields
      requestBody:
        description: The workspace object with all updated properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacesworkspaceGidBody'
        required: true
      responses:
        "200":
          description: Update for the workspace was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200154'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            Workspace result = client.workspaces.updateWorkspace(workspaceGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspacesApiInstance = new Asana.WorkspacesApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | The workspace object with all updated properties.\nlet workspace_gid\
            \ = \"12345\"; // String | Globally unique identifier for the workspace\
            \ or organization.\nlet opts = { \n    'opt_fields': \"email_domains,is_organization,name\"\
            \n};\nworkspacesApiInstance.updateWorkspace(body, workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspaces.updateWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspaces_api_instance = asana.WorkspacesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The workspace object with all updated properties.
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'opt_fields': "email_domains,is_organization,name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Update a workspace
                api_response = workspaces_api_instance.update_workspace(body, workspace_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WorkspacesApi->update_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspaces.update_workspace(workspace_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspaces->updateWorkspace($workspace_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspaces.update_workspace(workspace_gid: 'workspace_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/addUser:
    post:
      tags:
      - Workspaces
      summary: Add a user to a workspace or organization
      description: |-
        Add a user to a workspace or organization.
        The user can be referenced by their globally unique user ID or their email address. Returns the full user record for the invited user.
      operationId: addUserForWorkspace
      parameters:
      - name: opt_fields
        in: query
        description: "This endpoint returns a compact resource, which excludes some\
          \ properties by default. To include those optional properties, set this\
          \ query parameter to a comma-separated list of the properties you wish to\
          \ include"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - name
            - photo
            - photo.image_1024x1024
            - photo.image_128x128
            - photo.image_21x21
            - photo.image_27x27
            - photo.image_36x36
            - photo.image_60x60
        example:
        - email
        - name
        - photo
        - photo.image_1024x1024
        - photo.image_128x128
        - photo.image_21x21
        - photo.image_27x27
        - photo.image_36x36
        - photo.image_60x60
        x-ballerina-name: optFields
      requestBody:
        description: The user to add to the workspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGidAddUserBody'
        required: true
      responses:
        "200":
          description: The user was added successfully to the workspace or organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200155'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.workspaces.addUserForWorkspace(workspaceGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: "const Asana = require('asana');\n\nlet client = Asana.ApiClient.instance;\n\
            let token = client.authentications['token'];\ntoken.accessToken = '<YOUR_ACCESS_TOKEN>';\n\
            \nlet workspacesApiInstance = new Asana.WorkspacesApi();\nlet body = {\"\
            data\": {\"<PARAM_1>\": \"<VALUE_1>\", \"<PARAM_2>\": \"<VALUE_2>\",}};\
            \ // Object | The user to add to the workspace.\nlet workspace_gid = \"\
            12345\"; // String | Globally unique identifier for the workspace or organization.\n\
            let opts = { \n    'opt_fields': \"email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60\"\
            \n};\nworkspacesApiInstance.addUserForWorkspace(body, workspace_gid, opts).then((result)\
            \ => {\n    console.log('API called successfully. Returned data: ' + JSON.stringify(result.data,\
            \ null, 2));\n}, (error) => {\n    console.error(error.response.body);\n\
            });"
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspaces.addUserForWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspaces_api_instance = asana.WorkspacesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The user to add to the workspace.
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
            opts = {
                'opt_fields': "email,name,photo,photo.image_1024x1024,photo.image_128x128,photo.image_21x21,photo.image_27x27,photo.image_36x36,photo.image_60x60", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
            }

            try:
                # Add a user to a workspace or organization
                api_response = workspaces_api_instance.add_user_for_workspace(body, workspace_gid, opts)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WorkspacesApi->add_user_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspaces.add_user_for_workspace(workspace_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspaces->addUserForWorkspace($workspace_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspaces.add_user_for_workspace(workspace_gid: 'workspace_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
  /workspaces/{workspace_gid}/removeUser:
    post:
      tags:
      - Workspaces
      summary: Remove a user from a workspace or organization
      description: |-
        Remove a user from a workspace or organization.
        The user making this call must be an admin in the workspace. The user can be referenced by their globally unique user ID or their email address.
        Returns an empty data record.
      operationId: removeUserForWorkspace
      requestBody:
        description: The user to remove from the workspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGidRemoveUserBody'
        required: true
      responses:
        "204":
          description: The user was removed successfully to the workspace or organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2041'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      x-readme:
        code-samples:
        - language: java
          install: <dependency><groupId>com.asana</groupId><artifactId>asana</artifactId><version>1.0.0</version></dependency>
          code: |-
            import com.asana.Client;

            Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");

            JsonElement result = client.workspaces.removeUserForWorkspace(workspaceGid)
                .data("field", "value")
                .data("field", "value")
                .option("pretty", true)
                .execute();
        - language: node
          install: npm install asana
          code: |-
            const Asana = require('asana');

            let client = Asana.ApiClient.instance;
            let token = client.authentications['token'];
            token.accessToken = '<YOUR_ACCESS_TOKEN>';

            let workspacesApiInstance = new Asana.WorkspacesApi();
            let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The user to remove from the workspace.
            let workspace_gid = "12345"; // String | Globally unique identifier for the workspace or organization.

            workspacesApiInstance.removeUserForWorkspace(body, workspace_gid).then((result) => {
                console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
            }, (error) => {
                console.error(error.response.body);
            });
          name: node-sdk-v3
        - language: node
          install: npm install asana@1.0.2
          code: |-
            const asana = require('asana');

            const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');

            client.workspaces.removeUserForWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
                .then((result) => {
                    console.log(result);
                });
          name: node-sdk-v1
        - language: python
          install: pip install asana
          code: |-
            import asana
            from asana.rest import ApiException
            from pprint import pprint

            configuration = asana.Configuration()
            configuration.access_token = '<YOUR_ACCESS_TOKEN>'
            api_client = asana.ApiClient(configuration)

            # create an instance of the API class
            workspaces_api_instance = asana.WorkspacesApi(api_client)
            body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The user to remove from the workspace.
            workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.


            try:
                # Remove a user from a workspace or organization
                api_response = workspaces_api_instance.remove_user_for_workspace(body, workspace_gid)
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling WorkspacesApi->remove_user_for_workspace: %s\n" % e)
          name: python-sdk-v5
        - language: python
          install: pip install asana==3.2.2
          code: |-
            import asana

            client = asana.Client.access_token('PERSONAL_ACCESS_TOKEN')

            result = client.workspaces.remove_user_for_workspace(workspace_gid, {'field': 'value', 'field': 'value'}, opt_pretty=True)
          name: python-sdk-v3
        - language: php
          install: composer require asana/asana
          code: |-
            <?php
            require 'vendor/autoload.php';

            $client = Asana\Client::accessToken('PERSONAL_ACCESS_TOKEN');

            $result = $client->workspaces->removeUserForWorkspace($workspace_gid, array('field' => 'value', 'field' => 'value'), array('opt_pretty' => 'true'))
        - language: ruby
          install: gem install asana
          code: |-
            require 'asana'

            client = Asana::Client.new do |c|
                c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
            end

            result = client.workspaces.remove_user_for_workspace(workspace_gid: 'workspace_gid', field: "value", field: "value", options: {pretty: true})
    parameters:
    - $ref: '#/components/parameters/workspace_path_gid'
    - $ref: '#/components/parameters/pretty'
components:
  schemas:
    GoalRelationshipCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/GoalRelationshipCompactAllOf2'
    InlineResponse200113:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    ProjectStatusRequest:
      $ref: '#/components/schemas/ProjectStatusBase'
    InlineResponse200112:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200111:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    TeamRequest:
      allOf:
      - $ref: '#/components/schemas/TeamBase'
      - $ref: '#/components/schemas/TeamRequestAllOf2'
    InlineResponse200110:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200117:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200116:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200115:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200114:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    GoalGidAddSupportingRelationshipBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalAddSupportingRelationshipRequest'
    InlineResponse200109:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse200108:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    InlineResponse200107:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    PortfolioResponse:
      allOf:
      - $ref: '#/components/schemas/PortfolioBase'
      - $ref: '#/components/schemas/PortfolioResponseAllOf2'
    ProjectBaseAllOf2:
      type: object
      properties:
        start_on:
          type: string
          description: "The day on which work for this project begins, or null if\
            \ the project has no start date. This takes a date with `YYYY-MM-DD` format.\
            \ *Note: `due_on` or `due_at` must be present in the request when setting\
            \ or unsetting the `start_on` parameter. Additionally, `start_on` and\
            \ `due_on` cannot be the same date.*"
          format: date
          nullable: true
          example: 2019-09-14
          x-ballerina-name: startOn
        custom_field_settings:
          type: array
          description: Array of Custom Field Settings (in compact form)
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldSettingResponse'
          x-ballerina-name: customFieldSettings
        notes:
          type: string
          description: "Free-form textual information associated with the project\
            \ (ie., its description)"
          example: These are things we need to purchase.
        color:
          type: string
          description: Color of the project
          nullable: true
          example: light-green
          enum:
          - dark-pink
          - dark-green
          - dark-blue
          - dark-red
          - dark-teal
          - dark-brown
          - dark-orange
          - dark-purple
          - dark-warm-gray
          - light-pink
          - light-green
          - light-blue
          - light-red
          - light-teal
          - light-brown
          - light-orange
          - light-purple
          - light-warm-gray
          - none
          - null
        default_access_level:
          type: string
          description: The default access for users or teams who join or are added
            as members to the project
          example: admin
          enum:
          - admin
          - editor
          - commenter
          - viewer
          x-ballerina-name: defaultAccessLevel
        due_date:
          type: string
          description: "*Deprecated: new integrations should prefer the `due_on` field.*"
          format: date
          nullable: true
          example: 2019-09-15
          x-ballerina-name: dueDate
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        due_on:
          type: string
          description: The day on which this project is due. This takes a date with
            format YYYY-MM-DD
          format: date
          nullable: true
          example: 2019-09-15
          x-ballerina-name: dueOn
        privacy_setting:
          type: string
          description: "The privacy setting of the project. *Note: Administrators\
            \ in your organization may restrict the values of `privacy_setting`.*"
          example: public_to_workspace
          enum:
          - public_to_workspace
          - private_to_team
          - private
          x-ballerina-name: privacySetting
        minimum_access_level_for_sharing:
          type: string
          description: The minimum access level needed for project members to share
            the project and manage project memberships
          example: admin
          enum:
          - admin
          - editor
          x-ballerina-name: minimumAccessLevelForSharing
        archived:
          type: boolean
          description: "True if the project is archived, false if not. Archived projects\
            \ do not show in the UI by default and may be treated differently for\
            \ queries"
          example: false
        public:
          type: boolean
          description: '*Deprecated:* new integrations use `privacy_setting` instead'
          example: false
          deprecated: true
        html_notes:
          type: string
          description: "[Opt In](/docs/inputoutput-options). The notes of the project\
            \ with formatting as HTML"
          example: <body>These are things we need to purchase.</body>
          x-ballerina-name: htmlNotes
        current_status_update:
          allOf:
          - $ref: '#/components/schemas/StatusUpdateCompact'
          - type: object
            description: The latest `status_update` posted to this project.
            nullable: true
          x-ballerina-name: currentStatusUpdate
        members:
          type: array
          description: Array of users who are members of this project
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
        minimum_access_level_for_customization:
          type: string
          description: The minimum access level needed for project members to modify
            this project's workflow and appearance
          example: admin
          enum:
          - admin
          - editor
          x-ballerina-name: minimumAccessLevelForCustomization
        current_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusResponse'
          - type: object
            description: "*Deprecated: new integrations should prefer the `current_status_update`\
              \ resource.*"
            nullable: true
          x-ballerina-name: currentStatus
        modified_at:
          type: string
          description: |-
            The time at which this project was last modified.
            *Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: modifiedAt
        default_view:
          type: string
          description: "The default view (list, board, calendar, or timeline) of a\
            \ project"
          example: calendar
          enum:
          - list
          - board
          - calendar
          - timeline
          x-ballerina-name: defaultView
    TaskGidAddDependenciesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ModifyDependenciesRequest'
    StoryBase:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/StoryBaseAllOf2'
    WebhookRequest:
      required:
      - resource
      - target
      type: object
      properties:
        resource:
          type: string
          description: "A resource ID to subscribe to. Many Asana resources are valid\
            \ to create webhooks on, but higher-level resources require filters"
          example: "12345"
        filters:
          type: array
          description: An array of WebhookFilter objects to specify a whitelist of
            filters to apply to events from this webhook. If a webhook event passes
            any of the filters the event will be delivered; otherwise no event will
            be sent to the receiving server
          items:
            $ref: '#/components/schemas/WebhookRequestFilters'
        target:
          type: string
          description: The URL to receive the HTTP POST. The full URL will be used
            to deliver events from this webhook (including parameters) which allows
            encoding of application-specific state when the webhook is created
          format: uri
          example: https://example.com/receive-webhook/7654?app_specific_param=app_specific_value
    BatchRequest:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/BatchRequestAction'
      description: A request object for use in a batch request
    RuleTriggerRequest:
      required:
      - action_data
      - resource
      type: object
      properties:
        resource:
          type: string
          description: "The ID of the resource. For the duration of the beta, this\
            \ resource is always a task, and this task must exist in the project in\
            \ which the rule is created"
          example: "12345"
        action_data:
          type: object
          additionalProperties: true
          description: The dynamic keys and values of the request. These fields are
            intended to be used in the action for the rule associated with this trigger
          example:
            jira_ticket_name: Test
            jira_ticket_id: "123"
          x-ballerina-name: actionData
    GoalGidRemoveSupportingRelationshipBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRemoveSupportingRelationshipRequest'
    CustomFieldSettingCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/CustomFieldSettingCompactAllOf2'
    TagResponse:
      allOf:
      - $ref: '#/components/schemas/TagBase'
      - $ref: '#/components/schemas/TagResponseAllOf2'
    ProjectBriefRequestAllOf2:
      type: object
      properties:
        text:
          type: string
          description: "The plain text of the project brief. When writing to a project\
            \ brief, you can specify either `html_text` (preferred) or `text`, but\
            \ not both"
          example: This is a project brief.
    InlineResponse200102:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    InlineResponse200101:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    WebhookResponse:
      allOf:
      - $ref: '#/components/schemas/WebhookCompact'
      - $ref: '#/components/schemas/WebhookResponseAllOf2'
    InlineResponse200100:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    JobCompactAllOf2:
      type: object
      properties:
        new_project_template:
          allOf:
          - $ref: '#/components/schemas/ProjectTemplateCompact'
          x-ballerina-name: newProjectTemplate
        new_project:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          x-ballerina-name: newProject
        new_task:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          - type: object
            nullable: true
          x-ballerina-name: newTask
        resource_subtype:
          type: string
          description: "The subtype of this resource. Different subtypes retain many\
            \ of the same fields and behavior, but may render differently in Asana\
            \ or represent resources with different semantic meaning"
          readOnly: true
          example: duplicate_task
          x-ballerina-name: resourceSubtype
        status:
          type: string
          description: "The current status of this job. The value is one of: `not_started`,\
            \ `in_progress`, `succeeded`, or `failed`"
          readOnly: true
          example: in_progress
          enum:
          - not_started
          - in_progress
          - succeeded
          - failed
      description: A *job* is an object representing a process that handles asynchronous
        work
      x-docs-overrides:
        properties.resource_type.example: job
    InlineResponse200106:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    InlineResponse200105:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    AddCustomFieldSettingRequest:
      required:
      - custom_field
      type: object
      properties:
        custom_field:
          type: string
          description: The custom field to associate with this container
          example: "14916"
          x-ballerina-name: customField
        is_important:
          type: boolean
          description: "Whether this field should be considered important to this\
            \ container (for instance, to display in the list view of items in the\
            \ container)"
          example: true
          x-ballerina-name: isImportant
        insert_before:
          type: string
          description: "A gid of a Custom Field Setting on this container, before\
            \ which the new Custom Field Setting will be added.  `insert_before` and\
            \ `insert_after` parameters cannot both be specified"
          example: "1331"
          x-ballerina-name: insertBefore
        insert_after:
          type: string
          description: "A gid of a Custom Field Setting on this container, after which\
            \ the new Custom Field Setting will be added.  `insert_before` and `insert_after`\
            \ parameters cannot both be specified"
          example: "1331"
          x-ballerina-name: insertAfter
    InlineResponse200104:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    InlineResponse200103:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    TimePeriodCompactAllOf2:
      type: object
      properties:
        start_on:
          type: string
          description: The localized start date of the time period in `YYYY-MM-DD`
            format
          example: 2019-09-13
          x-ballerina-name: startOn
        period:
          type: string
          description: "The cadence and index of the time period. The value is one\
            \ of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`"
          example: Q1
          enum:
          - FY
          - H1
          - H2
          - Q1
          - Q2
          - Q3
          - Q4
        end_on:
          type: string
          description: The localized end date of the time period in `YYYY-MM-DD` format
          example: 2019-09-14
          x-ballerina-name: endOn
        display_name:
          type: string
          description: A string representing the cadence code and the fiscal year
          example: Q1 FY22
          x-ballerina-name: displayName
      x-docs-overrides:
        properties.resource_type.example: time_period
    ProjectMembershipCompactResponse:
      properties:
        resource_type:
          type: string
          description: The base type of this resource.
          example: membership
      allOf:
      - $ref: '#/components/schemas/ProjectMembershipCompact'
      - type: object
        properties:
          resource_type:
            type: string
            description: The base type of this resource
            example: membership
            x-ballerina-name: resourceType
          resource_subtype:
            type: string
            description: Type of the membership
            example: project_membership
            x-ballerina-name: resourceSubtype
    PortfolioGidRemoveMembersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RemoveMembersRequest'
    CustomFieldCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/CustomFieldCompactAllOf2'
    WorkspaceResponse:
      allOf:
      - $ref: '#/components/schemas/WorkspaceBase'
      - $ref: '#/components/schemas/WorkspaceResponseAllOf2'
    InlineResponse2009:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldResponse'
    InlineResponse2008:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldResponse'
    InlineResponse200131:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TimePeriodResponse'
    GoalGidSetMetricBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalMetricRequest'
    InlineResponse200130:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamMembershipResponse'
    InlineResponse200135:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TimeTrackingEntryBase'
    InlineResponse200134:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TimeTrackingEntryBase'
    SectionResponse:
      allOf:
      - $ref: '#/components/schemas/SectionBase'
      - $ref: '#/components/schemas/SectionResponseAllOf2'
    InlineResponse200133:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TimeTrackingEntryCompact'
    InlineResponse200132:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TimePeriodCompact'
    InlineResponse200139:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserTaskListResponse'
    WorkspaceGidTagsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagCreateTagForWorkspaceRequest'
    InlineResponse200138:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserTaskListResponse'
    TaskRemoveProjectRequest:
      required:
      - project
      type: object
      properties:
        project:
          type: string
          description: The project to remove the task from
          example: "13579"
    InlineResponse200137:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AsanaNamedResource'
      description: "A generic list of objects, such as those returned by the typeahead\
        \ search endpoint"
    AttachmentCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/AttachmentCompactAllOf2'
    InlineResponse200136:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    ProjectCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/ProjectCompactAllOf2'
    InlineResponse200129:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamCompact'
    ProjectGidProjectStatusesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectStatusRequest'
    InlineResponse2012:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    GoalResponseAllOf2:
      type: object
      properties:
        owner:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - type: object
            nullable: true
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
        followers:
          type: array
          description: Array of users who are members of this goal
          items:
            $ref: '#/components/schemas/UserCompact'
        metric:
          allOf:
          - $ref: '#/components/schemas/GoalMetricBase'
          - type: object
            properties:
              can_manage:
                type: boolean
                description: "*Conditional*. Only relevant for `progress_source` of\
                  \ type `external`. This boolean indicates whether the requester\
                  \ has the ability to update the current value of this metric. This\
                  \ returns `true` if the external metric was created by the requester,\
                  \ `false` otherwise."
                readOnly: true
                example: true
            nullable: true
        current_status_update:
          description: The latest `status_update` posted to this goal
          nullable: true
          allOf:
          - $ref: '#/components/schemas/StatusUpdateCompact'
          x-ballerina-name: currentStatusUpdate
        num_likes:
          type: integer
          description: The number of users who have liked this goal
          readOnly: true
          example: 5
          x-ballerina-name: numLikes
        team:
          allOf:
          - $ref: '#/components/schemas/TeamCompact'
          - type: object
            description: '*Conditional*. This property is only present when the `workspace`
              provided is an organization.'
            nullable: true
        time_period:
          allOf:
          - $ref: '#/components/schemas/TimePeriodCompact'
          - type: object
            nullable: true
          x-ballerina-name: timePeriod
        likes:
          type: array
          description: Array of likes for users who have liked this goal
          readOnly: true
          items:
            $ref: '#/components/schemas/Like'
        status:
          type: string
          description: |-
            The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect "On Track", "At Risk", and "Off Track", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`.
            *Note* you can only write to this property if `metric` is set
          nullable: true
          readOnly: true
          example: green
    WebhookUpdateRequestFilters:
      description: A set of filters to specify a whitelist for what types of events
        will be delivered
      allOf:
      - $ref: '#/components/schemas/WebhookFilter'
      - $ref: '#/components/schemas/FiltersAllOf22'
    InlineResponse2011:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOption'
    InlineResponse2014:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationExportResponse'
    ProjectGidRemoveFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RemoveFollowersRequest'
    FiltersAllOf22:
      type: object
    InlineResponse2013:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MembershipResponse'
    FiltersAllOf21:
      type: object
    InlineResponse2016:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectBriefResponse'
    ProjectGidAddCustomFieldSettingBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddCustomFieldSettingRequest'
    InlineResponse2015:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioResponse'
    ProjectTemplateBaseAllOf2:
      type: object
      properties:
        owner:
          description: "The current owner of the project template, may be null"
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - type: object
            nullable: true
        public:
          type: boolean
          description: True if the project template is public to its team
          example: false
        color:
          type: string
          description: Color of the project template
          nullable: true
          example: light-green
          enum:
          - dark-pink
          - dark-green
          - dark-blue
          - dark-red
          - dark-teal
          - dark-brown
          - dark-orange
          - dark-purple
          - dark-warm-gray
          - light-pink
          - light-green
          - light-blue
          - light-red
          - light-teal
          - light-brown
          - light-orange
          - light-purple
          - light-warm-gray
          - null
        description:
          type: string
          description: Free-form textual information associated with the project template
          example: These are things we need to pack for a trip.
        team:
          allOf:
          - $ref: '#/components/schemas/TeamCompact'
        requested_dates:
          type: array
          description: Array of date variables in this project template. Calendar
            dates must be provided for these variables when instantiating a project
          readOnly: true
          items:
            $ref: '#/components/schemas/DateVariableCompact'
          x-ballerina-name: requestedDates
        html_description:
          type: string
          description: The description of the project template with formatting as
            HTML
          example: <body>These are things we need to pack for a trip.</body>
          x-ballerina-name: htmlDescription
        requested_roles:
          type: array
          description: Array of template roles in this project template. User Ids
            can be provided for these variables when instantiating a project to assign
            template tasks to the user
          items:
            $ref: '#/components/schemas/TemplateRole'
          x-ballerina-name: requestedRoles
    InlineResponse2018:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    InlineResponse2017:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectStatusResponse'
    GoalCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/GoalCompactAllOf2'
    InlineResponse200120:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    TeamMembershipCompactAllOf2:
      type: object
      properties:
        is_admin:
          type: boolean
          description: Describes if the user is a team admin
          example: false
          x-ballerina-name: isAdmin
        is_guest:
          type: boolean
          description: Describes if the user is a guest in the team
          example: false
          x-ballerina-name: isGuest
        team:
          $ref: '#/components/schemas/TeamCompact'
        is_limited_access:
          type: boolean
          description: Describes if the user has limited access to the team
          readOnly: true
          example: false
          x-ballerina-name: isLimitedAccess
        user:
          $ref: '#/components/schemas/UserCompact'
      description: This object represents a user's connection to a team
      x-docs-overrides:
        properties.resource_type.example: team_membership
    InlineResponse200124:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembershipCompact'
    InlineResponse200123:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembershipCompact'
    InlineResponse412:
      type: object
      properties:
        sync:
          type: string
          description: A sync token to be used with the next call to the /events endpoint
          readOnly: true
          example: de4774f6915eae04714ca93bb2f5ee81
        errors:
          type: array
          items:
            $ref: '#/components/schemas/InlineResponse412Errors'
    InlineResponse200122:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamMembershipResponse'
    TaskRequest:
      allOf:
      - $ref: '#/components/schemas/TaskBase'
      - $ref: '#/components/schemas/TaskRequestAllOf2'
    UserTaskListRequest:
      $ref: '#/components/schemas/UserTaskListBase'
    InlineResponse200121:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    InlineResponse200128:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamCompact'
    CustomFieldCompactDateValue:
      type: object
      properties:
        date:
          type: string
          description: A string representing the date in YYYY-MM-DD format
          example: 2024-08-23
        date_time:
          type: string
          description: "A string representing the date in ISO 8601 format. If no time\
            \ value is selected, the value of `date-time` will be `null`"
          example: 2024-08-23T22:00:00.000Z
          x-ballerina-name: dateTime
      description: "*Conditional*. Only relevant for custom fields of type `date`.\
        \ This object reflects the chosen date (and optionally, time) value of a `date`\
        \ custom field. If no date is selected, the value of `date_value` will be\
        \ `null`"
      nullable: true
    InlineResponse200127:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamResponse'
    InlineResponse200126:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamResponse'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      description: |-
        Sadly, sometimes requests to the API are not successful. Failures can
        occur for a wide range of reasons. In all cases, the API should return
        an HTTP Status Code that indicates the nature of the failure,
        with a response body in JSON format containing additional information.


        In the event of a server error the response body will contain an error
        phrase. These phrases are automatically generated using the
        [node-asana-phrase
        library](https://github.com/Asana/node-asana-phrase) and can be used by
        Asana support to quickly look up the incident that caused the server
        error
    InlineResponse200125:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembershipCompact'
    TimeTrackingEntryBase:
      allOf:
      - $ref: '#/components/schemas/TimeTrackingEntryCompact'
      - $ref: '#/components/schemas/TimeTrackingEntryBaseAllOf2'
    InlineResponse200119:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    TeamCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the team
          example: Marketing
      description: A *team* is used to group related projects and people together
        within an organization. Each project in an organization is associated with
        a team
      x-docs-overrides:
        properties.resource_type.example: team
    InlineResponse200118:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    InlineResponse2001:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse2003:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AttachmentResponse'
    InlineResponse2002:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentCompact'
    MembershipUpdateRequest:
      type: object
      properties:
        access_level:
          type: string
          description: The role given to the member. Can be `editor` or `commenter`
          example: editor
          x-ballerina-name: accessLevel
    InlineResponse2005:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BatchResponse'
    GoalRelationshipCompactAllOf2:
      type: object
      properties:
        supporting_resource:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          - type: object
            description: "The supporting resource that supports the goal. This can\
              \ be either a project, task, portfolio, or goal."
            readOnly: true
          x-ballerina-name: supportingResource
        contribution_weight:
          type: number
          description: The weight that the supporting resource's progress contributes
            to the supported goal's progress. This can only be 0 or 1
          example: 1
          x-ballerina-name: contributionWeight
        resource_subtype:
          type: string
          description: "The subtype of this resource. Different subtypes retain many\
            \ of the same fields and behavior, but may render differently in Asana\
            \ or represent resources with different semantic meaning"
          readOnly: true
          example: subgoal
          enum:
          - subgoal
          - supporting_work
          x-ballerina-name: resourceSubtype
      description: "A *goal relationship* is an object representing the relationship\
        \ between a goal and another goal, a project, a task, or a portfolio"
      x-docs-overrides:
        properties.resource_type.example: goal_relationship
    InlineResponse2004:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEvent'
    InlineResponse2007:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldSettingResponse'
    CustomFieldsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldRequest'
    InlineResponse2006:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldSettingResponse'
    OrganizationExportBase:
      $ref: '#/components/schemas/OrganizationExportCompact'
    AsanaNamedResource:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/AsanaNamedResourceAllOf2'
    WebhookUpdateRequest:
      type: object
      properties:
        filters:
          type: array
          description: An array of WebhookFilter objects to specify a whitelist of
            filters to apply to events from this webhook. If a webhook event passes
            any of the filters the event will be delivered; otherwise no event will
            be sent to the receiving server
          items:
            $ref: '#/components/schemas/WebhookUpdateRequestFilters'
    BatchRequestActionOptions:
      type: object
      properties:
        offset:
          type: integer
          description: Pagination offset for the request
        limit:
          type: integer
          description: Pagination limit for the request
          example: 50
        fields:
          type: array
          description: The fields to retrieve in the request
          example:
          - name
          - gid
          - notes
          - completed
          items:
            type: string
      description: "Pagination (`limit` and `offset`) and output options (`fields`\
        \ or `expand`) for the action. “Pretty” JSON output is not an available option\
        \ on individual actions; if you want pretty output, specify that option on\
        \ the parent request"
      example: "{\"limit\":3,\"fields\":[\"name\",\"notes\",\"completed\"]}"
    ProjectsprojectGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectUpdateRequest'
    TimeTrackingEntryCompactAllOf2:
      type: object
      properties:
        entered_on:
          type: string
          description: The day that this entry is logged on
          format: date
          example: 2015-03-14
          x-ballerina-name: enteredOn
        duration_minutes:
          type: integer
          description: Time in minutes tracked by the entry
          example: 12
          x-ballerina-name: durationMinutes
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
    InlineResponse20061:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompact'
    InlineResponse20060:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTemplateCompact'
    InlineResponse20063:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20062:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20065:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompact'
    InlineResponse20064:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    TaskGidRemoveTagBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRemoveTagRequest'
    SectionCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the section (i.e. the text displayed as the section
            header)
          example: Next Actions
      description: A *section* is a subdivision of a project that groups tasks together.
        It can either be a header above a list of tasks in a list view or a column
        in a board view of a project
      x-docs-overrides:
        properties.resource_type.example: section
    PortfolioAddItemRequest:
      required:
      - item
      type: object
      properties:
        insert_before:
          type: string
          description: An id of an item in this portfolio. The new item will be added
            before the one specified here. `insert_before` and `insert_after` parameters
            cannot both be specified
          example: "1331"
          x-ballerina-name: insertBefore
        item:
          type: string
          description: The item to add to the portfolio
          example: "1331"
        insert_after:
          type: string
          description: An id of an item in this portfolio. The new item will be added
            after the one specified here. `insert_before` and `insert_after` parameters
            cannot both be specified
          example: "1331"
          x-ballerina-name: insertAfter
    InlineResponse20067:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompact'
    GoalBaseAllOf2:
      type: object
      properties:
        start_on:
          type: string
          description: "The day on which work for this goal begins, or null if the\
            \ goal has no start date. This takes a date with `YYYY-MM-DD` format,\
            \ and cannot be set unless there is an accompanying due date"
          nullable: true
          example: 2019-09-14
          x-ballerina-name: startOn
        notes:
          type: string
          description: Free-form textual information associated with the goal (i.e.
            its description)
          example: Start building brand awareness.
        html_notes:
          type: string
          description: The notes of the goal with formatting as HTML
          example: <body>Start building brand awareness.</body>
          x-ballerina-name: htmlNotes
        name:
          type: string
          description: The name of the goal
          example: Grow web traffic by 30%
        due_on:
          type: string
          description: The localized day on which this goal is due. This takes a date
            with format `YYYY-MM-DD`
          nullable: true
          example: 2019-09-15
          x-ballerina-name: dueOn
        is_workspace_level:
          type: boolean
          description: "*Conditional*. This property is only present when the `workspace`\
            \ provided is an organization. Whether the goal belongs to the `workspace`\
            \ (and is listed as part of the workspace’s goals) or not. If it isn’\
            t a workspace-level goal, it is a team-level goal, and is associated with\
            \ the goal’s team"
          example: true
          x-ballerina-name: isWorkspaceLevel
        liked:
          type: boolean
          description: "True if the goal is liked by the authorized user, false if\
            \ not"
          example: false
      x-docs-overrides:
        properties.resource_type.example: goal
    InlineResponse20066:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompact'
    InlineResponse20069:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20068:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldSettingResponse'
    FiltersAllOf2:
      type: object
    GoalGidAddFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskAddFollowersRequest'
    RemoveMembersRequest:
      required:
      - members
      type: object
      properties:
        members:
          type: string
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example: "521621,621373"
    TimeTrackingEntriestimeTrackingEntryGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UpdateTimeTrackingEntryRequest'
    StatusUpdatesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatusUpdateRequest'
    ProjectUpdateRequestAllOf2:
      type: object
      properties:
        owner:
          type: string
          description: "The current owner of the project, may be null"
          nullable: true
          example: "12345"
        followers:
          type: string
          description: '*Create-only*. Comma separated string of users. Followers
            are a subset of members who have opted in to receive "tasks added" notifications
            for a project'
          example: "12345,23456"
        custom_fields:
          type: object
          additionalProperties:
            type: string
            description: "\"{custom_field_gid}\" => Value (can be text, a number,\
              \ etc.). For date, use format \"YYYY-MM-DD\" (e.g., 2019-09-15). For\
              \ date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."
          description: "An object where each key is the GID of a custom field and\
            \ its corresponding value is either an enum GID, string, number, or object\
            \ (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide)\
            \ for details on creating and updating custom field values"
          example:
            "5678904321": On Hold
            "4578152156": Not Started
          x-ballerina-name: customFields
        team:
          type: string
          description: The team that this project is shared with
          example: "12345"
    TaskAddFollowersRequest:
      required:
      - followers
      type: object
      properties:
        followers:
          type: array
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example:
          - "13579"
          - "321654"
          items:
            type: string
    InlineResponse20070:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskCountResponse'
    InlineResponse20072:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20071:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20074:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20073:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    GoalMetricBase:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/GoalMetricBaseAllOf2'
    InlineResponse20076:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionResponse'
    InlineResponse20075:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RuleTriggerResponse'
    SectionssectionGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionRequest'
    InlineResponse20078:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20077:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionResponse'
    ProjectStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ProjectStatusBase'
      - $ref: '#/components/schemas/ProjectStatusResponseAllOf2'
    InlineResponse20079:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/SectionCompact'
    StatusUpdateResponseAllOf2:
      type: object
      properties:
        parent:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          - type: object
            description: "The parent of the status update. This can be a project,\
              \ goal or portfolio, and indicates that this status was sent on that\
              \ object."
        author:
          $ref: '#/components/schemas/UserCompact'
        hearts:
          type: array
          description: '*Deprecated - please use likes instead* Array of likes for
            users who have hearted this status'
          readOnly: true
          items:
            $ref: '#/components/schemas/Like'
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        hearted:
          type: boolean
          description: "*Deprecated - please use liked instead* True if the status\
            \ is hearted by the authorized user, false if not"
          readOnly: true
          example: true
        num_likes:
          type: integer
          description: The number of users who have liked this status
          readOnly: true
          example: 5
          x-ballerina-name: numLikes
        modified_at:
          type: string
          description: |-
            The time at which this project status was last modified.
            *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: modifiedAt
        num_hearts:
          type: integer
          description: '*Deprecated - please use likes instead* The number of users
            who have hearted this status'
          readOnly: true
          example: 5
          x-ballerina-name: numHearts
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
        liked:
          type: boolean
          description: "True if the status is liked by the authorized user, false\
            \ if not"
          example: true
        likes:
          type: array
          description: Array of likes for users who have liked this status
          readOnly: true
          items:
            $ref: '#/components/schemas/Like'
    CustomFieldCompactAllOf2:
      type: object
      properties:
        display_value:
          type: string
          description: A string representation for the value of the custom field.
            Integrations that don't require the underlying type should use this field
            to read values. Using this field will future-proof an app against new
            custom field types
          nullable: true
          readOnly: true
          example: blue
          x-ballerina-name: displayValue
        number_value:
          type: number
          description: '*Conditional*. This number is the value of a `number` custom
            field'
          nullable: true
          example: 5.2
          x-ballerina-name: numberValue
        date_value:
          allOf:
          - $ref: '#/components/schemas/CustomFieldCompactDateValue'
          x-ballerina-name: dateValue
        enum_options:
          type: array
          description: "*Conditional*. Only relevant for custom fields of type `enum`.\
            \ This array specifies the possible values which an `enum` custom field\
            \ can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield)"
          items:
            $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: enumOptions
        multi_enum_values:
          type: array
          description: '*Conditional*. Only relevant for custom fields of type `multi_enum`.
            This object is the chosen values of a `multi_enum` custom field'
          items:
            $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: multiEnumValues
        enum_value:
          allOf:
          - $ref: '#/components/schemas/EnumOption'
          - type: object
            description: '*Conditional*. Only relevant for custom fields of type `enum`.
              This object is the chosen value of an `enum` custom field.'
            nullable: true
          x-ballerina-name: enumValue
        type:
          type: string
          description: |
            *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values
          readOnly: true
          enum:
          - text
          - enum
          - multi_enum
          - number
          - date
          - people
        resource_subtype:
          type: string
          description: |
            The type of the custom field. Must be one of the given values
          readOnly: true
          example: text
          enum:
          - text
          - enum
          - multi_enum
          - number
          - date
          - people
          x-ballerina-name: resourceSubtype
        enabled:
          type: boolean
          description: '*Conditional*. Determines if the custom field is enabled or
            not'
          readOnly: true
          example: true
        text_value:
          type: string
          description: '*Conditional*. This string is the value of a `text` custom
            field'
          nullable: true
          example: Some Value
          x-ballerina-name: textValue
        representation_type:
          type: string
          description: This field tells the type of the custom field
          readOnly: true
          example: number
          enum:
          - text
          - enum
          - multi_enum
          - number
          - date
          - people
          - formula
          - custom_id
          x-ballerina-name: representationType
        name:
          type: string
          description: The name of the custom field
          example: Status
        is_formula_field:
          type: boolean
          description: '*Conditional*. This flag describes whether a custom field
            is a formula custom field'
          example: false
          x-ballerina-name: isFormulaField
        id_prefix:
          type: string
          description: This field is the unique custom ID string for the custom field
          nullable: true
          example: ID
          x-ballerina-name: idPrefix
      description: |-
        Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.

        Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`
      x-docs-overrides:
        properties.resource_type.example: custom_field
    SectionCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/SectionCompactAllOf2'
    ProjectBriefBaseAllOf2:
      type: object
      properties:
        html_text:
          type: string
          description: HTML formatted text for the project brief
          example: <body>This is a <strong>project brief</strong>.</body>
          x-ballerina-name: htmlText
        title:
          type: string
          description: The title of the project brief
          example: Stuff to buy — Project Brief
    TaskRequestAllOf2:
      type: object
      properties:
        parent:
          type: string
          description: Gid of a task
          nullable: true
          readOnly: false
          example: "12345"
          x-env-variable: true
        workspace:
          type: string
          description: Gid of a workspace
          readOnly: false
          example: "12345"
          x-env-variable: true
        followers:
          type: array
          description: "*Create-Only* An array of strings identifying users. These\
            \ can either be the string \"me\", an email, or the gid of a user. In\
            \ order to change followers on an existing task use `addFollowers` and\
            \ `removeFollowers`"
          example:
          - "12345"
          items:
            type: string
            description: Gid of a user.
        projects:
          type: array
          description: '*Create-Only* Array of project gids. In order to change projects
            on an existing task use `addProject` and `removeProject`'
          example:
          - "12345"
          items:
            type: string
            description: Gid of a project.
        custom_fields:
          type: object
          additionalProperties:
            type: string
            description: "\"{custom_field_gid}\" => Value (can be text, a number,\
              \ etc.). For date, use format \"YYYY-MM-DD\" (e.g., 2019-09-15). For\
              \ date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."
          description: "An object where each key is the GID of a custom field and\
            \ its corresponding value is either an enum GID, string, number, object,\
            \ or array (depending on the custom field type). See the [custom fields\
            \ guide](/docs/custom-fields-guide) for details on creating and updating\
            \ custom field values"
          example:
            "5678904321": On Hold
            "4578152156": Not Started
          x-ballerina-name: customFields
        assignee:
          type: string
          description: Gid of a user
          nullable: true
          readOnly: false
          example: "12345"
          x-env-variable: true
        assignee_section:
          type: string
          description: |-
            The *assignee section* is a subdivision of a project that groups tasks together in the assignee's "My Tasks" list. It can either be a header above a list of tasks in a list view or a column in a board view of "My Tasks."
            The `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user's "My Tasks" list
          nullable: true
          example: "12345"
          x-ballerina-name: assigneeSection
        tags:
          type: array
          description: '*Create-Only* Array of tag gids. In order to change tags on
            an existing task use `addTag` and `removeTag`'
          example:
          - "12345"
          items:
            type: string
            description: Gid of a tag.
    GoalUpdateRequestAllOf2:
      type: object
      properties:
        status:
          type: string
          description: |-
            The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect "On Track", "At Risk", and "Off Track", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`.
            *Note* you can only write to this property if `metric` is set
          nullable: true
          example: green
    MembershipRequest:
      type: object
      properties:
        is_active:
          type: boolean
          description: '*Optional*. Denotes if a member is active. Applies to all
            memberships'
          example: true
          x-ballerina-name: isActive
    ProjectGidRemoveCustomFieldSettingBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RemoveCustomFieldSettingRequest'
    ProjectGidSaveAsTemplateBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectSaveAsTemplateRequest'
    InlineResponse20081:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20080:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    WorkspaceBase:
      $ref: '#/components/schemas/WorkspaceCompact'
    EnumOptionsenumOptionGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOptionBase'
    InlineResponse20083:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    GoalRemoveSubgoalRequest:
      required:
      - subgoal
      type: object
      properties:
        subgoal:
          type: string
          description: The goal gid to remove as subgoal from the parent goal
          example: "1331"
    TeamResponse:
      allOf:
      - $ref: '#/components/schemas/TeamBase'
      - $ref: '#/components/schemas/TeamResponseAllOf2'
    InlineResponse20082:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatusUpdateResponse'
    InlineResponse20085:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StoryResponse'
    UserTaskListBase:
      $ref: '#/components/schemas/UserTaskListCompact'
    InlineResponse20084:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatusUpdateCompact'
    ProjectBriefsprojectBriefGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectBriefRequest'
    InlineResponse20087:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20086:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StoryResponse'
    InlineResponse20089:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TagCompact'
    InlineResponse20088:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/StoryCompact'
    GoalMetricRequest:
      $ref: '#/components/schemas/GoalMetricBase'
    StatusUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/StatusUpdateBase'
      - $ref: '#/components/schemas/StatusUpdateResponseAllOf2'
    EnumOptionAllOf2:
      type: object
      properties:
        color:
          type: string
          description: The color of the enum option. Defaults to ‘none’
          example: blue
        name:
          type: string
          description: The name of the enum option
          example: Low
        enabled:
          type: boolean
          description: Whether or not the enum option is a selectable value for the
            custom field
          example: true
      description: |-
        Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.

        You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.

        **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.

        On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to “trashing” the enum option in the Asana web app within the “Edit Fields” dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.

        Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.

        An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint
      x-docs-overrides:
        properties.resource_type.example: enum_option
    AllocationCompactAllOf2:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ProjectCompact'
        effort:
          $ref: '#/components/schemas/EffortCompact'
        assignee:
          $ref: '#/components/schemas/UserCompact'
      x-docs-overrides:
        properties.resource_type.example: allocation
    PortfolioGidAddItemBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioAddItemRequest'
    StatusUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/StatusUpdateBase'
      - $ref: '#/components/schemas/StatusUpdateRequestAllOf2'
    InlineResponse20090:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagResponse'
    InlineResponse20092:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    TagCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: "Name of the tag. This is generally a short sentence fragment\
            \ that fits on a line in the UI for maximum readability. However, it can\
            \ be longer"
          example: Stuff to buy
      description: A *tag* is a label that can be attached to any task in Asana. It
        exists in a single workspace or organization
      x-docs-overrides:
        properties.resource_type.example: tag
    UserBaseResponsePhoto:
      type: object
      properties:
        image_21x21:
          type: string
          format: uri
          x-ballerina-name: image21x21
        image_36x36:
          type: string
          format: uri
          x-ballerina-name: image36x36
        image_27x27:
          type: string
          format: uri
          x-ballerina-name: image27x27
        image_128x128:
          type: string
          format: uri
          x-ballerina-name: image128x128
        image_1024x1024:
          type: string
          format: uri
          x-ballerina-name: image1024x1024
        image_60x60:
          type: string
          format: uri
          x-ballerina-name: image60x60
      description: "A map of the user’s profile photo in various sizes, or null if\
        \ no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images\
        \ are in PNG format, except for 1024 (which is in JPEG format)"
      nullable: true
      readOnly: true
      example: "{\"image_21x21\":\"https://...\",\"image_27x27\":\"https://...\",\"\
        image_36x36\":\"https://...\",\"image_60x60\":\"https://...\",\"image_128x128\"\
        :\"https://...\",\"image_1024x1024\":\"https://...\"}"
    RemoveFollowersRequest:
      required:
      - followers
      type: object
      properties:
        followers:
          type: string
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example: "521621,621373"
    InlineResponse20091:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagResponse'
    TeamMembershipCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TeamMembershipCompactAllOf2'
    InlineResponse20094:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TagCompact'
    PortfolioMembershipCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/PortfolioMembershipCompactAllOf2'
    InlineResponse20093:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TagCompact'
    InlineResponse20096:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateResponse'
    InlineResponse20095:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskTemplateCompact'
    InlineResponse20098:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCompact'
    GoalAddSupportingRelationshipRequest:
      required:
      - supporting_resource
      type: object
      properties:
        insert_before:
          type: string
          description: An id of a subgoal of this parent goal. The new subgoal will
            be added before the one specified here. `insert_before` and `insert_after`
            parameters cannot both be specified. Currently only supported when adding
            a subgoal
          example: "1331"
          x-ballerina-name: insertBefore
        supporting_resource:
          type: string
          description: "The gid of the supporting resource to add to the parent goal.\
            \ Must be the gid of a goal, project, task, or portfolio"
          example: "12345"
          x-ballerina-name: supportingResource
        contribution_weight:
          type: number
          description: The weight that the supporting resource's progress will contribute
            to the supported goal's progress. This can only be 0 or 1
          example: 1.0
          x-ballerina-name: contributionWeight
        insert_after:
          type: string
          description: An id of a subgoal of this parent goal. The new subgoal will
            be added after the one specified here. `insert_before` and `insert_after`
            parameters cannot both be specified. Currently only supported when adding
            a subgoal
          example: "1331"
          x-ballerina-name: insertAfter
    StoryResponse:
      allOf:
      - $ref: '#/components/schemas/StoryBase'
      - $ref: '#/components/schemas/StoryResponseAllOf2'
    InlineResponse20097:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20099:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    ProjectMembershipCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/ProjectMembershipCompactAllOf2'
    NextPage:
      type: object
      properties:
        path:
          type: string
          description: A relative path containing the query parameters to fetch for
            next_page
          readOnly: true
          example: /tasks/12345/attachments?limit=2&offset=eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
        offset:
          type: string
          description: Pagination offset for the request
          readOnly: true
          example: eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
        uri:
          type: string
          description: A full uri containing the query parameters to fetch for next_page
          format: uri
          readOnly: true
          example: https://app.asana.com/api/1.0/tasks/12345/attachments?limit=2&offset=eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
      description: "*Conditional*. This property is only present when a limit query\
        \ parameter is provided in the request. When making a paginated request, the\
        \ API will return a number of results as specified by the limit parameter.\
        \ If more results exist, then the response will contain a next_page attribute,\
        \ which will include an offset, a relative path attribute, and a full uri\
        \ attribute. If there are no more pages available, next_page will be null\
        \ and no offset will be provided. Note that an offset token will expire after\
        \ some time, as data may have changed"
      nullable: true
    TaskGidRemoveFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRemoveFollowersRequest'
    TaskRemoveTagRequest:
      required:
      - tag
      type: object
      properties:
        tag:
          type: string
          description: The tag's gid to remove from the task
          example: "13579"
    AllocationBaseAllOf2:
      type: object
      properties:
        end_date:
          type: string
          description: The localized day on which the allocation ends
          format: date
          example: 2024-02-28
          x-ballerina-name: endDate
        start_date:
          type: string
          description: The localized day on which the allocation starts
          format: date
          example: 2024-02-28
          x-ballerina-name: startDate
    DateVariableCompact:
      type: object
      properties:
        gid:
          type: string
          description: "Globally unique identifier of the date field in the project\
            \ template. A value of `1` refers to the project start date, while `2`\
            \ refers to the project due date"
          readOnly: true
          example: "1"
        name:
          type: string
          description: The name of the date variable
          readOnly: true
          example: Start Date
        description:
          type: string
          description: The description of what the date variable is used for when
            instantiating a project
          readOnly: true
          example: Choose a start date for your project.
    EffortCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/EffortCompactAllOf2'
    SectionRequest:
      required:
      - name
      type: object
      properties:
        insert_before:
          type: string
          description: An existing section within this project before which the added
            section should be inserted. Cannot be provided together with insert_after
          example: "86420"
          x-ballerina-name: insertBefore
        name:
          type: string
          description: The text to be displayed as the section name. This cannot be
            an empty string
          example: Next Actions
        insert_after:
          type: string
          description: An existing section within this project after which the added
            section should be inserted. Cannot be provided together with insert_before
          example: "987654"
          x-ballerina-name: insertAfter
    CustomFieldRequest:
      allOf:
      - $ref: '#/components/schemas/CustomFieldBase'
      - $ref: '#/components/schemas/CustomFieldRequestAllOf2'
    BatchRequestAction:
      required:
      - method
      - relative_path
      type: object
      properties:
        method:
          type: string
          description: The HTTP method you wish to emulate for the action
          example: get
          enum:
          - get
          - post
          - put
          - delete
          - patch
          - head
        data:
          type: object
          description: "For `GET` requests, this should be a map of query parameters\
            \ you would have normally passed in the URL. Options and pagination are\
            \ not accepted here; put them in `options` instead. For `POST`, `PATCH`,\
            \ and `PUT` methods, this should be the content you would have normally\
            \ put in the data field of the body"
          example:
            assignee: me
            workspace: "1337"
        options:
          $ref: '#/components/schemas/BatchRequestActionOptions'
        relative_path:
          type: string
          description: The path of the desired endpoint relative to the API’s base
            URL. Query parameters are not accepted here; put them in `data` instead
          example: /tasks/123
          x-ballerina-name: relativePath
      description: An action object for use in a batch request
    ProjectBriefResponse:
      allOf:
      - $ref: '#/components/schemas/ProjectBriefBase'
      - $ref: '#/components/schemas/ProjectBriefResponseAllOf2'
    ProjectTemplateInstantiateProjectRequest:
      required:
      - name
      type: object
      properties:
        is_strict:
          type: boolean
          description: "*Optional*. If set to `true`, the endpoint returns an \"Unprocessable\
            \ Entity\" error if you fail to provide a calendar date value for any\
            \ date variable. If set to `false`, a default date is used for each unfulfilled\
            \ date variable (e.g., the current date is used as the Start Date of a\
            \ project)"
          example: true
          x-ballerina-name: isStrict
        public:
          type: boolean
          description: Sets the project to public to its team
          example: true
        name:
          type: string
          description: The name of the new project
          example: New Project Name
        team:
          type: string
          description: "*Optional*. Sets the team of the new project. If the project\
            \ template exists in an _organization_, you may specify a value for `team`.\
            \ If no value is provided then it defaults to the same team as the project\
            \ template"
          example: "12345"
        requested_dates:
          type: array
          description: Array of mappings of date variables to calendar dates
          items:
            $ref: '#/components/schemas/DateVariableRequest'
          x-ballerina-name: requestedDates
        requested_roles:
          type: array
          description: Array of mappings of template roles to user ids
          items:
            $ref: '#/components/schemas/RequestedRoleRequest'
          x-ballerina-name: requestedRoles
    TasksBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRequest'
    TeamsteamGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamRequest'
    TaskTemplateRecipeAllOf2:
      type: object
      properties:
        due_time:
          type: string
          description: The time of day that the task will be due
          nullable: true
          example: 13:15:00.000Z
          x-ballerina-name: dueTime
        relative_start_on:
          type: integer
          description: The number of days after the task has been instantiated on
            which that the task will start
          nullable: true
          example: 1
          x-ballerina-name: relativeStartOn
        followers:
          type: array
          description: Array of users that will be added as followers to the task
            created from this template
          items:
            $ref: '#/components/schemas/UserCompact'
        attachments:
          type: array
          description: Array of attachments that will be added to the task created
            from this template
          items:
            $ref: '#/components/schemas/AttachmentCompact'
        subtasks:
          type: array
          description: Array of subtasks that will be added to the task created from
            this template
          items:
            $ref: '#/components/schemas/TaskTemplateRecipeCompact'
        custom_fields:
          type: array
          description: Array of custom fields that will be added to the task created
            from this template
          items:
            $ref: '#/components/schemas/CustomFieldCompact'
          x-ballerina-name: customFields
        description:
          type: string
          description: Description of the task that will be created from this template
          example: Please describe the bug you found and how to reproduce it.
        dependents:
          type: array
          description: Array of task templates that will depend on the task created
            from this template
          items:
            $ref: '#/components/schemas/TaskTemplateRecipeCompact'
        html_description:
          type: string
          description: HTML description of the task that will be created from this
            template
          example: Please describe the bug you found and how to reproduce it.
          x-ballerina-name: htmlDescription
        memberships:
          type: array
          description: Array of projects that the task created from this template
            will be added to
          items:
            $ref: '#/components/schemas/ProjectCompact'
        relative_due_on:
          type: integer
          description: The number of days after the task has been instantiated on
            which that the task will be due
          nullable: true
          example: 2
          x-ballerina-name: relativeDueOn
        dependencies:
          type: array
          description: Array of task templates that the task created from this template
            will depend on
          items:
            $ref: '#/components/schemas/TaskTemplateRecipeCompact'
    GoalMetricBaseAllOf2:
      type: object
      properties:
        target_number_value:
          type: number
          description: This number is the end value of a goal metric of type number.
            This number cannot equal `initial_number_value`
          example: 10.2
          x-ballerina-name: targetNumberValue
        unit:
          type: string
          description: "A supported unit of measure for the goal metric, or none"
          enum:
          - none
          - currency
          - percentage
        initial_number_value:
          type: number
          description: This number is the start value of a goal metric of type number
          example: 5.2
          x-ballerina-name: initialNumberValue
        precision:
          type: integer
          description: |-
            *Conditional*. Only relevant for goal metrics of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
            For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%
          example: 2
        current_number_value:
          type: number
          description: This number is the current value of a goal metric of type number
          example: 8.12
          x-ballerina-name: currentNumberValue
        current_display_value:
          type: string
          description: This string is the current value of a goal metric of type string
          readOnly: true
          example: "8.12"
          x-ballerina-name: currentDisplayValue
        resource_subtype:
          type: string
          description: "The subtype of this resource. Different subtypes retain many\
            \ of the same fields and behavior, but may render differently in Asana\
            \ or represent resources with different semantic meaning"
          readOnly: true
          example: number
          enum:
          - number
          x-ballerina-name: resourceSubtype
        currency_code:
          type: string
          description: ISO 4217 currency code to format this custom field. This will
            be null if the `unit` is not `currency`
          nullable: true
          example: EUR
          x-ballerina-name: currencyCode
        progress_source:
          type: string
          description: "This field defines how the progress value of a goal metric\
            \ is being calculated. A goal's progress can be provided manually by the\
            \ user, calculated automatically from contributing subgoals, projects,\
            \ or tasks, or managed by an integration with an external data source,\
            \ such as Salesforce"
          example: manual
          enum:
          - manual
          - subgoal_progress
          - project_task_completion
          - project_milestone_completion
          - task_completion
          - external
          x-ballerina-name: progressSource
    GoalMembershipResponseAllOf2:
      type: object
      properties:
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
            description: '*Deprecated:* A *workspace* is the highest-level organizational
              unit in Asana. All projects and tasks have an associated workspace.'
            readOnly: true
            deprecated: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - type: object
            description: "*Deprecated: new integrations should prefer the `member`\
              \ field.* A *user* object represents an account in Asana that can be\
              \ given access to various workspaces, projects, and tasks."
            readOnly: true
            deprecated: true
    TagBaseAllOf2:
      type: object
      properties:
        notes:
          type: string
          description: Free-form textual information associated with the tag (i.e.
            its description)
          example: Mittens really likes the stuff from Humboldt.
        color:
          type: string
          description: Color of the tag
          nullable: true
          example: light-green
          enum:
          - dark-pink
          - dark-green
          - dark-blue
          - dark-red
          - dark-teal
          - dark-brown
          - dark-orange
          - dark-purple
          - dark-warm-gray
          - light-pink
          - light-green
          - light-blue
          - light-red
          - light-teal
          - light-brown
          - light-orange
          - light-purple
          - light-warm-gray
          - null
    TaskGidTimeTrackingEntriesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateTimeTrackingEntryRequest'
    WorkspaceMembershipResponse:
      allOf:
      - $ref: '#/components/schemas/WorkspaceMembershipBase'
      - $ref: '#/components/schemas/WorkspaceMembershipResponseAllOf2'
    TaskGidDuplicateBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskDuplicateRequest'
    GoalResponse:
      allOf:
      - $ref: '#/components/schemas/GoalBase'
      - $ref: '#/components/schemas/GoalResponseAllOf2'
    ProjectStatusBase:
      allOf:
      - $ref: '#/components/schemas/ProjectStatusCompact'
      - $ref: '#/components/schemas/ProjectStatusBaseAllOf2'
    TaskCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TaskCompactAllOf2'
    PortfolioMembershipCompactAllOf2:
      type: object
      properties:
        portfolio:
          $ref: '#/components/schemas/PortfolioCompact'
        user:
          $ref: '#/components/schemas/UserCompact'
      description: This object determines if a user is a member of a portfolio
      x-docs-overrides:
        properties.resource_type.example: portfolio_membership
    TimePeriodResponse:
      $ref: '#/components/schemas/TimePeriodBase'
    GoalRelationshipRequestAllOf2:
      type: object
    ProjectResponseAllOf2:
      type: object
      properties:
        owner:
          description: "The current owner of the project, may be null"
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - type: object
            nullable: true
        completed_at:
          type: string
          description: "The time at which this project was completed, or null if the\
            \ project is not completed"
          format: date-time
          nullable: true
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: completedAt
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
            description: "*Create-only*. The workspace or organization this project\
              \ is associated with. Once created, projects cannot be moved to a different\
              \ workspace. This attribute can only be specified at creation time.\
              \ If the workspace for your project is an organization, you must also\
              \ supply a `team` in the request body."
            readOnly: true
        followers:
          type: array
          description: Array of users following this project. Followers are a subset
            of members who have opted in to receive "tasks added" notifications for
            a project
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
        custom_fields:
          type: array
          description: Array of Custom Fields
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldCompact'
          x-ballerina-name: customFields
        created_from_template:
          allOf:
          - $ref: '#/components/schemas/ProjectTemplateCompact'
          - type: object
            description: "[Opt In](/docs/inputoutput-options). The project template\
              \ from which this project was created. If the project was not created\
              \ from a template, this field will be null."
            nullable: true
          x-ballerina-name: createdFromTemplate
        icon:
          type: string
          description: The icon for a project
          nullable: true
          example: chat_bubbles
          enum:
          - list
          - board
          - timeline
          - calendar
          - rocket
          - people
          - graph
          - star
          - bug
          - light_bulb
          - globe
          - gear
          - notebook
          - computer
          - check
          - target
          - html
          - megaphone
          - chat_bubbles
          - briefcase
          - page_layout
          - mountain_flag
          - puzzle
          - presentation
          - line_and_symbols
          - speed_dial
          - ribbon
          - shoe
          - shopping_basket
          - map
          - ticket
          - coins
        project_brief:
          allOf:
          - $ref: '#/components/schemas/ProjectBriefCompact'
          - type: object
            description: "[Opt In](/docs/inputoutput-options). The project brief associated\
              \ with this project."
            nullable: true
          x-ballerina-name: projectBrief
        completed:
          type: boolean
          description: "True if the project is currently marked complete, false if\
            \ not"
          readOnly: true
          example: false
        team:
          allOf:
          - $ref: '#/components/schemas/TeamCompact'
          - type: object
            description: The team that this project is shared with.
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/resource/123456789/list
          x-ballerina-name: permalinkUrl
        completed_by:
          description: "The user that marked this project complete, or null if the\
            \ project is not completed"
          nullable: true
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: completedBy
    OrganizationExportsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationExportRequest'
    TaskstaskGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRequest'
    TaskGidAddTagBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskAddTagRequest'
    WorkspaceMembershipResponseAllOf2:
      type: object
      properties:
        is_admin:
          type: boolean
          description: Reflects if this user is an admin of the workspace
          readOnly: true
          x-ballerina-name: isAdmin
        is_active:
          type: boolean
          description: Reflects if this user still a member of the workspace
          readOnly: true
          x-ballerina-name: isActive
        is_guest:
          type: boolean
          description: Reflects if this user is a guest of the workspace
          readOnly: true
          x-ballerina-name: isGuest
        user_task_list:
          allOf:
          - $ref: '#/components/schemas/UserTaskListResponse'
          x-ballerina-name: userTaskList
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        vacation_dates:
          allOf:
          - $ref: '#/components/schemas/WorkspaceMembershipResponseVacationDates'
          x-ballerina-name: vacationDates
    MembershipsmembershipGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MembershipRequest'
    AttachmentBase:
      $ref: '#/components/schemas/AttachmentCompact'
    GoalRequestBase:
      allOf:
      - $ref: '#/components/schemas/GoalBase'
      - $ref: '#/components/schemas/GoalRequestBaseAllOf2'
    JobResponse:
      $ref: '#/components/schemas/JobBase'
    TaskBase:
      properties:
        name:
          type: string
          description: "Name of the task. This is generally a short sentence fragment\
            \ that fits on a line in the UI for maximum readability. However, it can\
            \ be longer."
          example: Buy catnip
      allOf:
      - $ref: '#/components/schemas/TaskCompact'
      - type: object
        properties:
          notes:
            type: string
            description: Free-form textual information associated with the task (i.e.
              its description)
            example: Mittens really likes the stuff from Humboldt.
          assignee_status:
            type: string
            description: "*Deprecated* Scheduling status of this task for the user\
              \ it is assigned to. This field can only be set if the assignee is non-null.\
              \ Setting this field to \"inbox\" or \"upcoming\" inserts it at the\
              \ top of the section, while the other options will insert at the bottom"
            example: upcoming
            enum:
            - today
            - upcoming
            - later
            - new
            - inbox
            x-ballerina-name: assigneeStatus
          created_at:
            type: string
            description: The time at which this resource was created
            format: date-time
            readOnly: true
            example: 2012-02-22T02:06:58.147Z
            x-ballerina-name: createdAt
          hearted:
            type: boolean
            description: "*Deprecated - please use liked instead* True if the task\
              \ is hearted by the authorized user, false if not"
            readOnly: true
            example: true
          start_at:
            type: string
            description: |-
              Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`.
              *Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*
            format: date-time
            nullable: true
            example: 2019-09-14T02:06:58.147Z
            x-ballerina-name: startAt
          due_on:
            type: string
            description: "The localized date on which this task is due, or null if\
              \ the task has no due date. This takes a date with `YYYY-MM-DD` format\
              \ and should not be used together with `due_at`"
            format: date
            nullable: true
            example: 2019-09-15
            x-ballerina-name: dueOn
          liked:
            type: boolean
            description: "True if the task is liked by the authorized user, false\
              \ if not"
            example: true
          memberships:
            type: array
            description: "*Create-only*. Array of projects this task is associated\
              \ with and the section it is in. At task creation time, this array can\
              \ be used to add the task to specific sections. After task creation,\
              \ these associations can be modified using the `addProject` and `removeProject`\
              \ endpoints. Note that over time, more types of memberships may be added\
              \ to this property"
            readOnly: true
            items:
              type: object
              properties:
                project:
                  $ref: '#/components/schemas/ProjectCompact'
                section:
                  $ref: '#/components/schemas/SectionCompact'
          html_notes:
            type: string
            description: "[Opt In](/docs/inputoutput-options). The notes of the text\
              \ with formatting as HTML"
            example: <body>Mittens <em>really</em> likes the stuff from Humboldt.</body>
            x-ballerina-name: htmlNotes
          num_subtasks:
            type: integer
            description: |
              [Opt In](/docs/inputoutput-options). The number of subtasks on this task
            readOnly: true
            example: 3
            x-ballerina-name: numSubtasks
          hearts:
            type: array
            description: '*Deprecated - please use likes instead* Array of likes for
              users who have hearted this task'
            readOnly: true
            items:
              $ref: '#/components/schemas/Like'
          due_at:
            type: string
            description: "The UTC date and time on which this task is due, or null\
              \ if the task has no due time. This takes an ISO 8601 date string in\
              \ UTC and should not be used together with `due_on`"
            format: date-time
            nullable: true
            example: 2019-09-15T02:06:58.147Z
            x-ballerina-name: dueAt
          is_rendered_as_separator:
            type: boolean
            description: "[Opt In](/docs/inputoutput-options). In some contexts tasks\
              \ can be rendered as a visual separator; for instance, subtasks can\
              \ appear similar to [sections](/reference/sections) without being true\
              \ `section` objects. If a `task` object is rendered this way in any\
              \ context it will have the property `is_rendered_as_separator` set to\
              \ `true`"
            readOnly: true
            example: false
            x-ballerina-name: isRenderedAsSeparator
          num_likes:
            type: integer
            description: The number of users who have liked this task
            readOnly: true
            example: 5
            x-ballerina-name: numLikes
          modified_at:
            type: string
            description: |-
              The time at which this task was last modified.

              The following conditions will change `modified_at`:

              - story is created on a task
              - story is trashed on a task
              - attachment is trashed on a task
              - task is assigned or unassigned
              - custom field value is changed
              - the task itself is trashed
              - Or if any of the following fields are updated:
                - completed
                - name
                - due_date
                - description
                - attachments
                - items
                - schedule_status

              The following conditions will _not_ change `modified_at`:

              - moving to a new container (project, portfolio, etc)
              - comments being added to the task (but the stories they generate
                _will_ affect `modified_at`)
            format: date-time
            readOnly: true
            example: 2012-02-22T02:06:58.147Z
            x-ballerina-name: modifiedAt
          num_hearts:
            type: integer
            description: '*Deprecated - please use likes instead* The number of users
              who have hearted this task'
            readOnly: true
            example: 5
            x-ballerina-name: numHearts
          completed_by:
            allOf:
            - $ref: '#/components/schemas/UserCompact'
            - nullable: true
              readOnly: true
            x-ballerina-name: completedBy
          likes:
            type: array
            description: Array of likes for users who have liked this task
            readOnly: true
            items:
              $ref: '#/components/schemas/Like'
          start_on:
            type: string
            description: |-
              The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`.
              *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*
            format: date
            nullable: true
            example: 2019-09-14
            x-ballerina-name: startOn
          approval_status:
            type: string
            description: "*Conditional* Reflects the approval status of this task.\
              \ This field is kept in sync with `completed`, meaning `pending` translates\
              \ to false while `approved`, `rejected`, and `changes_requested` translate\
              \ to true. If you set completed to true, this field will be set to `approved`"
            example: pending
            enum:
            - pending
            - approved
            - rejected
            - changes_requested
            x-ballerina-name: approvalStatus
          completed:
            type: boolean
            description: "True if the task is currently marked complete, false if\
              \ not"
            example: false
          dependencies:
            type: array
            description: "[Opt In](/docs/inputoutput-options). Array of resources\
              \ referencing tasks that this task depends on. The objects contain only\
              \ the gid of the dependency"
            readOnly: true
            items:
              $ref: '#/components/schemas/AsanaResource'
          completed_at:
            type: string
            description: "The time at which this task was completed, or null if the\
              \ task is incomplete"
            format: date-time
            nullable: true
            readOnly: true
            example: 2012-02-22T02:06:58.147Z
            x-ballerina-name: completedAt
          external:
            type: object
            properties:
              gid:
                type: string
                example: "1234"
              data:
                type: string
                example: A blob of information.
            description: |-
              *OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options).
              The external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details
            example:
              gid: my_gid
              data: A blob of information
          actual_time_minutes:
            type: number
            description: This value represents the sum of all the Time Tracking entries
              in the Actual Time field on a given Task. It is represented as a nullable
              long value
            nullable: true
            readOnly: true
            example: 200
            x-ballerina-name: actualTimeMinutes
          name:
            type: string
            description: "Name of the task. This is generally a short sentence fragment\
              \ that fits on a line in the UI for maximum readability. However, it\
              \ can be longer"
            example: Buy catnip
          dependents:
            type: array
            description: "[Opt In](/docs/inputoutput-options). Array of resources\
              \ referencing tasks that depend on this task. The objects contain only\
              \ the ID of the dependent"
            readOnly: true
            items:
              $ref: '#/components/schemas/AsanaResource'
    StoryCompactAllOf2:
      type: object
      properties:
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        text:
          type: string
          description: |-
            *Create-only*. Human-readable text for the story or comment.
            This will not include the name of the creator.
            *Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say “assigned to …” as the text for a story can both be edited and change based on the language settings of the user making the request.*
            Use the `resource_subtype` property to discover the action that created the story
          example: marked today
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
        resource_subtype:
          type: string
          description: "The subtype of this resource. Different subtypes retain many\
            \ of the same fields and behavior, but may render differently in Asana\
            \ or represent resources with different semantic meaning"
          readOnly: true
          example: comment_added
          x-ballerina-name: resourceSubtype
      description: A story represents an activity associated with an object in the
        Asana system
      x-docs-overrides:
        properties.resource_type.example: story
    StoryBaseAllOf2:
      type: object
      properties:
        sticker_name:
          type: string
          description: The name of the sticker in this story. `null` if there is no
            sticker
          example: dancing_unicorn
          enum:
          - green_checkmark
          - people_dancing
          - dancing_unicorn
          - heart
          - party_popper
          - people_waving_flags
          - splashing_narwhal
          - trophy
          - yeti_riding_unicorn
          - celebrating_people
          - determined_climbers
          - phoenix_spreading_love
          x-ballerina-name: stickerName
        html_text:
          type: string
          description: "[Opt In](/docs/inputoutput-options). HTML formatted text for\
            \ a comment. This will not include the name of the creator"
          example: <body>This is a comment.</body>
          x-ballerina-name: htmlText
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        text:
          type: string
          description: The plain text of the comment to add. Cannot be used with html_text
          example: This is a comment.
        resource_subtype:
          type: string
          description: "The subtype of this resource. Different subtypes retain many\
            \ of the same fields and behavior, but may render differently in Asana\
            \ or represent resources with different semantic meaning"
          readOnly: true
          example: comment_added
          x-ballerina-name: resourceSubtype
        is_pinned:
          type: boolean
          description: '*Conditional*. Whether the story should be pinned on the resource'
          example: false
          x-ballerina-name: isPinned
      description: A story represents an activity associated with an object in the
        Asana system
      x-docs-overrides:
        properties.resource_type.example: story
    EventResponse:
      type: object
      properties:
        parent:
          description: "For added/removed events, the parent object that resource\
            \ was added to or removed from. The parent will be `null` for other event\
            \ types"
          allOf:
          - $ref: '#/components/schemas/AsanaNamedResource'
        resource:
          description: The resource which has triggered the event by being modified
            in some way
          allOf:
          - $ref: '#/components/schemas/AsanaNamedResource'
        change:
          $ref: '#/components/schemas/EventResponseChange'
        action:
          type: string
          description: "The type of action taken on the **resource** that triggered\
            \ the event.  This can be one of `changed`, `added`, `removed`, `deleted`,\
            \ or `undeleted` depending on the nature of the event"
          readOnly: true
          example: changed
        created_at:
          type: string
          description: The timestamp when the event occurred
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        type:
          type: string
          description: "*Deprecated: Refer to the resource_type of the resource.*\
            \ The type of the resource that generated the event"
          readOnly: true
          example: task
        user:
          description: The user who triggered the event
          allOf:
          - $ref: '#/components/schemas/UserCompact'
      description: |-
        An *event* is an object representing a change to a resource that was
        observed by an event subscription or delivered asynchronously to
        the target location of an active webhook.

        The event may be triggered by a different `user` than the
        subscriber. For example, if user A subscribes to a task and user B
        modified it, the event’s user will be user B. Note: Some events
        are generated by the system, and will have `null` as the user. API
        consumers should make sure to handle this case.

        The `resource` that triggered the event may be different from the one
        that the events were requested for or the webhook is subscribed to. For
        example, a subscription to a project will contain events for tasks
        contained within the project.

        **Note:** pay close attention to the relationship between the fields
        `Event.action` and `Event.change.action`.
        `Event.action` represents the action taken on the resource
        itself, and `Event.change.action` represents how the information
        within the resource's fields have been modified.

        For instance, consider these scenarios:


        * When at task is added to a project, `Event.action` will be
        `added`, `Event.parent` will be an object with the `id` and
        `type` of the project, and there will be no `change` field.


        * When an assignee is set on the task, `Event.parent` will be
        `null`, `Event.action` will be `changed`,
        `Event.change.action` will be `changed`, and `new_value` will
        be an object with the user's `id` and `type`.


        * When a collaborator is added to the task, `Event.parent` will
        be `null`, `Event.action` will be `changed`,
        `Event.change.action` will be `added`, and `added_value` will be
        an object with the user's `id` and `type`
    TeamCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TeamCompactAllOf2'
    PortfolioResponseAllOf2:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserCompact'
        start_on:
          type: string
          description: "The day on which work for this portfolio begins, or null if\
            \ the portfolio has no start date. This takes a date with `YYYY-MM-DD`\
            \ format. *Note: `due_on` must be present in the request when setting\
            \ or unsetting the `start_on` parameter. Additionally, `start_on` and\
            \ `due_on` cannot be the same date.*"
          format: date
          nullable: true
          example: 2019-09-14
          x-ballerina-name: startOn
        custom_field_settings:
          type: array
          description: Array of custom field settings applied to the portfolio
          items:
            $ref: '#/components/schemas/CustomFieldSettingResponse'
          x-ballerina-name: customFieldSettings
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
            description: '*Create-only*. The workspace or organization that the portfolio
              belongs to.'
        custom_fields:
          type: array
          description: Array of Custom Fields
          items:
            $ref: '#/components/schemas/CustomFieldCompact'
          x-ballerina-name: customFields
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
        due_on:
          type: string
          description: The localized day on which this portfolio is due. This takes
            a date with format YYYY-MM-DD
          format: date
          nullable: true
          example: 2019-09-15
          x-ballerina-name: dueOn
        project_templates:
          type: array
          description: Array of project templates that are in the portfolio
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectTemplateCompact'
          x-ballerina-name: projectTemplates
        public:
          type: boolean
          description: True if the portfolio is public to its workspace members
          example: false
        current_status_update:
          description: The latest `status_update` posted to this portfolio
          nullable: true
          allOf:
          - $ref: '#/components/schemas/StatusUpdateCompact'
          x-ballerina-name: currentStatusUpdate
        members:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/resource/123456789/list
          x-ballerina-name: permalinkUrl
    StoryCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/StoryCompactAllOf2'
    EffortCompactAllOf2:
      type: object
      properties:
        type:
          type: string
          description: "The units used for tracking effort on an allocation, either\
            \ \"hours\" or \"percent\""
          enum:
          - hours
          - percent
        value:
          type: number
          description: The numeric effort value on the allocation
          example: 50
      x-docs-overrides:
        properties.resource_type.example: effort
    PortfolioBaseAllOf2:
      type: object
      properties:
        color:
          type: string
          description: Color of the portfolio
          example: light-green
          enum:
          - dark-pink
          - dark-green
          - dark-blue
          - dark-red
          - dark-teal
          - dark-brown
          - dark-orange
          - dark-purple
          - dark-warm-gray
          - light-pink
          - light-green
          - light-blue
          - light-red
          - light-teal
          - light-brown
          - light-orange
          - light-purple
          - light-warm-gray
    TaskGidAddDependentsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ModifyDependentsRequest'
    GoalRelationshipResponse:
      allOf:
      - $ref: '#/components/schemas/GoalRelationshipBase'
      - $ref: '#/components/schemas/GoalRelationshipResponseAllOf2'
    ProjectGidAddFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddFollowersRequest'
    WebhookswebhookGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookUpdateRequest'
    JobBase:
      $ref: '#/components/schemas/JobCompact'
    CustomFieldRequestAllOf2:
      required:
      - workspace
      type: object
      properties:
        workspace:
          type: string
          description: '*Create-Only* The workspace to create a custom field in'
          example: "1331"
        owned_by_app:
          type: boolean
          description: "*Allow-listed*. Instructs the API that this Custom Field is\
            \ app-owned. This parameter is allow-listed to specific apps at this point\
            \ in time. For apps that are not allow-listed, providing this parameter\
            \ will result in a `403 Forbidden`"
          x-ballerina-name: ownedByApp
        people_value:
          type: array
          description: '*Conditional*. Only relevant for custom fields of type `people`.
            This array of user GIDs reflects the users to be written to a `people`
            custom field. Note that *write* operations will replace existing users
            (if any) in the custom field with the users specified in this array'
          example:
          - "12345"
          items:
            type: string
            description: The GID of a user.
          x-ballerina-name: peopleValue
    StoryRequest:
      $ref: '#/components/schemas/StoryBase'
    PortfolioCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/PortfolioCompactAllOf2'
    ProjectTemplateBase:
      allOf:
      - $ref: '#/components/schemas/ProjectTemplateCompact'
      - $ref: '#/components/schemas/ProjectTemplateBaseAllOf2'
    ProjectTemplateCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: Name of the project template
          example: Packing list
      description: "A *project template* is an object that allows new projects to\
        \ be created with a predefined setup, which may include tasks, sections, Rules,\
        \ etc. It simplifies the process of running a workflow that involves a similar\
        \ set of work every time"
      x-docs-overrides:
        properties.resource_type.example: project_template
    UpdateTimeTrackingEntryRequest:
      type: object
      properties:
        entered_on:
          type: string
          description: '*Optional*. The day that this entry is logged on. Defaults
            to today if no day specified'
          format: date
          example: 2023-03-19
          x-ballerina-name: enteredOn
        duration_minutes:
          type: integer
          description: '*Optional*. Time in minutes tracked by the entry'
          example: 12
          x-ballerina-name: durationMinutes
    ProjectDuplicateRequestScheduleDates:
      required:
      - should_skip_weekends
      type: object
      properties:
        start_on:
          type: string
          description: Sets the first start date in the duplicated project to the
            given date. The rest of the start dates will be offset by the same amount
            as the start dates in the original project
          example: 2019-05-21
          x-ballerina-name: startOn
        should_skip_weekends:
          type: boolean
          description: Determines if the auto-shifted dates should skip weekends
          example: true
          x-ballerina-name: shouldSkipWeekends
        due_on:
          type: string
          description: Sets the last due date in the duplicated project to the given
            date. The rest of the due dates will be offset by the same amount as the
            due dates in the original project
          example: 2019-05-21
          x-ballerina-name: dueOn
      description: "A dictionary of options to auto-shift dates. `task_dates` must\
        \ be included to use this option. Requires either `start_on` or `due_on`,\
        \ but not both"
    GoalMembershipCompactAllOf2:
      type: object
      properties:
        is_editor:
          type: boolean
          description: "*Deprecated: new integrations should prefer the `role` field.*\
            \ Describes if the member is editor in goal"
          readOnly: true
          example: false
          deprecated: true
          x-ballerina-name: isEditor
        is_commenter:
          type: boolean
          description: "*Deprecated: new integrations should prefer the `role` field.*\
            \ Describes if the member is comment only in goal"
          readOnly: true
          example: false
          deprecated: true
          x-ballerina-name: isCommenter
    GoalRelationshipBase:
      allOf:
      - $ref: '#/components/schemas/GoalRelationshipCompact'
      - $ref: '#/components/schemas/GoalRelationshipBaseAllOf2'
    TagCreateTagForWorkspaceRequest:
      allOf:
      - $ref: '#/components/schemas/TagBase'
      - $ref: '#/components/schemas/TagCreateTagForWorkspaceRequestAllOf2'
    PortfoliosBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioRequest'
    AddMembersRequest:
      required:
      - members
      type: object
      properties:
        members:
          type: string
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example: "521621,621373"
    ProjectStatusCompactAllOf2:
      type: object
      properties:
        title:
          type: string
          description: The title of the project status update
          example: Status Update - Jun 15
      description: |-
        *Deprecated: new integrations should prefer the `status_update` resource.*
        A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind
      x-docs-overrides:
        properties.resource_type.example: project_status
    TeamsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamRequest'
    StatusUpdateCompactAllOf2:
      type: object
      properties:
        title:
          type: string
          description: The title of the status update
          example: Status Update - Jun 15
        resource_subtype:
          type: string
          description: |-
            The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
            The `resource_subtype`s for `status` objects represent the type of their parent
          readOnly: true
          example: project_status_update
          enum:
          - project_status_update
          - portfolio_status_update
          - goal_status_update
          x-ballerina-name: resourceSubtype
      description: "A *status update* is an update on the progress of a particular\
        \ project, portfolio, or goal, and is sent out to all of its parent's followers\
        \ when created. These updates include both text describing the update and\
        \ a `status_type` intended to represent the overall state of the project"
      x-docs-overrides:
        properties.resource_type.example: status_update
    UserResponseAllOf2:
      type: object
      properties:
        workspaces:
          type: array
          description: |-
            Workspaces and organizations this user may access.
            Note\: The API will only return workspaces and organizations that also contain the authenticated user
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkspaceCompact'
    InlineResponse412Errors:
      type: object
      properties:
        message:
          type: string
          description: "Message providing more detail about the error that occurred,\
            \ if available"
          readOnly: true
          example: "Sync token invalid or too old. If you are attempting to keep resources\
            \ in sync, you must fetch the full dataset for this query now and use\
            \ the new sync token for the next sync."
    ProjectMembershipNormalResponse:
      properties:
        resource_type:
          type: string
          description: The base type of this resource.
          example: project_membership
      allOf:
      - $ref: '#/components/schemas/ProjectMembershipBase'
      - type: object
        properties:
          resource_type:
            type: string
            description: The base type of this resource
            example: project_membership
            x-ballerina-name: resourceType
          project:
            $ref: '#/components/schemas/ProjectCompact'
          user:
            $ref: '#/components/schemas/UserCompact'
          write_access:
            type: string
            description: Whether the member has full access or comment-only access
              to the project
            readOnly: true
            example: full_write
            enum:
            - full_write
            - comment_only
            x-ballerina-name: writeAccess
    GoalGidSetMetricCurrentValueBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalMetricCurrentValueRequest'
    AddFollowersRequest:
      required:
      - followers
      type: object
      properties:
        followers:
          type: string
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example: "521621,621373"
    SectionsInsertBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectSectionInsertRequest'
    TagRequestAllOf2:
      type: object
      properties:
        workspace:
          type: string
          description: Gid of an object
          example: "12345"
          x-env-variable: true
        followers:
          type: array
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example:
          - "12345"
          - "42563"
          items:
            type: string
    EmptyResponse:
      type: object
      description: An empty object. Some endpoints do not return an object on success.
        The success is conveyed through a 2-- status code and returning an empty object
    TaskDuplicateRequest:
      type: object
      properties:
        include:
          pattern: "([notes|assignee|subtasks|attachments|tags|followers|projects|dates|dependencies|parent])(,\\\
            1)*"
          type: string
          description: |-
            A comma-separated list of fields that will be duplicated to the new task.
            ##### Fields
            - assignee
            - attachments
            - dates
            - dependencies
            - followers
            - notes
            - parent
            - projects
            - subtasks
            - tags
          example: "[\"notes,assignee,subtasks,attachments,tags,followers,projects,dates,dependencies,parent\"\
            ]"
        name:
          type: string
          description: The name of the new task
          example: New Task Name
    DateVariableRequest:
      type: object
      properties:
        gid:
          type: string
          description: "Globally unique identifier of the date field in the project\
            \ template. A value of `1` refers to the project start date, while `2`\
            \ refers to the project due date"
          example: "1"
        value:
          type: string
          description: The date with which the date variable should be replaced when
            instantiating a project. This takes a date with `YYYY-MM-DD` format
          format: date-time
          nullable: true
    AttachmentResponseAllOf2:
      type: object
      properties:
        permanent_url:
          type: string
          description: ""
          format: uri
          nullable: true
          readOnly: true
          example: https://s3.amazonaws.com/assets/123/Screenshot.png
          x-ballerina-name: permanentUrl
        parent:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          - type: object
            properties:
              resource_subtype:
                type: string
                description: The resource subtype of the parent resource that the
                  filter applies to.
                nullable: true
                example: default_task
                enum:
                - default_task
                - milestone
                - section
                - approval
            description: The task this attachment is attached to.
            nullable: true
            readOnly: true
        size:
          type: integer
          description: The size of the attachment in bytes. Only present when the
            `resource_subtype` is `asana`
          readOnly: true
          example: 12345
        connected_to_app:
          type: boolean
          description: Whether the attachment is connected to the app making the request
            for the purposes of showing an app components widget. Only present when
            the `resource_subtype` is `external` or `gdrive`
          readOnly: true
          x-ballerina-name: connectedToApp
        download_url:
          type: string
          description: |-
            The URL containing the content of the attachment.
            *Note:* May be null if the attachment is hosted by [Box](https://www.box.com/) and will be null if the attachment is a Video Message hosted by [Vimeo](https://vimeo.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs
          format: uri
          nullable: true
          readOnly: true
          example: https://s3.amazonaws.com/assets/123/Screenshot.png
          x-ballerina-name: downloadUrl
        host:
          type: string
          description: "The service hosting the attachment. Valid values are `asana`,\
            \ `dropbox`, `gdrive`, `box`, and `vimeo`"
          readOnly: true
          example: dropbox
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        view_url:
          type: string
          description: "The URL where the attachment can be viewed, which may be friendlier\
            \ to users in a browser than just directing them to a raw file. May be\
            \ null if no view URL exists for the service"
          format: uri
          nullable: true
          readOnly: true
          example: https://www.dropbox.com/s/123/Screenshot.png
          x-ballerina-name: viewUrl
    TaskTemplateCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: Name of the task template
          example: Packing list
      description: A *task template* is an object that allows new tasks to be created
        with a predefined setup
      x-docs-overrides:
        properties.resource_type.example: task_template
    InlineResponse201:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldResponse'
    InlineResponse200:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AttachmentResponse'
    AsanaResource:
      type: object
      properties:
        gid:
          type: string
          description: "Globally unique identifier of the resource, as a string"
          readOnly: true
          example: "12345"
          x-insert-after: false
        resource_type:
          type: string
          description: The base type of this resource
          readOnly: true
          example: task
          x-insert-after: gid
          x-ballerina-name: resourceType
      description: "A generic Asana Resource, containing a globally unique identifier"
    InlineResponse204:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    TaskGidStoriesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StoryRequest'
    UserTaskListResponse:
      $ref: '#/components/schemas/UserTaskListBase'
    ProjectRequestAllOf2:
      type: object
      properties:
        owner:
          type: string
          description: "The current owner of the project, may be null"
          nullable: true
          example: "12345"
        workspace:
          type: string
          description: The `gid` of a workspace
          example: "12345"
        followers:
          type: string
          description: '*Create-only*. Comma separated string of users. Followers
            are a subset of members who have opted in to receive "tasks added" notifications
            for a project'
          example: "12345,23456"
        custom_fields:
          type: object
          additionalProperties:
            type: string
            description: "\"{custom_field_gid}\" => Value (can be text, a number,\
              \ etc.). For date, use format \"YYYY-MM-DD\" (e.g., 2019-09-15). For\
              \ date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."
          description: "An object where each key is the GID of a custom field and\
            \ its corresponding value is either an enum GID, string, number, or object\
            \ (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide)\
            \ for details on creating and updating custom field values"
          example:
            "5678904321": On Hold
            "4578152156": Not Started
          x-ballerina-name: customFields
        team:
          type: string
          description: The team that this project is shared with
          example: "12345"
    TeamMembershipResponse:
      $ref: '#/components/schemas/TeamMembershipBase'
    WorkspaceMembershipBase:
      $ref: '#/components/schemas/WorkspaceMembershipCompact'
    GoalRequestBaseAllOf2:
      type: object
      properties:
        owner:
          type: string
          description: The `gid` of a user
          nullable: true
          example: "12345"
        workspace:
          type: string
          description: The `gid` of a workspace
          example: "12345"
        team:
          type: string
          description: '*Conditional*. This property is only present when the `workspace`
            provided is an organization'
          nullable: true
          example: "12345"
        time_period:
          type: string
          description: The `gid` of a time period
          nullable: true
          example: "12345"
          x-ballerina-name: timePeriod
    Error:
      type: object
      properties:
        help:
          type: string
          description: "Additional information directing developers to resources on\
            \ how to address and fix the problem, if available"
          readOnly: true
          example: "For more information on API status codes and how to handle them,\
            \ read the docs on errors: https://asana.github.io/developer-docs/#errors'"
        phrase:
          type: string
          description: '*500 errors only*. A unique error phrase which can be used
            when contacting developer support to help identify the exact occurrence
            of the problem in Asana’s logs'
          readOnly: true
          example: 6 sad squid snuggle softly
        message:
          type: string
          description: "Message providing more detail about the error that occurred,\
            \ if available"
          readOnly: true
          example: "project: Missing input"
    TimePeriodBase:
      allOf:
      - $ref: '#/components/schemas/TimePeriodCompact'
      - $ref: '#/components/schemas/TimePeriodBaseAllOf2'
    CustomFieldGidEnumOptionsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOptionRequest'
    TaskGidSubtasksBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRequest'
    AuditLogEventDetails:
      type: object
      description: Event specific details. The schema will vary depending on the `event_type`
    ProjectMembershipCompactAllOf2:
      type: object
      properties:
        access_level:
          type: string
          description: "Whether the member has admin, editor, commenter, or viewer\
            \ access to the project"
          readOnly: true
          example: admin
          enum:
          - admin
          - editor
          - commenter
          - viewer
          x-ballerina-name: accessLevel
        parent:
          $ref: '#/components/schemas/ProjectCompact'
        member:
          $ref: '#/components/schemas/MemberCompact'
      description: "This object describes a team or a user's membership to a project\
        \ including their level of access (Admin, Editor, Commenter, or Viewer)"
      x-docs-overrides:
        properties.resource_type.example: project_membership
    ProjectStatusResponseAllOf2:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/UserCompact'
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        modified_at:
          type: string
          description: |-
            The time at which this project status was last modified.
            *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: modifiedAt
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
    StoryResponseDates:
      type: object
      properties:
        start_on:
          type: string
          description: "The day on which work for this goal begins, or null if the\
            \ goal has no start date. This takes a date with `YYYY-MM-DD` format,\
            \ and cannot be set unless there is an accompanying due date"
          format: date
          nullable: true
          example: 2019-09-14
          x-ballerina-name: startOn
        due_at:
          type: string
          description: "The UTC date and time on which this task is due, or null if\
            \ the task has no due time. This takes an ISO 8601 date string in UTC\
            \ and should not be used together with `due_on`"
          format: date-time
          nullable: true
          example: 2019-09-15T02:06:58.158Z
          x-ballerina-name: dueAt
        due_on:
          type: string
          description: The localized day on which this goal is due. This takes a date
            with format `YYYY-MM-DD`
          format: date
          example: 2019-09-15
          x-ballerina-name: dueOn
      description: '*Conditional*'
      readOnly: true
    PortfolioRequestAllOf2:
      type: object
      properties:
        workspace:
          type: string
          description: Gid of an object
          example: "167589"
        public:
          type: boolean
          description: True if the portfolio is public to its workspace members
          example: false
        members:
          type: array
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          readOnly: true
          example:
          - "52164"
          - "15363"
          items:
            type: string
            description: Gid of an object.
    TaskGidRemoveDependenciesBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ModifyDependenciesRequest'
    EnumOptionInsertRequest:
      required:
      - enum_option
      type: object
      properties:
        after_enum_option:
          type: string
          description: An existing enum option within this custom field after which
            the new enum option should be inserted. Cannot be provided together with
            before_enum_option
          example: "12345"
          x-ballerina-name: afterEnumOption
        enum_option:
          type: string
          description: The gid of the enum option to relocate
          example: "97285"
          x-ballerina-name: enumOption
        before_enum_option:
          type: string
          description: An existing enum option within this custom field before which
            the new enum option should be inserted. Cannot be provided together with
            after_enum_option
          example: "12345"
          x-ballerina-name: beforeEnumOption
    GoalRequestAllOf2:
      type: object
      properties:
        followers:
          type: array
          example:
          - "12345"
          items:
            type: string
            description: The `gid` of a user.
    WorkspaceGidProjectsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectRequest'
    PortfolioMembershipResponse:
      $ref: '#/components/schemas/PortfolioMembershipBase'
    WebhookRequestFilters:
      description: A set of filters to specify a whitelist for what types of events
        will be delivered
      allOf:
      - $ref: '#/components/schemas/WebhookFilter'
      - $ref: '#/components/schemas/FiltersAllOf2'
    AuditLogEventActor:
      type: object
      properties:
        gid:
          type: string
          description: "Globally unique identifier of the actor, if it is a user"
          example: "1111"
        actor_type:
          type: string
          description: |-
            The type of actor.
            Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`
          example: user
          enum:
          - user
          - asana
          - asana_support
          - anonymous
          - external_administrator
          x-ballerina-name: actorType
        name:
          type: string
          description: "The name of the actor, if it is a user"
          example: Greg Sanchez
        email:
          type: string
          description: "The email of the actor, if it is a user"
          example: gregsanchez@example.com
      description: The entity that triggered the event. Will typically be a user
    GoalMembershipCompact:
      allOf:
      - $ref: '#/components/schemas/GoalMembershipBase'
      - $ref: '#/components/schemas/GoalMembershipCompactAllOf2'
    BatchResponse:
      type: object
      properties:
        headers:
          type: object
          description: A map of HTTP headers specific to this result. This is primarily
            used for returning a `Location` header to accompany a `201 Created` result.  The
            parent HTTP response will contain all common headers
          example:
            location: /tasks/1234
        status_code:
          type: integer
          description: The HTTP status code that the invoked endpoint returned
          example: 200
          x-ballerina-name: statusCode
        body:
          type: object
          description: The JSON body that the invoked endpoint returned
          example:
            data:
              gid: "1967"
              completed: false
              name: "Hello, world!"
              notes: How are you today?
      description: A response object returned from a batch request
    SectionTaskInsertRequest:
      required:
      - task
      type: object
      properties:
        insert_before:
          type: string
          description: An existing task within this section before which the added
            task should be inserted. Cannot be provided together with insert_after
          example: "86420"
          x-ballerina-name: insertBefore
        task:
          type: string
          description: The task to add to this section
          example: "123456"
        insert_after:
          type: string
          description: An existing task within this section after which the added
            task should be inserted. Cannot be provided together with insert_before
          example: "987654"
          x-ballerina-name: insertAfter
    MembershipsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateMembershipRequest'
    ProjectMembershipBase:
      $ref: '#/components/schemas/ProjectMembershipCompact'
    CustomFieldSettingBase:
      $ref: '#/components/schemas/CustomFieldSettingCompact'
    ProjectGidSectionsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionRequest'
    TaskAddTagRequest:
      required:
      - tag
      type: object
      properties:
        tag:
          type: string
          description: The tag's gid to add to the task
          example: "13579"
    AllocationRequestAllOf2:
      type: object
      properties:
        parent:
          type: string
          description: Globally unique identifier for the project the allocation is
            on
        effort:
          $ref: '#/components/schemas/EffortCompact'
        assignee:
          type: string
          description: Globally unique identifier for the user who is assigned to
            the allocation
    RuleTriggerResponse:
      type: object
      properties:
        message:
          type: string
          description: Message providing more detail about the result
          example: Successfully saved the payload and ran the rule
    TemplateRoleAllOf2:
      type: object
      properties:
        name:
          type: string
          description: Name of the template role
          example: Designer
    TaskAddProjectRequest:
      required:
      - project
      type: object
      properties:
        insert_before:
          type: string
          description: "A task in the project to insert the task before, or `null`\
            \ to insert at the end of the list"
          nullable: true
          example: "432134"
          x-ballerina-name: insertBefore
        project:
          type: string
          description: The project to add the task to
          example: "13579"
        section:
          type: string
          description: A section in the project to insert the task into. The task
            will be inserted at the bottom of the section
          nullable: true
          example: "987654"
        insert_after:
          type: string
          description: "A task in the project to insert the task after, or `null`\
            \ to insert at the beginning of the list"
          nullable: true
          example: "124816"
          x-ballerina-name: insertAfter
    MemberCompact:
      properties:
        resource_type:
          type: string
          description: The type of the member (team or user)
          example: user
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - type: object
        properties:
          name:
            type: string
            description: The name of the member
            example: Greg Sanchez
          resource_type:
            type: string
            description: The type of the member (team or user)
            example: user
            x-ballerina-name: resourceType
        description: A *member* object represents either a team or user
        x-docs-overrides:
          properties.resource_type.example: member
    TagsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagRequest'
    GoalCompactAllOf2:
      type: object
      properties:
        owner:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - type: object
            nullable: true
        name:
          type: string
          description: The name of the goal
          example: Grow web traffic by 30%
      x-docs-overrides:
        properties.resource_type.example: goal
    TeamGidAddUserBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamAddUserRequest'
    ProjectBase:
      allOf:
      - $ref: '#/components/schemas/ProjectCompact'
      - $ref: '#/components/schemas/ProjectBaseAllOf2'
    RuleTriggerGidRunBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RuleTriggerRequest'
    CustomFieldResponse:
      properties:
        id_prefix:
          type: string
          description: This field is the unique custom ID string for the custom field.
          nullable: true
          example: ID
        is_formula_field:
          type: boolean
          description: '*Conditional*. This flag describes whether a custom field
            is a formula custom field.'
          example: false
        representation_type:
          type: string
          description: This field tells the type of the custom field.
          readOnly: true
          example: number
          enum:
          - text
          - enum
          - multi_enum
          - number
          - date
          - people
          - formula
          - custom_id
      allOf:
      - $ref: '#/components/schemas/CustomFieldBase'
      - type: object
        properties:
          representation_type:
            type: string
            description: This field tells the type of the custom field
            readOnly: true
            example: number
            enum:
            - text
            - enum
            - multi_enum
            - number
            - date
            - people
            - formula
            - custom_id
            x-ballerina-name: representationType
          is_value_read_only:
            type: boolean
            description: '*Conditional*. This flag describes whether a custom field
              is read only'
            example: false
            x-ballerina-name: isValueReadOnly
          people_value:
            type: array
            description: "*Conditional*. Only relevant for custom fields of type `people`.\
              \ This array of [compact user](/reference/users) objects reflects the\
              \ values of a `people` custom field"
            items:
              $ref: '#/components/schemas/UserCompact'
            x-ballerina-name: peopleValue
          is_formula_field:
            type: boolean
            description: '*Conditional*. This flag describes whether a custom field
              is a formula custom field'
            example: false
            x-ballerina-name: isFormulaField
          id_prefix:
            type: string
            description: This field is the unique custom ID string for the custom
              field
            nullable: true
            example: ID
            x-ballerina-name: idPrefix
          created_by:
            allOf:
            - $ref: '#/components/schemas/UserCompact'
            - nullable: true
            x-ballerina-name: createdBy
    TeamRequestAllOf2:
      type: object
      properties:
        edit_team_visibility_or_trash_team_access_level:
          type: string
          description: |
            Controls who can edit team visibility and trash teams
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: editTeamVisibilityOrTrashTeamAccessLevel
        join_request_management_access_level:
          type: string
          description: |
            Controls who can accept or deny join team requests for a Membership by Request team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: joinRequestManagementAccessLevel
        visibility:
          type: string
          description: |
            The visibility of the team to users in the same organization
          enum:
          - secret
          - request_to_join
          - public
        team_member_removal_access_level:
          type: string
          description: |
            Controls who can remove team members
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: teamMemberRemovalAccessLevel
        member_invite_management_access_level:
          type: string
          description: |
            Controls who can accept or deny member invites for a given team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: memberInviteManagementAccessLevel
        organization:
          type: string
          description: |
            The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set
          example: "123456789"
        edit_team_name_or_description_access_level:
          type: string
          description: |
            Controls who can edit team name and description
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: editTeamNameOrDescriptionAccessLevel
        description:
          type: string
          description: |
            The description of the team
          example: All developers should be members of this team.
        guest_invite_management_access_level:
          type: string
          description: |
            Controls who can accept or deny guest invites for a given team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: guestInviteManagementAccessLevel
        html_description:
          type: string
          description: |
            The description of the team with formatting as HTML
          example: <body><em>All</em> developers should be members of this team.</body>
          x-ballerina-name: htmlDescription
    JobCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/JobCompactAllOf2'
    ProjectCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: "Name of the project. This is generally a short sentence fragment\
            \ that fits on a line in the UI for maximum readability. However, it can\
            \ be longer"
          example: Stuff to buy
      description: "A *project* represents a prioritized list of tasks in Asana or\
        \ a board with columns of tasks represented as cards. It exists in a single\
        \ workspace or organization and is accessible to a subset of users in that\
        \ workspace or organization, depending on its permissions"
      x-docs-overrides:
        properties.resource_type.example: project
    PortfolioRequest:
      allOf:
      - $ref: '#/components/schemas/PortfolioBase'
      - $ref: '#/components/schemas/PortfolioRequestAllOf2'
    ProjectGidProjectBriefsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectBriefRequest'
    TaskTemplateBase:
      allOf:
      - $ref: '#/components/schemas/TaskTemplateCompact'
    WorkspaceAddUserRequest:
      type: object
      properties:
        user:
          type: string
          description: "A string identifying a user. This can either be the string\
            \ \"me\", an email, or the gid of a user"
          example: "12345"
      description: A user identification object for specification with the addUser/removeUser
        endpoints
    ProjectBriefCompactAllOf2:
      type: object
      description: A *Project Brief* allows you to explain the what and why of the
        project to your team
      x-docs-overrides:
        properties.resource_type.example: project_brief
    TimeTrackingEntryBaseAllOf2:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/TaskCompact'
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
    WebhookFilter:
      type: object
      properties:
        resource_type:
          type: string
          description: "The type of the resource which created the event when modified;\
            \ for example, to filter to changes on regular tasks this field should\
            \ be set to `task`"
          example: task
          x-ballerina-name: resourceType
        action:
          type: string
          description: "The type of change on the **resource** to pass through the\
            \ filter. For more information refer to `Event.action` in the [event](/reference/events)\
            \ schema. This can be one of `changed`, `added`, `removed`, `deleted`,\
            \ and `undeleted` depending on the nature of what has occurred on the\
            \ resource"
          example: changed
        fields:
          type: array
          description: '*Conditional.* A whitelist of fields for events which will
            pass the filter when the resource is changed. These can be any combination
            of the fields on the resources themselves. This field is only valid for
            `action` of type `changed`'
          example:
          - due_at
          - due_on
          - dependencies
          items:
            type: string
        resource_subtype:
          type: string
          description: The resource subtype of the resource that the filter applies
            to. This should be set to the same value as is returned on the `resource_subtype`
            field on the resources themselves
          example: milestone
          x-ballerina-name: resourceSubtype
      description: "A WebhookFilter can be passed on creation of a webhook in order\
        \ to filter the types of actions that trigger delivery of an [event](/reference/events)"
    TeamMembershipBase:
      $ref: '#/components/schemas/TeamMembershipCompact'
    UserBaseResponse:
      allOf:
      - $ref: '#/components/schemas/UserBase'
      - $ref: '#/components/schemas/UserBaseResponseAllOf2'
    GoalRelationshipResponseAllOf2:
      type: object
    MembershipResponse:
      anyOf:
      - $ref: '#/components/schemas/GoalMembershipResponse'
      - $ref: '#/components/schemas/ProjectMembershipCompactResponse'
    PortfolioRemoveItemRequest:
      required:
      - item
      type: object
      properties:
        item:
          type: string
          description: The item to remove from the portfolio
          example: "1331"
    ProjectTemplateResponse:
      allOf:
      - $ref: '#/components/schemas/ProjectTemplateBase'
    TagCreateTagForWorkspaceRequestAllOf2:
      type: object
      properties:
        followers:
          type: array
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example:
          - "12345"
          - "42563"
          items:
            type: string
    TimeTrackingEntryCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TimeTrackingEntryCompactAllOf2'
    TaskTemplateGidInstantiateTaskBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskTemplateInstantiateTaskRequest'
    TaskTemplateResponse:
      properties:
        name:
          type: string
          description: Name of the task template.
          example: Bug Report Template
      allOf:
      - $ref: '#/components/schemas/TaskTemplateBase'
      - type: object
        properties:
          template:
            description: The configuration for the task that will be created from
              this template
            allOf:
            - $ref: '#/components/schemas/TaskTemplateRecipe'
          name:
            type: string
            description: Name of the task template
            example: Bug Report Template
          project:
            description: The project that this task template belongs to
            nullable: true
            allOf:
            - $ref: '#/components/schemas/ProjectCompact'
          created_at:
            type: string
            description: The time at which this task template was created
            format: date-time
            example: 2019-01-01T00:00:00Z
            x-ballerina-name: createdAt
          created_by:
            description: The user who created this task template
            allOf:
            - $ref: '#/components/schemas/UserCompact'
            x-ballerina-name: createdBy
    GoalsgoalGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalUpdateRequest'
    GoalBase:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/GoalBaseAllOf2'
    WorkspaceResponseAllOf2:
      type: object
      properties:
        is_organization:
          type: boolean
          description: Whether the workspace is an *organization*
          example: false
          x-ballerina-name: isOrganization
        email_domains:
          type: array
          description: The email domains that are associated with this workspace
          example:
          - asana.com
          items:
            type: string
            format: uri
          x-ballerina-name: emailDomains
    MembershipCompact:
      anyOf:
      - $ref: '#/components/schemas/GoalMembershipCompact'
      - $ref: '#/components/schemas/ProjectMembershipCompactResponse'
    ProjectBriefBase:
      allOf:
      - $ref: '#/components/schemas/ProjectBriefCompact'
      - $ref: '#/components/schemas/ProjectBriefBaseAllOf2'
    PortfolioCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the portfolio
          example: Bug Portfolio
      description: |-
        A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update.
        Portfolios have some restrictions on size. Each portfolio has a max of 500 items and, like projects, a max of 20 custom fields
      x-docs-overrides:
        properties.resource_type.example: portfolio
    AllocationResponse:
      allOf:
      - $ref: '#/components/schemas/AllocationCompact'
      - $ref: '#/components/schemas/AllocationResponseAllOf2'
    GoalMetricCurrentValueRequest:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/GoalMetricCurrentValueRequestAllOf2'
    EnumOptionRequestAllOf2:
      type: object
      properties:
        insert_before:
          type: string
          description: An existing enum option within this custom field before which
            the new enum option should be inserted. Cannot be provided together with
            after_enum_option
          example: "12345"
          x-ballerina-name: insertBefore
        insert_after:
          type: string
          description: An existing enum option within this custom field after which
            the new enum option should be inserted. Cannot be provided together with
            before_enum_option
          example: "12345"
          x-ballerina-name: insertAfter
    TaskTemplateRecipeCompact:
      allOf:
      - $ref: '#/components/schemas/TaskTemplateRecipeCompactAllOf1'
    SectionBase:
      $ref: '#/components/schemas/SectionCompact'
    UserTaskListCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/UserTaskListCompactAllOf2'
    WorkspaceRemoveUserRequest:
      type: object
      properties:
        user:
          type: string
          description: "A string identifying a user. This can either be the string\
            \ \"me\", an email, or the gid of a user"
          example: "12345"
      description: A user identification object for specification with the addUser/removeUser
        endpoints
    TaskTemplateCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TaskTemplateCompactAllOf2'
    PortfolioBase:
      allOf:
      - $ref: '#/components/schemas/PortfolioCompact'
      - $ref: '#/components/schemas/PortfolioBaseAllOf2'
    UserRequest:
      $ref: '#/components/schemas/UserBase'
    TaskSetParentRequest:
      required:
      - parent
      type: object
      properties:
        parent:
          type: string
          description: "The new parent of the task, or `null` for no parent"
          example: "987654"
        insert_before:
          type: string
          description: "A subtask of the parent to insert the task before, or `null`\
            \ to insert at the end of the list"
          example: "124816"
          x-ballerina-name: insertBefore
        insert_after:
          type: string
          description: "A subtask of the parent to insert the task after, or `null`\
            \ to insert at the beginning of the list"
          example: "null"
          x-ballerina-name: insertAfter
    AsanaNamedResourceAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the object
          example: Bug Task
    ProjectTemplateGidInstantiateProjectBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectTemplateInstantiateProjectRequest'
    EnumOption:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/EnumOptionAllOf2'
    UserCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/UserCompactAllOf2'
    TaskGidRemoveProjectBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskRemoveProjectRequest'
    EnumOptionRequest:
      allOf:
      - $ref: '#/components/schemas/EnumOptionBase'
      - $ref: '#/components/schemas/EnumOptionRequestAllOf2'
    ProjectBriefCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/ProjectBriefCompactAllOf2'
    ProjectResponse:
      allOf:
      - $ref: '#/components/schemas/ProjectBase'
      - $ref: '#/components/schemas/ProjectResponseAllOf2'
    TimePeriodBaseAllOf2:
      type: object
      properties:
        parent:
          allOf:
          - $ref: '#/components/schemas/TimePeriodCompact'
          - nullable: true
    TeamBase:
      $ref: '#/components/schemas/TeamCompact'
    UserBase:
      $ref: '#/components/schemas/UserCompact'
    ProjectBriefRequest:
      allOf:
      - $ref: '#/components/schemas/ProjectBriefBase'
      - $ref: '#/components/schemas/ProjectBriefRequestAllOf2'
    GoalMetricCurrentValueRequestAllOf2:
      type: object
      properties:
        current_number_value:
          type: number
          description: '*Conditional*. This number is the current value of a goal
            metric of type number'
          example: 8.12
          x-ballerina-name: currentNumberValue
    AuditLogEventContext:
      type: object
      properties:
        oauth_app_name:
          type: string
          description: |-
            The name of the OAuth App that initiated the event.
            Only present if the `api_authentication_method` is `oauth`
          x-ballerina-name: oauthAppName
        context_type:
          type: string
          description: |-
            The type of context.
            Can be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`
          example: web
          enum:
          - web
          - desktop
          - mobile
          - asana_support
          - asana
          - email
          - api
          x-ballerina-name: contextType
        client_ip_address:
          type: string
          description: "The IP address of the client that initiated the event, if\
            \ applicable"
          example: 1.1.1.1
          x-ballerina-name: clientIpAddress
        user_agent:
          type: string
          description: "The user agent of the client that initiated the event, if\
            \ applicable"
          example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
          x-ballerina-name: userAgent
        api_authentication_method:
          type: string
          description: |-
            The authentication method used in the context of an API request.
            Only present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`
          enum:
          - cookie
          - oauth
          - personal_access_token
          - service_account
          x-ballerina-name: apiAuthenticationMethod
      description: The context from which this event originated
    GoalGidRemoveFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskAddFollowersRequest'
    OrganizationExportResponse:
      $ref: '#/components/schemas/OrganizationExportBase'
    ProjectSaveAsTemplateRequest:
      required:
      - name
      - public
      type: object
      properties:
        workspace:
          type: string
          description: Sets the workspace of the new project template. Only specify
            workspace if the project exists in a workspace
          example: "12345"
        public:
          type: boolean
          description: Sets the project template to public to its team
          example: true
        name:
          type: string
          description: The name of the new project template
          example: New Project Template
        team:
          type: string
          description: "Sets the team of the new project template. If the project\
            \ exists in an organization, specify team and not workspace"
          example: "12345"
    PortfolioGidAddCustomFieldSettingBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddCustomFieldSettingRequest'
    GoalRelationshipBaseAllOf2:
      type: object
      properties:
        supported_goal:
          allOf:
          - $ref: '#/components/schemas/GoalCompact'
          - type: object
            description: The goal that the supporting resource supports.
            readOnly: true
          x-ballerina-name: supportedGoal
    TimePeriodCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TimePeriodCompactAllOf2'
    UserCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: '*Read-only except when same user as requester*. The user’s
            name'
          example: Greg Sanchez
      description: "A *user* object represents an account in Asana that can be given\
        \ access to various workspaces, projects, and tasks"
      x-docs-overrides:
        properties.resource_type.example: user
    BatchBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchRequest'
    ProjectGidRemoveMembersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RemoveMembersRequest'
    ModifyDependentsRequest:
      type: object
      properties:
        dependents:
          type: array
          description: An array of task gids that are dependents of the given task
          items:
            type: string
      description: A set of dependent tasks
      example:
        dependents:
        - "133713"
        - "184253"
    CustomFieldscustomFieldGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldRequest'
    TaskResponseAllOf2:
      type: object
      properties:
        parent:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          - type: object
            description: "The parent of this task, or `null` if this is not a subtask.\
              \ This property cannot be modified using a PUT request but you can change\
              \ it with the `setParent` endpoint. You can create subtasks by using\
              \ the subtasks endpoint."
            nullable: true
            readOnly: true
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
            description: "*Create-only*. The workspace this task is associated with.\
              \ Once created, task cannot be moved to a different workspace. This\
              \ attribute can only be specified at creation time."
            readOnly: true
        followers:
          type: array
          description: Array of users following this task
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
        projects:
          type: array
          description: "*Create-only.* Array of projects this task is associated with.\
            \ At task creation time, this array can be used to add the task to many\
            \ projects at once. After task creation, these associations can be modified\
            \ using the addProject and removeProject endpoints"
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectCompact'
        custom_fields:
          type: array
          description: "Array of custom field values applied to the task. These represent\
            \ the custom field values recorded on this project for a particular custom\
            \ field. For example, these custom field values will contain an `enum_value`\
            \ property for custom fields of type `enum`, a `text_value` property for\
            \ custom fields of type `text`, and so on. Please note that the `gid`\
            \ returned on each custom field value *is identical* to the `gid` of the\
            \ custom field, which allows referencing the custom field metadata through\
            \ the `/custom_fields/custom_field-gid` endpoint"
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldResponse'
          x-ballerina-name: customFields
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          - nullable: true
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/resource/123456789/list
          x-ballerina-name: permalinkUrl
        assignee_section:
          allOf:
          - $ref: '#/components/schemas/SectionCompact'
          - type: object
            description: |-
              The *assignee section* is a subdivision of a project that groups tasks together in the assignee's "My Tasks" list. It can either be a header above a list of tasks in a list view or a column in a board view of "My Tasks."
              The `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user's "My Tasks" list.
            nullable: true
          x-ballerina-name: assigneeSection
        tags:
          type: array
          description: Array of tags associated with this task. In order to change
            tags on an existing task use `addTag` and `removeTag`
          readOnly: true
          example:
          - gid: "59746"
            name: Grade A
          items:
            $ref: '#/components/schemas/TagCompact'
    StatusUpdateBase:
      allOf:
      - $ref: '#/components/schemas/StatusUpdateCompact'
      - $ref: '#/components/schemas/StatusUpdateBaseAllOf2'
    PortfoliosportfolioGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioRequest'
    AllocationBase:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/AllocationBaseAllOf2'
    StatusUpdateRequestAllOf2:
      required:
      - parent
      type: object
      properties:
        parent:
          allOf:
          - type: string
            description: "The id of parent to send this status update to. This can\
              \ be a project, goal or portfolio."
    TaskTemplateRecipeCompactAllOf1:
      type: object
      properties:
        task_resource_subtype:
          type: string
          description: The subtype of the task that will be created from this template
          example: default_task
          enum:
          - default_task
          - milestone_task
          - approval_task
          x-ballerina-name: taskResourceSubtype
        name:
          type: string
          description: Name of the task that will be created from this template
          example: Bug Report
    WorkspaceGidRemoveUserBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceRemoveUserRequest'
    UserResponse:
      allOf:
      - $ref: '#/components/schemas/UserBaseResponse'
      - $ref: '#/components/schemas/UserResponseAllOf2'
    AuditLogEvent:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/AuditLogEventActor'
        gid:
          type: string
          description: "Globally unique identifier of the `AuditLogEvent`, as a string"
          example: "12345"
          x-insert-after: false
        event_type:
          type: string
          description: The type of the event
          example: task_deleted
          x-ballerina-name: eventType
        resource:
          $ref: '#/components/schemas/AuditLogEventResource'
        context:
          $ref: '#/components/schemas/AuditLogEventContext'
        created_at:
          type: string
          description: The time the event was created
          format: date-time
          example: 2021-01-01T00:00:00Z
          x-ballerina-name: createdAt
        details:
          $ref: '#/components/schemas/AuditLogEventDetails'
        event_category:
          type: string
          description: The category that this `event_type` belongs to
          example: deletion
          x-ballerina-name: eventCategory
      description: |-
        An object representing a single event within an Asana domain.

        Every audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/audit-log-events#supported-audit-log-events) for more details
    TeamAddUserRequest:
      type: object
      properties:
        user:
          type: string
          description: "A string identifying a user. This can either be the string\
            \ \"me\", an email, or the gid of a user"
          example: "12345"
      description: A user identification object for specification with the addUser/removeUser
        endpoints
    TaskCountResponse:
      type: object
      properties:
        num_tasks:
          type: integer
          description: The number of tasks in a project
          example: 200
          x-ballerina-name: numTasks
        num_incomplete_tasks:
          type: integer
          description: The number of incomplete tasks in a project
          example: 50
          x-ballerina-name: numIncompleteTasks
        num_incomplete_milestones:
          type: integer
          description: The number of incomplete milestones in a project
          example: 7
          x-ballerina-name: numIncompleteMilestones
        num_milestones:
          type: integer
          description: The number of milestones in a project
          example: 10
          x-ballerina-name: numMilestones
        num_completed_tasks:
          type: integer
          description: The number of completed tasks in a project
          example: 150
          x-ballerina-name: numCompletedTasks
        num_completed_milestones:
          type: integer
          description: The number of completed milestones in a project
          example: 3
          x-ballerina-name: numCompletedMilestones
      description: A response object returned from the task count endpoint
    TaskTemplateInstantiateTaskRequest:
      type: object
      properties:
        name:
          type: string
          description: "The name of the new task. If not provided, the name of the\
            \ task template will be used"
          example: New Task
    GoalRelationshipsgoalRelationshipGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRelationshipRequest'
    GoalMembershipBase:
      properties:
        resource_type:
          type: string
          description: The base type of this resource.
          example: membership
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - type: object
        properties:
          access_level:
            type: string
            description: Describes if member is commenter or editor in goal. This
              is preferred over role
            example: editor
            enum:
            - commenter
            - editor
            x-ballerina-name: accessLevel
          parent:
            allOf:
            - $ref: '#/components/schemas/GoalCompact'
            - type: object
              readOnly: true
          role:
            type: string
            description: "*Deprecated: Describes if the member is a commenter or editor\
              \ in goal.*"
            example: editor
            enum:
            - commenter
            - editor
          goal:
            allOf:
            - $ref: '#/components/schemas/GoalCompact'
            - type: object
              description: "*Deprecated: new integrations should prefer the `parent`\
                \ field.* A *Goal* is an object in the goal-tracking system that helps\
                \ your organization drive measurable results."
              readOnly: true
              deprecated: true
          resource_type:
            type: string
            description: The base type of this resource
            example: membership
            x-ballerina-name: resourceType
          member:
            $ref: '#/components/schemas/MemberCompact'
          resource_subtype:
            type: string
            description: The type of membership
            readOnly: true
            example: goal_membership
            x-ballerina-name: resourceSubtype
        description: This object represents a user's connection to a goal
        x-docs-overrides:
          properties.resource_type.example: membership
    StatusUpdateCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/StatusUpdateCompactAllOf2'
    GoalsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRequest'
    AllocationResponseAllOf2:
      type: object
      properties:
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
        resource_subtype:
          type: string
          description: The subtype of the allocation
          example: project_allocation
          x-ballerina-name: resourceSubtype
    InlineResponse20019:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    CustomFieldSettingResponse:
      allOf:
      - $ref: '#/components/schemas/CustomFieldSettingBase'
      - $ref: '#/components/schemas/CustomFieldSettingResponseAllOf2'
    PortfolioGidRemoveItemBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioRemoveItemRequest'
    GoalMembershipResponse:
      allOf:
      - $ref: '#/components/schemas/GoalMembershipBase'
      - $ref: '#/components/schemas/GoalMembershipResponseAllOf2'
    ProjectTemplateCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/ProjectTemplateCompactAllOf2'
    RequestedRoleRequest:
      type: object
      properties:
        gid:
          type: string
          description: Globally unique identifier of the template role in the project
            template
          example: "1"
        value:
          type: string
          description: The user id that should be assigned to the template role
          example: "123"
    InlineResponse20021:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    InlineResponse20020:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    OrganizationExportCompactAllOf2:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/WorkspaceCompact'
        download_url:
          type: string
          description: |-
            Download this URL to retreive the full export of the organization
            in JSON format. It will be compressed in a gzip (.gz) container.

            *Note: May be null if the export is still in progress or
            failed.  If present, this URL may only be valid for 1 hour from
            the time of retrieval. You should avoid persisting this URL
            somewhere and rather refresh on demand to ensure you do not keep
            stale URLs.*
          format: uri
          nullable: true
          readOnly: true
          example: https://asana-export-us-east-1.s3.us-east-1.amazonaws.com/2563645399633793/domain_export/7588024658887731/download/
            domain_export_2563645399633793_7588024658887731_2023018-201726.json.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&
            X-Amz-Content-Sha256=xxxxxxxx&X-Amz-Date=xxxxxxxx&X-Amz-Expires=300&X-Amz-Security-Token=xxxxxxxx&
            X-Amz-Signature=xxxxxxxx&X-Amz-SignedHeaders=host&x-id=GetObject#_=_
          x-ballerina-name: downloadUrl
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        state:
          type: string
          description: The current state of the export
          readOnly: true
          example: started
          enum:
          - pending
          - started
          - finished
          - error
      description: An *organization_export* object represents a request to export
        the complete data of an Organization in JSON format
      x-docs-overrides:
        properties.resource_type.example: organization_export
    InlineResponse20023:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/GoalCompact'
    InlineResponse20022:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    WorkspaceMembershipResponseVacationDates:
      type: object
      properties:
        start_on:
          type: string
          description: The day on which the user's vacation in this workspace starts.
            This is a date with `YYYY-MM-DD` format
          example: 2022-11-05
          x-ballerina-name: startOn
        end_on:
          type: string
          description: "The day on which the user's vacation in this workspace ends,\
            \ or null if there is no end date. This is a date with `YYYY-MM-DD` format"
          nullable: true
          example: 2022-11-07
          x-ballerina-name: endOn
      description: "Contains keys `start_on` and `end_on` for the vacation dates for\
        \ the user in this workspace. If `start_on` is null, the entire `vacation_dates`\
        \ object will be null. If `end_on` is before today, the entire `vacation_dates`\
        \ object will be null"
      nullable: true
      readOnly: true
    InlineResponse20025:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    AttachmentRequest:
      required:
      - parent
      type: object
      properties:
        connect_to_app:
          type: boolean
          description: |
            *Optional*. Only relevant for external attachments with a parent task. A boolean indicating whether the current app should be connected with the attachment for the purposes of showing an app components widget. Requires the app to have been added to a project the parent task is in
          x-ballerina-name: connectToApp
        parent:
          type: string
          description: |
            Required identifier of the parent task, project, or project_brief, as a string
        file:
          type: string
          description: |
            Required for `asana` attachments
          format: binary
        name:
          type: string
          description: |
            The name of the external resource being attached. Required for attachments of type `external`
        resource_subtype:
          type: string
          description: |
            The type of the attachment. Must be one of the given values. If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided
          example: external
          enum:
          - asana
          - dropbox
          - gdrive
          - onedrive
          - box
          - vimeo
          - external
          x-ballerina-name: resourceSubtype
        url:
          type: string
          description: |
            The URL of the external resource being attached. Required for attachments of type `external`
    InlineResponse20024:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    InlineResponse20027:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    TaskResponse:
      allOf:
      - $ref: '#/components/schemas/TaskBase'
      - $ref: '#/components/schemas/TaskResponseAllOf2'
    InlineResponse20026:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalResponse'
    InlineResponse20029:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    InlineResponse20028:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GoalCompact'
    CreateMembershipRequestAllOf2:
      type: object
      properties:
        parent:
          type: string
          description: The gid of the `goal` or `project` to add the member to
          example: "987654"
        role:
          type: string
          description: "The role given to the member. Optional argument, will default\
            \ to `commenter` for goals and the default project role for projects.\
            \ Can be `editor` or `commenter` for goals. Can be `admin`,`editor` or\
            \ `commenter` for projects"
          example: editor
        member:
          type: string
          description: The gid of the user or team
          example: "12345"
    SectionResponseAllOf2:
      type: object
      properties:
        projects:
          type: array
          description: '*Deprecated - please use project instead*'
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectCompact'
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        project:
          $ref: '#/components/schemas/ProjectCompact'
    OrganizationExportRequest:
      type: object
      properties:
        organization:
          type: string
          description: Globally unique identifier for the workspace or organization
          example: "1331"
      description: An *organization_export* request starts a job to export the complete
        data of the given Organization
    TaskCompactCreatedBy:
      type: object
      properties:
        gid:
          type: string
          description: Globally unique identifier of the resource
          example: "1111"
        resource_type:
          type: string
          description: The type of resource
          example: user
          x-ballerina-name: resourceType
      description: "[Opt In](/docs/inputoutput-options). A *user* object represents\
        \ an account in Asana that can be given access to various workspaces, projects,\
        \ and tasks"
      readOnly: true
    WorkspaceMembershipCompactAllOf2:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/WorkspaceCompact'
        user:
          $ref: '#/components/schemas/UserCompact'
      description: This object determines if a user is a member of a workspace
      x-docs-overrides:
        properties.resource_type.example: workspace_membership
    TeamResponseAllOf2:
      type: object
      properties:
        edit_team_visibility_or_trash_team_access_level:
          type: string
          description: |
            Controls who can edit team visibility and trash teams
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: editTeamVisibilityOrTrashTeamAccessLevel
        join_request_management_access_level:
          type: string
          description: |
            Controls who can accept or deny join team requests for a Membership by Request team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: joinRequestManagementAccessLevel
        visibility:
          type: string
          description: |
            The visibility of the team to users in the same organization
          enum:
          - secret
          - request_to_join
          - public
        team_member_removal_access_level:
          type: string
          description: |
            Controls who can remove team members
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: teamMemberRemovalAccessLevel
        member_invite_management_access_level:
          type: string
          description: |
            Controls who can accept or deny member invites for a given team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: memberInviteManagementAccessLevel
        organization:
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
          - type: object
            description: |
              The organization/workspace the team belongs to.
        edit_team_name_or_description_access_level:
          type: string
          description: |
            Controls who can edit team name and description
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: editTeamNameOrDescriptionAccessLevel
        description:
          type: string
          description: |
            [Opt In](/docs/inputoutput-options). The description of the team
          example: All developers should be members of this team.
        guest_invite_management_access_level:
          type: string
          description: |
            Controls who can accept or deny guest invites for a given team
          readOnly: true
          enum:
          - all_team_members
          - only_team_admins
          x-ballerina-name: guestInviteManagementAccessLevel
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/resource/123456789/list
          x-ballerina-name: permalinkUrl
        html_description:
          type: string
          description: |
            [Opt In](/docs/inputoutput-options). The description of the team with formatting as HTML
          example: <body><em>All</em> developers should be members of this team.</body>
          x-ballerina-name: htmlDescription
    EventResponseChange:
      type: object
      properties:
        added_value:
          description: "*Conditional.* This property is only present when the value\
            \ of the event's `change.action` is `added` _and_ the `added_value` is\
            \ an Asana resource. This will be only the `gid` and `resource_type` of\
            \ the resource when the events come from webhooks; this will be the compact\
            \ representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options))\
            \ when using the [get events](/reference/getevents) endpoint"
          example:
            gid: "12345"
            resource_type: user
          x-ballerina-name: addedValue
        removed_value:
          description: "*Conditional.* This property is only present when the value\
            \ of the event's `change.action` is `removed` _and_ the `removed_value`\
            \ is an Asana resource. This will be only the `gid` and `resource_type`\
            \ of the resource when the events come from webhooks; this will be the\
            \ compact representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options))\
            \ when using the [get events](/reference/getevents) endpoint"
          example:
            gid: "12345"
            resource_type: user
          x-ballerina-name: removedValue
        field:
          type: string
          description: The name of the field that has changed in the resource
          readOnly: true
          example: assignee
        action:
          type: string
          description: "The type of action taken on the **field** which has been changed.\
            \  This can be one of `changed`, `added`, or `removed` depending on the\
            \ nature of the change"
          readOnly: true
          example: changed
        new_value:
          description: "*Conditional.* This property is only present when the value\
            \ of the event's `change.action` is `changed` _and_ the `new_value` is\
            \ an Asana resource. This will be only the `gid` and `resource_type` of\
            \ the resource when the events come from webhooks; this will be the compact\
            \ representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options))\
            \ when using the [get events](/reference/getevents) endpoint"
          example:
            gid: "12345"
            resource_type: user
          x-ballerina-name: newValue
      description: "Information about the type of change that has occurred. This field\
        \ is only present when the value of the property `action`, describing the\
        \ action taken on the **resource**, is `changed`"
      readOnly: true
    InlineResponse20030:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/MembershipCompact'
    InlineResponse20032:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MembershipResponse'
    ProjectRequest:
      allOf:
      - $ref: '#/components/schemas/ProjectBase'
      - $ref: '#/components/schemas/ProjectRequestAllOf2'
    InlineResponse20031:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectMembershipCompactResponse'
    InlineResponse20034:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationExportResponse'
    InlineResponse20033:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20036:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioMembershipResponse'
    InlineResponse20035:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioMembershipCompact'
    CustomFieldBase:
      properties:
        enum_options:
          type: array
          description: "*Conditional*. Only relevant for custom fields of type `enum`.\
            \ This array specifies the possible values which an `enum` custom field\
            \ can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield)."
          items:
            $ref: '#/components/schemas/EnumOption'
      allOf:
      - $ref: '#/components/schemas/CustomFieldCompact'
      - type: object
        properties:
          has_notifications_enabled:
            type: boolean
            description: '*Conditional*. This flag describes whether a follower of
              a task with this field should receive inbox notifications from changes
              to this field'
            example: true
            x-ballerina-name: hasNotificationsEnabled
          is_global_to_workspace:
            type: boolean
            description: "This flag describes whether this custom field is available\
              \ to every container in the workspace. Before project-specific custom\
              \ fields, this field was always true"
            readOnly: true
            example: true
            x-ballerina-name: isGlobalToWorkspace
          enum_options:
            type: array
            description: "*Conditional*. Only relevant for custom fields of type `enum`.\
              \ This array specifies the possible values which an `enum` custom field\
              \ can adopt. To modify the enum options, refer to [working with enum\
              \ options](/reference/createenumoptionforcustomfield)"
            items:
              $ref: '#/components/schemas/EnumOption'
            x-ballerina-name: enumOptions
          custom_label_position:
            type: string
            description: Only relevant for custom fields with `custom` format. This
              depicts where to place the custom label. This will be null if the `format`
              is not `custom`
            nullable: true
            example: suffix
            enum:
            - prefix
            - suffix
            - null
            x-ballerina-name: customLabelPosition
          precision:
            type: integer
            description: |-
              Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
              For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
              The identifier format will always have a precision of 0
            example: 2
          format:
            type: string
            description: The format of this custom field
            example: custom
            enum:
            - currency
            - identifier
            - percentage
            - custom
            - duration
            - none
          custom_label:
            type: string
            description: This is the string that appears next to the custom field
              value. This will be null if the `format` is not `custom`
            nullable: true
            example: gold pieces
            x-ballerina-name: customLabel
          description:
            type: string
            description: "[Opt In](/docs/inputoutput-options). The description of\
              \ the custom field"
            example: Development team priority
          asana_created_field:
            type: string
            description: '*Conditional*. A unique identifier to associate this field
              with the template source of truth'
            nullable: true
            readOnly: true
            example: priority
            enum:
            - a_v_requirements
            - account_name
            - actionable
            - align_shipping_link
            - align_status
            - allotted_time
            - appointment
            - approval_stage
            - approved
            - article_series
            - board_committee
            - browser
            - campaign_audience
            - campaign_project_status
            - campaign_regions
            - channel_primary
            - client_topic_type
            - complete_by
            - contact
            - contact_email_address
            - content_channels
            - content_channels_needed
            - content_stage
            - content_type
            - contract
            - contract_status
            - cost
            - creation_stage
            - creative_channel
            - creative_needed
            - creative_needs
            - data_sensitivity
            - deal_size
            - delivery_appt
            - delivery_appt_date
            - department
            - department_responsible
            - design_request_needed
            - design_request_type
            - discussion_category
            - do_this_task
            - editorial_content_status
            - editorial_content_tag
            - editorial_content_type
            - effort
            - effort_level
            - est_completion_date
            - estimated_time
            - estimated_value
            - expected_cost
            - external_steps_needed
            - favorite_idea
            - feedback_type
            - financial
            - funding_amount
            - grant_application_process
            - hiring_candidate_status
            - idea_status
            - ids_link
            - ids_patient_link
            - implementation_stage
            - insurance
            - interview_area
            - interview_question_score
            - itero_scan_link
            - job_s_applied_to
            - lab
            - launch_status
            - lead_status
            - localization_language
            - localization_market_team
            - localization_status
            - meeting_minutes
            - meeting_needed
            - minutes
            - mrr
            - must_localize
            - name_of_foundation
            - need_to_follow_up
            - next_appointment
            - next_steps_sales
            - num_people
            - number_of_user_reports
            - office_location
            - onboarding_activity
            - owner
            - participants_needed
            - patient_date_of_birth
            - patient_email
            - patient_phone
            - patient_status
            - phone_number
            - planning_category
            - point_of_contact
            - position
            - post_format
            - prescription
            - priority
            - priority_level
            - product
            - product_stage
            - progress
            - project_size
            - project_status
            - proposed_budget
            - publish_status
            - reason_for_scan
            - referral
            - request_type
            - research_status
            - responsible_department
            - responsible_team
            - risk_assessment_status
            - room_name
            - sales_counterpart
            - sentiment
            - shipping_link
            - social_channels
            - stage
            - status
            - status_design
            - status_of_initiative
            - system_setup
            - task_progress
            - team
            - team_marketing
            - team_responsible
            - time_it_takes_to_complete_tasks
            - timeframe
            - treatment_type
            - type_work_requests_it
            - use_agency
            - user_name
            - vendor_category
            - vendor_type
            - word_count
            - null
            x-ballerina-name: asanaCreatedField
          currency_code:
            type: string
            description: ISO 4217 currency code to format this custom field. This
              will be null if the `format` is not `currency`
            nullable: true
            example: EUR
            x-ballerina-name: currencyCode
    InlineResponse20038:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioCompact'
    StoryResponseAllOf2:
      type: object
      properties:
        old_date_value:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/StoryResponseDates'
          x-ballerina-name: oldDateValue
        old_enum_value:
          allOf:
          - $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: oldEnumValue
        old_multi_enum_values:
          type: array
          description: '*Conditional*. The old value of a multi-enum custom field
            story'
          readOnly: true
          items:
            $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: oldMultiEnumValues
        old_dates:
          allOf:
          - $ref: '#/components/schemas/StoryResponseDates'
          x-ballerina-name: oldDates
        new_resource_subtype:
          type: string
          description: '*Conditional*'
          readOnly: true
          example: milestone
          x-ballerina-name: newResourceSubtype
        project:
          $ref: '#/components/schemas/ProjectCompact'
        hearted:
          type: boolean
          description: |-
            *Deprecated - please use likes instead*
            *Conditional*. True if the story is hearted by the authorized user, false if not
          readOnly: true
          example: false
        new_section:
          allOf:
          - $ref: '#/components/schemas/SectionCompact'
          x-ballerina-name: newSection
        source:
          type: string
          description: The component of the Asana product the user used to trigger
            the story
          readOnly: true
          example: web
          enum:
          - web
          - email
          - mobile
          - api
          - unknown
        type:
          type: string
          readOnly: true
          example: comment
          enum:
          - comment
          - system
        liked:
          type: boolean
          description: "*Conditional*. True if the story is liked by the authorized\
            \ user, false if not"
          readOnly: true
          example: false
        new_people_value:
          type: array
          description: '*Conditional*. The new value of a people custom field story'
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: newPeopleValue
        old_section:
          allOf:
          - $ref: '#/components/schemas/SectionCompact'
          x-ballerina-name: oldSection
        old_text_value:
          type: string
          description: '*Conditional*'
          readOnly: true
          example: This was the Old Text
          x-ballerina-name: oldTextValue
        new_number_value:
          type: integer
          description: '*Conditional*'
          readOnly: true
          example: 2
          x-ballerina-name: newNumberValue
        old_resource_subtype:
          type: string
          description: '*Conditional*'
          readOnly: true
          example: default_task
          x-ballerina-name: oldResourceSubtype
        duplicated_from:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          x-ballerina-name: duplicatedFrom
        hearts:
          type: array
          description: |-
            *Deprecated - please use likes instead*

            *Conditional*. Array of likes for users who have hearted this story
          readOnly: true
          items:
            $ref: '#/components/schemas/Like'
        old_number_value:
          type: integer
          description: '*Conditional*'
          nullable: true
          readOnly: true
          example: 1
          x-ballerina-name: oldNumberValue
        num_likes:
          type: integer
          description: '*Conditional*. The number of users who have liked this story'
          readOnly: true
          example: 5
          x-ballerina-name: numLikes
        tag:
          $ref: '#/components/schemas/TagCompact'
        num_hearts:
          type: integer
          description: |-
            *Deprecated - please use likes instead*

            *Conditional*. The number of users who have hearted this story
          readOnly: true
          example: 5
          x-ballerina-name: numHearts
        new_multi_enum_values:
          type: array
          description: '*Conditional*. The new value of a multi-enum custom field
            story'
          readOnly: true
          items:
            $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: newMultiEnumValues
        likes:
          type: array
          description: '*Conditional*. Array of likes for users who have liked this
            story'
          readOnly: true
          items:
            $ref: '#/components/schemas/Like'
        new_name:
          type: string
          description: '*Conditional*'
          nullable: true
          readOnly: true
          example: This is the New Name
          x-ballerina-name: newName
        custom_field:
          allOf:
          - $ref: '#/components/schemas/CustomFieldCompact'
          x-ballerina-name: customField
        follower:
          $ref: '#/components/schemas/UserCompact'
        dependency:
          $ref: '#/components/schemas/TaskCompact'
        old_approval_status:
          type: string
          description: '*Conditional*. The old value of approval status'
          readOnly: true
          example: pending
          x-ballerina-name: oldApprovalStatus
        new_dates:
          allOf:
          - $ref: '#/components/schemas/StoryResponseDates'
          x-ballerina-name: newDates
        is_editable:
          type: boolean
          description: '*Conditional*. Whether the text of the story can be edited
            after creation'
          readOnly: true
          example: false
          x-ballerina-name: isEditable
        is_edited:
          type: boolean
          description: '*Conditional*. Whether the text of the story has been edited
            after creation'
          readOnly: true
          example: false
          x-ballerina-name: isEdited
        new_date_value:
          description: '*Conditional* The new value of a date custom field story'
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/StoryResponseDates'
          x-ballerina-name: newDateValue
        new_approval_status:
          type: string
          description: '*Conditional*. The new value of approval status'
          readOnly: true
          example: approved
          x-ballerina-name: newApprovalStatus
        duplicate_of:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          x-ballerina-name: duplicateOf
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: createdBy
        target:
          allOf:
          - $ref: '#/components/schemas/TaskCompact'
          - type: object
            description: The object this story is associated with. Currently may only
              be a task.
            readOnly: true
        task:
          $ref: '#/components/schemas/TaskCompact'
        old_people_value:
          type: array
          description: '*Conditional*. The old value of a people custom field story'
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
          x-ballerina-name: oldPeopleValue
        old_name:
          type: string
          description: '*Conditional*'''
          example: This was the Old Name
          x-ballerina-name: oldName
        previews:
          type: array
          description: |-
            *Conditional*. A collection of previews to be displayed in the story.

            *Note: This property only exists for comment stories.*
          readOnly: true
          items:
            $ref: '#/components/schemas/Preview'
        new_enum_value:
          allOf:
          - $ref: '#/components/schemas/EnumOption'
          x-ballerina-name: newEnumValue
        assignee:
          $ref: '#/components/schemas/UserCompact'
        new_text_value:
          type: string
          description: '*Conditional*'
          readOnly: true
          example: This is the New Text
          x-ballerina-name: newTextValue
        story:
          $ref: '#/components/schemas/StoryCompact'
    InlineResponse20037:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioMembershipCompact'
    UserBaseResponseAllOf2:
      type: object
      properties:
        photo:
          $ref: '#/components/schemas/UserBaseResponsePhoto'
        email:
          type: string
          description: The user's email address
          format: email
          readOnly: true
          example: gsanchez@example.com
    InlineResponse20039:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioResponse'
    TaskGidSetParentBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskSetParentRequest'
    GoalRelationshipRequest:
      allOf:
      - $ref: '#/components/schemas/GoalRelationshipBase'
      - $ref: '#/components/schemas/GoalRelationshipRequestAllOf2'
    ProjectStatusBaseAllOf2:
      type: object
      properties:
        color:
          type: string
          description: The color associated with the status update
          enum:
          - green
          - yellow
          - red
          - blue
          - complete
        html_text:
          type: string
          description: "[Opt In](/docs/inputoutput-options). The text content of the\
            \ status update with formatting as HTML"
          example: <body>The project <strong>is</strong> moving forward according
            to plan...</body>
          x-ballerina-name: htmlText
        text:
          type: string
          description: The text content of the status update
          example: The project is moving forward according to plan...
    TaskCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the task
          example: Bug Task
        resource_subtype:
          type: string
          description: |-
            The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
            The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date
          example: default_task
          enum:
          - default_task
          - milestone
          - section
          - approval
          x-ballerina-name: resourceSubtype
        created_by:
          allOf:
          - $ref: '#/components/schemas/TaskCompactCreatedBy'
          x-ballerina-name: createdBy
      description: The *task* is the basic object around which many operations in
        Asana are centered
      x-docs-overrides:
        properties.resource_type.example: task
    ProjectGidAddMembersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddMembersRequest'
    InlineResponse20041:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20040:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioResponse'
    InlineResponse20043:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    ModifyDependenciesRequest:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of task gids that a task depends on
          items:
            type: string
      example:
        dependencies:
        - "133713"
        - "184253"
    InlineResponse20042:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompact'
    InlineResponse20045:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomFieldSettingResponse'
    ProjectSectionInsertRequest:
      required:
      - section
      type: object
      properties:
        after_section:
          type: string
          description: Insert the given section immediately after the section specified
            by this parameter
          example: "987654"
          x-ballerina-name: afterSection
        before_section:
          type: string
          description: Insert the given section immediately before the section specified
            by this parameter
          example: "86420"
          x-ballerina-name: beforeSection
        section:
          type: string
          description: The section to reorder
          example: "321654"
    InlineResponse20044:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20047:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioResponse'
    TeamRemoveUserRequest:
      type: object
      properties:
        user:
          type: string
          description: "A string identifying a user. This can either be the string\
            \ \"me\", an email, or the gid of a user"
          example: "12345"
      description: A user identification object for specification with the addUser/removeUser
        endpoints
    InlineResponse20046:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20049:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectBriefResponse'
    InlineResponse20048:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PortfolioResponse'
    TeamGidProjectsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectRequest'
    StatusUpdateBaseAllOf2:
      required:
      - status_type
      - text
      type: object
      properties:
        status_type:
          type: string
          description: The type associated with the status update. This represents
            the current state of the object this object is on
          enum:
          - on_track
          - at_risk
          - off_track
          - on_hold
          - complete
          - achieved
          - partial
          - missed
          - dropped
          x-ballerina-name: statusType
        html_text:
          type: string
          description: "[Opt In](/docs/inputoutput-options). The text content of the\
            \ status update with formatting as HTML"
          example: <body>The project <strong>is</strong> moving forward according
            to plan...</body>
          x-ballerina-name: htmlText
        text:
          type: string
          description: The text content of the status update
          example: The project is moving forward according to plan...
    WebhookResponseAllOf2:
      type: object
      properties:
        last_success_at:
          type: string
          description: The timestamp when the webhook last successfully sent an event
            to the target
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: lastSuccessAt
        last_failure_content:
          type: string
          description: The contents of the last error response sent to the webhook
            when attempting to deliver events to the target
          readOnly: true
          example: 500 Server Error\n\nCould not complete the request
          x-ballerina-name: lastFailureContent
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        filters:
          type: array
          description: Whitelist of filters to apply to events from this webhook.
            If a webhook event passes any of the filters the event will be delivered;
            otherwise no event will be sent to the receiving server
          items:
            $ref: '#/components/schemas/WebhookResponseFilters'
        last_failure_at:
          type: string
          description: The timestamp when the webhook last received an error when
            sending an event to the target
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: lastFailureAt
    GoalRequest:
      allOf:
      - $ref: '#/components/schemas/GoalRequestBase'
      - $ref: '#/components/schemas/GoalRequestAllOf2'
    GoalAddSubgoalRequest:
      required:
      - subgoal
      type: object
      properties:
        insert_before:
          type: string
          description: An id of a subgoal of this parent goal. The new subgoal will
            be added before the one specified here. `insert_before` and `insert_after`
            parameters cannot both be specified
          example: "1331"
          x-ballerina-name: insertBefore
        subgoal:
          type: string
          description: The goal gid to add as subgoal to a parent goal
          example: "1331"
        insert_after:
          type: string
          description: An id of a subgoal of this parent goal. The new subgoal will
            be added after the one specified here. `insert_before` and `insert_after`
            parameters cannot both be specified
          example: "1331"
          x-ballerina-name: insertAfter
    AllocationCompact:
      allOf:
      - $ref: '#/components/schemas/AllocationBase'
      - $ref: '#/components/schemas/AllocationCompactAllOf2'
    InlineResponse20050:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectBriefResponse'
    CreateMembershipRequest:
      allOf:
      - $ref: '#/components/schemas/MembershipRequest'
      - $ref: '#/components/schemas/CreateMembershipRequestAllOf2'
    InlineResponse20052:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectMembershipNormalResponse'
    InlineResponse20051:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20054:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectStatusResponse'
    InlineResponse20053:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMembershipCompact'
    InlineResponse20056:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStatusCompact'
    AllocationRequest:
      allOf:
      - $ref: '#/components/schemas/AllocationBase'
      - $ref: '#/components/schemas/AllocationRequestAllOf2'
    InlineResponse20055:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20058:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20057:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectTemplateResponse'
    InlineResponse20059:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTemplateCompact'
    ProjectStatusCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/ProjectStatusCompactAllOf2'
    TaskGidRemoveDependentsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ModifyDependentsRequest'
    GoalAddSupportingWorkRequest:
      required:
      - supporting_work
      type: object
      properties:
        supporting_work:
          type: string
          description: The project/task/portfolio gid to add as supporting work for
            a goal
          example: "1331"
          x-ballerina-name: supportingWork
    AttachmentCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the file
          readOnly: true
          example: Screenshot.png
        resource_subtype:
          type: string
          description: "The service hosting the attachment. Valid values are `asana`,\
            \ `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`"
          example: dropbox
          x-ballerina-name: resourceSubtype
      description: "An *attachment* object represents any file attached to a task\
        \ in Asana, whether it’s an uploaded file or one associated via a third-party\
        \ service such as Dropbox or Google Drive"
      x-docs-overrides:
        properties.resource_type.example: attachment
    InlineResponse200153:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceResponse'
    InlineResponse200152:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceCompact'
    InlineResponse200151:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMembershipCompact'
    InlineResponse200150:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMembershipCompact'
    InlineResponse200155:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserBaseResponse'
    WorkspaceMembershipRequest:
      $ref: '#/components/schemas/WorkspaceMembershipBase'
    InlineResponse200154:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceResponse'
    ProjectBriefResponseAllOf2:
      type: object
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          - type: object
            description: The project with which this project brief is associated.
        text:
          type: string
          description: "[Opt In](/docs/inputoutput-options). The plain text of the\
            \ project brief"
          example: This is a project brief.
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/11111111/22222222
          x-ballerina-name: permalinkUrl
    TagRequest:
      allOf:
      - $ref: '#/components/schemas/TagBase'
      - $ref: '#/components/schemas/TagRequestAllOf2'
    Like:
      type: object
      properties:
        gid:
          type: string
          description: "Globally unique identifier of the object, as a string"
          readOnly: true
          example: "12345"
        user:
          $ref: '#/components/schemas/UserCompact'
      description: An object to represent a user's like
    ProjectsBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectRequest'
    PortfolioGidAddMembersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddMembersRequest'
    AttachmentResponse:
      allOf:
      - $ref: '#/components/schemas/AttachmentBase'
      - $ref: '#/components/schemas/AttachmentResponseAllOf2'
    WorkspaceRequest:
      $ref: '#/components/schemas/WorkspaceBase'
    InlineResponse2019:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse200142:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/AsanaNamedResource'
    InlineResponse200141:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserResponse'
    WorkspacesworkspaceGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceRequest'
    InlineResponse200140:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserCompact'
    WebhookCompactAllOf2:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/AsanaNamedResource'
        active:
          type: boolean
          description: "If true, the webhook will send events - if false it is considered\
            \ inactive and will not generate events"
          readOnly: true
          example: false
        target:
          type: string
          description: The URL to receive the HTTP POST
          format: uri
          readOnly: true
          example: https://example.com/receive-webhook/7654
      description: "Webhook objects represent the state of an active subscription\
        \ for a server to be updated with information from Asana. This schema represents\
        \ the subscription itself, not the objects that are sent to the server. For\
        \ information on those please refer to the [event](/reference/events) schema"
      x-docs-overrides:
        properties.resource_type.example: webhook
    StoriesstoryGidBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StoryRequest'
    TaskGidAddFollowersBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskAddFollowersRequest'
    InlineResponse200146:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookResponse'
    InlineResponse200145:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookResponse'
    EnumOptionBase:
      $ref: '#/components/schemas/EnumOption'
    InlineResponse200144:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserCompact'
    InlineResponse200143:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserCompact'
    InlineResponse200149:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceMembershipResponse'
    TemplateRole:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TemplateRoleAllOf2'
    InlineResponse200148:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    SectionGidAddTaskBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionTaskInsertRequest'
    InlineResponse200147:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookResponse'
    WebhookCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/WebhookCompactAllOf2'
    CustomFieldSettingResponseAllOf2:
      type: object
      properties:
        is_important:
          type: boolean
          description: '`is_important` is used in the Asana web application to determine
            if this custom field is displayed in the list/grid view of a project or
            portfolio'
          readOnly: true
          example: false
          x-ballerina-name: isImportant
        parent:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          - type: object
            description: The parent to which the custom field is applied. This can
              be a project or portfolio and indicates that the tasks or projects that
              the parent contains may be given custom field values for this custom
              field.
            readOnly: true
        custom_field:
          allOf:
          - $ref: '#/components/schemas/CustomFieldResponse'
          - type: object
            description: The custom field that is applied to the `parent`.
            readOnly: true
          x-ballerina-name: customField
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectCompact'
          - type: object
            description: "*Deprecated: new integrations should prefer the `parent`\
              \ field.* The id of the project that this custom field settings refers\
              \ to."
            readOnly: true
    TagBase:
      allOf:
      - $ref: '#/components/schemas/TagCompact'
      - $ref: '#/components/schemas/TagBaseAllOf2'
    InlineResponse20111:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    InlineResponse20110:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    TeamGidRemoveUserBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamRemoveUserRequest'
    TagResponseAllOf2:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/WorkspaceCompact'
        followers:
          type: array
          description: Array of users following this tag
          readOnly: true
          items:
            $ref: '#/components/schemas/UserCompact'
        created_at:
          type: string
          description: The time at which this resource was created
          format: date-time
          readOnly: true
          example: 2012-02-22T02:06:58.147Z
          x-ballerina-name: createdAt
        permalink_url:
          type: string
          description: A url that points directly to the object within Asana
          readOnly: true
          example: https://app.asana.com/0/resource/123456789/list
          x-ballerina-name: permalinkUrl
    EnumOptionsInsertBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOptionInsertRequest'
    InlineResponse20113:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    InlineResponse20112:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
    WebhooksBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookRequest'
    GoalRemoveSupportingRelationshipRequest:
      required:
      - supporting_resource
      type: object
      properties:
        supporting_resource:
          type: string
          description: "The gid of the supporting resource to remove from the parent\
            \ goal. Must be the gid of a goal, project, task, or portfolio"
          example: "12345"
          x-ballerina-name: supportingResource
    InlineResponse20115:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatusUpdateResponse'
    RemoveCustomFieldSettingRequest:
      required:
      - custom_field
      type: object
      properties:
        custom_field:
          type: string
          description: The custom field to remove from this portfolio
          example: "14916"
          x-ballerina-name: customField
    InlineResponse20114:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SectionResponse'
    ProjectUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/ProjectBase'
      - $ref: '#/components/schemas/ProjectUpdateRequestAllOf2'
    TaskTemplateRecipe:
      allOf:
      - $ref: '#/components/schemas/TaskTemplateRecipeCompact'
      - $ref: '#/components/schemas/TaskTemplateRecipeAllOf2'
    InlineResponse20117:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagResponse'
    WorkspaceMembershipCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/WorkspaceMembershipCompactAllOf2'
    InlineResponse20116:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StoryResponse'
    GoalUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/GoalRequestBase'
      - $ref: '#/components/schemas/GoalUpdateRequestAllOf2'
    InlineResponse20119:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    InlineResponse20118:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagResponse'
    UserTaskListCompactAllOf2:
      type: object
      properties:
        owner:
          description: "The owner of the user task list, i.e. the person whose My\
            \ Tasks is represented by this resource"
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserCompact'
        workspace:
          description: The workspace in which the user task list is located
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/WorkspaceCompact'
        name:
          type: string
          description: The name of the user task list
          example: My Tasks in My Workspace
      description: "A user task list represents the tasks assigned to a particular\
        \ user. It provides API access to a user’s [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks)\
        \ view in Asana"
      x-docs-overrides:
        properties.resource_type.example: user_task_list
    ProjectDuplicateRequest:
      required:
      - name
      type: object
      properties:
        include:
          pattern: "([allocations|members|notes|forms|task_notes|task_assignee|task_subtasks|task_attachments|task_dates|task_dependencies|task_followers|task_tags|task_projects])(,\\\
            1)*"
          type: string
          description: |-
            A comma-separated list of elements that will be duplicated to the new project. Tasks are always included.
            ##### Fields
            - allocations
            - forms
            - members
            - notes
            - task_assignee
            - task_attachments
            - task_dates
            - task_dependencies
            - task_followers
            - task_notes
            - task_projects
            - task_subtasks
            - task_tags
          example: "[\"allocations,members,notes,forms,task_notes,task_assignee,task_subtasks,task_attachments,task_dates,task_dependencies,task_followers,task_tags,task_projects\"\
            ]"
        schedule_dates:
          allOf:
          - $ref: '#/components/schemas/ProjectDuplicateRequestScheduleDates'
          x-ballerina-name: scheduleDates
        name:
          type: string
          description: The name of the new project
          example: New Project Name
        team:
          type: string
          description: "Sets the team of the new project. If team is not defined,\
            \ the new project will be in the same team as the the original project"
          example: "12345"
    TagCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/TagCompactAllOf2'
    CreateTimeTrackingEntryRequest:
      type: object
      properties:
        entered_on:
          type: string
          description: '*Optional*. The day that this entry is logged on. Defaults
            to today if not specified'
          format: date
          example: 2023-03-19
          x-ballerina-name: enteredOn
        duration_minutes:
          type: integer
          description: Time in minutes tracked by the entry. Must be greater than
            0
          example: 12
          x-ballerina-name: durationMinutes
    InlineResponse20120:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    WorkspaceCompactAllOf2:
      type: object
      properties:
        name:
          type: string
          description: The name of the workspace
          example: My Company Workspace
      description: A *workspace* is the highest-level organizational unit in Asana.
        All projects and tasks have an associated workspace
      x-docs-overrides:
        properties.resource_type.example: workspace
    InlineResponse20122:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskResponse'
    InlineResponse20121:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobResponse'
    InlineResponse20124:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TimeTrackingEntryBase'
    OrganizationExportCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/OrganizationExportCompactAllOf2'
    ProjectGidDuplicateBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectDuplicateRequest'
    TaskGidAddProjectBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskAddProjectRequest'
    InlineResponse20123:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TeamResponse'
    InlineResponse20125:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookResponse'
    WorkspaceGidAddUserBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceAddUserRequest'
    AuditLogEventResource:
      type: object
      properties:
        gid:
          type: string
          description: Globally unique identifier of the resource
          example: "1111"
        resource_type:
          type: string
          description: The type of resource
          example: task
          x-ballerina-name: resourceType
        name:
          type: string
          description: The name of the resource
          nullable: true
          example: Example Task
        resource_subtype:
          type: string
          description: The subtype of resource. Most resources will not have a subtype
          example: milestone
          x-ballerina-name: resourceSubtype
        email:
          type: string
          description: "The email of the resource, if applicable"
      description: The primary object that was affected by this event
    Preview:
      type: object
      properties:
        footer:
          type: string
          description: Text to display in the footer
          example: "Mar 17, 2019 1:25 PM"
        html_text:
          type: string
          description: HTML formatted text for the body of the preview
          example: <body>Great! I like this idea.</body>
          x-ballerina-name: htmlText
        header:
          type: string
          description: Text to display in the header
          example: Asana for Slack
        title_link:
          type: string
          description: Where to title will link to
          example: https://asana.slack.com/archives/ABCDEFG/12345678
          x-ballerina-name: titleLink
        text:
          type: string
          description: Text for the body of the preview
          example: Great! I like this idea.
        title:
          type: string
          description: Text to display as the title
          example: Greg
        fallback:
          type: string
          description: Some fallback text to display if unable to display the full
            preview
          example: "Greg: Great! I like this idea.\\n\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678"
        header_link:
          type: string
          description: Where the header will link to
          example: https://asana.comn/apps/slack
          x-ballerina-name: headerLink
      description: |-
        A collection of rich text that will be displayed as a preview to another app.

        This is read-only except for a small group of whitelisted apps
      readOnly: true
    WebhookResponseFilters:
      description: A set of filters to specify a whitelist for what types of events
        will be delivered
      allOf:
      - $ref: '#/components/schemas/WebhookFilter'
      - $ref: '#/components/schemas/FiltersAllOf21'
    PortfolioMembershipBase:
      $ref: '#/components/schemas/PortfolioMembershipCompact'
    PortfolioGidRemoveCustomFieldSettingBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RemoveCustomFieldSettingRequest'
    InlineResponse2041:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    InlineResponse20010:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
    WorkspaceCompact:
      allOf:
      - $ref: '#/components/schemas/AsanaResource'
      - $ref: '#/components/schemas/WorkspaceCompactAllOf2'
    InlineResponse20012:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOption'
    InlineResponse20011:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldResponse'
    TaskRemoveFollowersRequest:
      required:
      - followers
      type: object
      properties:
        followers:
          type: array
          description: "An array of strings identifying users. These can either be\
            \ the string \"me\", an email, or the gid of a user"
          example:
          - "13579"
          - "321654"
          items:
            type: string
    InlineResponse20014:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
        has_more:
          type: boolean
          description: Indicates whether there are more events to pull
          example: true
          x-ballerina-name: hasMore
        sync:
          type: string
          description: A sync token to be used with the next call to the /events endpoint
          example: de4774f6915eae04714ca93bb2f5ee81
      description: The full record for all events that have occurred since the sync
        token was created
    InlineResponse20013:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnumOption'
    InlineResponse20016:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRelationshipResponse'
    InlineResponse20015:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRelationshipResponse'
    InlineResponse20018:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GoalRelationshipResponse'
    CustomFieldSettingCompactAllOf2:
      type: object
      description: Custom Fields Settings objects represent the many-to-many join
        of the Custom Field and Project as well as stores information that is relevant
        to that particular pairing
      x-docs-overrides:
        properties.resource_type.example: custom_field_setting
    InlineResponse20017:
      type: object
      properties:
        next_page:
          allOf:
          - $ref: '#/components/schemas/NextPage'
          x-ballerina-name: nextPage
        data:
          type: array
          items:
            $ref: '#/components/schemas/GoalRelationshipCompact'
  responses:
    GenericErrorResponse:
      description: "Sadly, sometimes requests to the API are not successful. Failures\
        \ can occur for a wide range of reasons. In all cases, the API should return\
        \ an HTTP Status Code that indicates the nature of the failure, with a response\
        \ body in JSON format containing additional information. In the event of a\
        \ server error the response body will contain an error phrase. These phrases\
        \ are automatically generated using the [node-asana-phrase library](https://github.com/Asana/node-asana-phrase)\
        \ and can be used by Asana support to quickly look up the incident that caused\
        \ the server error."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: This usually occurs because of a missing or malformed parameter.
        Check the documentation and the syntax of your request and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: "A valid authentication token was not provided with the request,\
        \ so the API could not associate a user with the request."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    PaymentRequired:
      description: "The request was valid, but the queried object or object mutation\
        \ specified in the request is above your current premium level."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: The authentication and request syntax was valid but the server
        is refusing to complete the request. This can happen if you try to read or
        write to objects or properties that the user does not have access to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: "Either the request method and path supplied do not specify a known\
        \ action in the API, or the object specified by the request does not exist."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    TooManyRequests:
      description: "You have exceeded one of the enforced rate limits in the API.\
        \ See the [documentation on rate limiting](https://developers.asana.com/docs/#rate-limits)\
        \ for more information."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: "There was a problem on Asana’s end. In the event of a server error\
        \ the response body should contain an error phrase. These phrases can be used\
        \ by Asana support to quickly look up the incident that caused the server\
        \ error. Some errors are due to server load, and will not supply an error\
        \ phrase."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadGateway:
      description: There is an issue between the load balancers and Asana's API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServiceUnavailable:
      description: "Either the upstream service is unavailable to the API, or the\
        \ API has been intentionally shut off."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    GatewayTimeout:
      description: This request took too long to complete.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    fields:
      name: opt_fields
      in: query
      description: |-
        Defines fields to return.
        Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.
        The id of included objects will always be returned, regardless of the field options.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
      example:
      - followers
      - assignee
      x-ballerina-name: optFields
    pretty:
      name: opt_pretty
      in: query
      description: |-
        Provides “pretty” output.
        Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      schema:
        type: boolean
      example: true
      x-ballerina-name: optPretty
    limit:
      name: limit
      in: query
      description: |-
        Results per page.
        The number of objects to return per page. The value must be between 1 and 100
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 1
        type: integer
      example: 50
    offset:
      name: offset
      in: query
      description: |-
        Offset token.
        An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.
        'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
    archived_query_param:
      name: archived
      in: query
      description: Only return projects whose `archived` field takes on the value
        of this parameter
      required: false
      style: form
      explode: true
      schema:
        type: boolean
      example: false
    attachment_path_gid:
      name: attachment_gid
      in: path
      description: Globally unique identifier for the attachment
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: attachment
      x-ballerina-name: attachmentGid
    custom_field_path_gid:
      name: custom_field_gid
      in: path
      description: Globally unique identifier for the custom field
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: custom_field
      x-ballerina-name: customFieldGid
    custom_id:
      name: custom_id
      in: path
      description: Generated custom ID for a task
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: EX-1
      x-ballerina-name: customId
    goal_path_gid:
      name: goal_gid
      in: path
      description: Globally unique identifier for the goal
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: goal
      x-ballerina-name: goalGid
    goal_relationship_path_gid:
      name: goal_relationship_gid
      in: path
      description: Globally unique identifier for the goal relationship
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: goal_relationship
      x-ballerina-name: goalRelationshipGid
    job_path_gid:
      name: job_gid
      in: path
      description: Globally unique identifier for the job
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: job
      x-ballerina-name: jobGid
    membership_path_gid:
      name: membership_gid
      in: path
      description: Globally unique identifier for the membership
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: membership
      x-ballerina-name: membershipGid
    organization_export_path_gid:
      name: organization_export_gid
      in: path
      description: Globally unique identifier for the organization export
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: organization_export
      x-ballerina-name: organizationExportGid
    project_brief_path_gid:
      name: project_brief_gid
      in: path
      description: Globally unique identifier for the project brief
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: project_brief
      x-ballerina-name: projectBriefGid
    project_path_gid:
      name: project_gid
      in: path
      description: Globally unique identifier for the project
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1331"
      x-env-variable: project
      x-ballerina-name: projectGid
    project_template_path_gid:
      name: project_template_gid
      in: path
      description: Globally unique identifier for the project template
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1331"
      x-env-variable: project_template
      x-ballerina-name: projectTemplateGid
    project_membership_path_gid:
      name: project_membership_gid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1331"
      x-env-variable: project_membership
      x-ballerina-name: projectMembershipGid
    project_status_path_gid:
      name: project_status_gid
      in: path
      description: The project status update to get
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "321654"
      x-env-variable: project_status
      x-ballerina-name: projectStatusGid
    status_update_path_gid:
      name: status_update_gid
      in: path
      description: The status update to get
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "321654"
      x-env-variable: status
      x-ballerina-name: statusUpdateGid
    portfolio_path_gid:
      name: portfolio_gid
      in: path
      description: Globally unique identifier for the portfolio
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: portfolio
      x-ballerina-name: portfolioGid
    portfolio_membership_path_gid:
      name: portfolio_membership_gid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1331"
      x-env-variable: portfolio_membership
      x-ballerina-name: portfolioMembershipGid
    portfolio_query_param:
      name: portfolio
      in: query
      description: The portfolio to filter results on
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345"
      x-env-variable: portfolio
    rule_trigger_path_gid:
      name: rule_trigger_gid
      in: path
      description: The ID of the incoming web request trigger. This value is a path
        parameter that is automatically generated for the API endpoint
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: rule
      x-ballerina-name: ruleTriggerGid
    section_path_gid:
      name: section_gid
      in: path
      description: The globally unique identifier for the section
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "321654"
      x-env-variable: section
      x-ballerina-name: sectionGid
    story_path_gid:
      name: story_gid
      in: path
      description: Globally unique identifier for the story
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "35678"
      x-env-variable: story
      x-ballerina-name: storyGid
    tag_path_gid:
      name: tag_gid
      in: path
      description: Globally unique identifier for the tag
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "11235"
      x-env-variable: tag
      x-ballerina-name: tagGid
    task_path_gid:
      name: task_gid
      in: path
      description: The task to operate on
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "321654"
      x-env-variable: task
      x-ballerina-name: taskGid
    task_template_path_gid:
      name: task_template_gid
      in: path
      description: Globally unique identifier for the task template
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1331"
      x-env-variable: task_template
      x-ballerina-name: taskTemplateGid
    team_path_gid:
      name: team_gid
      in: path
      description: Globally unique identifier for the team
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "159874"
      x-env-variable: team
      x-ballerina-name: teamGid
    team_query_param:
      name: team
      in: query
      description: The team to filter projects on
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "14916"
      x-env-variable: team
    team_membership_path_gid:
      name: team_membership_gid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "724362"
      x-env-variable: team_membership
      x-ballerina-name: teamMembershipGid
    time_period_path_gid:
      name: time_period_gid
      in: path
      description: Globally unique identifier for the time period
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "917392"
      x-env-variable: time_period
      x-ballerina-name: timePeriodGid
    time_tracking_entry_path_gid:
      name: time_tracking_entry_gid
      in: path
      description: Globally unique identifier for the time tracking entry
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "917392"
      x-env-variable: time_tracking_entry
      x-ballerina-name: timeTrackingEntryGid
    user_query_param:
      name: user
      in: query
      description: "A string identifying a user. This can either be the string \"\
        me\", an email, or the gid of a user"
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: me
      x-env-variable: user
    user_path_gid:
      name: user_gid
      in: path
      description: "A string identifying a user. This can either be the string \"\
        me\", an email, or the gid of a user"
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: me
      x-env-variable: user
      x-ballerina-name: userGid
    user_task_list_path_gid:
      name: user_task_list_gid
      in: path
      description: Globally unique identifier for the user task list
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: user_task_list
      x-ballerina-name: userTaskListGid
    webhook_path_gid:
      name: webhook_gid
      in: path
      description: Globally unique identifier for the webhook
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: webhook
      x-ballerina-name: webhookGid
    workspace_path_gid:
      name: workspace_gid
      in: path
      description: Globally unique identifier for the workspace or organization
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: workspace
      x-ballerina-name: workspaceGid
    workspace_query_param:
      name: workspace
      in: query
      description: The workspace to filter results on
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "12345"
      x-env-variable: workspace
    workspace_membership_path_gid:
      name: workspace_membership_gid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "12345"
      x-env-variable: workspace_membership
      x-ballerina-name: workspaceMembershipGid
    audit_log_start_at:
      name: start_at
      in: query
      description: Filter to events created after this time (inclusive)
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      x-ballerina-name: startAt
    audit_log_end_at:
      name: end_at
      in: query
      description: Filter to events created before this time (exclusive)
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      x-ballerina-name: endAt
    audit_log_event_type:
      name: event_type
      in: query
      description: |-
        Filter to events of this type.
        Refer to the [supported audit log events](/docs/audit-log-events#supported-audit-log-events) for a full list of values
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-ballerina-name: eventType
    audit_log_actor_type:
      name: actor_type
      in: query
      description: |-
        Filter to events with an actor of this type.
        This only needs to be included if querying for actor types without an ID. If `actor_gid` is included, this should be excluded
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - user
        - asana
        - asana_support
        - anonymous
        - external_administrator
      x-ballerina-name: actorType
    audit_log_actor_gid:
      name: actor_gid
      in: query
      description: Filter to events triggered by the actor with this ID
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-ballerina-name: actorGid
    audit_log_resource_gid:
      name: resource_gid
      in: query
      description: Filter to events with this resource ID
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-ballerina-name: resourceGid
    completed_since:
      name: completed_since
      in: query
      description: |
        Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: 2012-02-22T02:06:58.158Z
      x-ballerina-name: completedSince
    member:
      name: member
      in: query
      description: |
        Member object gid can be user or team.
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: "123"
    message_path_gid:
      name: message_gid
      in: path
      description: The message to get.
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "321654"
      x-env-variable: message
      x-ballerina-name: messageGid
    allocation_path_gid:
      name: allocation_gid
      in: path
      description: Globally unique identifier for the allocation.
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "77688"
      x-env-variable: allocation
      x-ballerina-name: allocationGid
  securitySchemes:
    personalAccessToken:
      type: http
      description: A personal access token allows access to the api for the user who
        created it. This should be kept a secret and be treated like a password.
      scheme: bearer
    oauth2:
      type: oauth2
      description: |-
        We require that applications designed to access the Asana API on behalf of multiple users implement OAuth 2.0.
        Asana supports the Authorization Code Grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://app.asana.com/-/oauth_authorize
          tokenUrl: https://app.asana.com/-/oauth_token
          refreshUrl: https://app.asana.com/-/oauth_token
          scopes:
            default: "Provides access to all endpoints documented in our API reference.\
              \ If no scopes are requested, this scope is assumed by default."
            openid: Provides access to OpenID Connect ID tokens and the OpenID Connect
              user info endpoint.
            email: Provides access to the user’s email through the OpenID Connect
              user info endpoint.
            profile: Provides access to the user’s name and profile photo through
              the OpenID Connect user info endpoint.
x-readme:
  proxy-enabled: false
